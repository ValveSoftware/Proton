case 513:
    switch(callback_len){
    default:
    case 16: cb_LobbyCreated_t_16(lin_callback, callback); break;
    }
    break;
case 3415:
    switch(callback_len){
    default:
    case 24: cb_RemoveAppDependencyResult_t_24(lin_callback, callback); break;
    }
    break;
case 3416:
    switch(callback_len){
    default:
    case 152: cb_GetAppDependenciesResult_t_152(lin_callback, callback); break;
    }
    break;
case 1303:
    switch(callback_len){
    default:
    case 288: cb_RemoteStorageAppSyncProgress_t_288(lin_callback, callback); break;
    }
    break;
case 152:
    switch(callback_len){
    default:
    case 24: cb_MicroTxnAuthorizationResponse_t_24(lin_callback, callback); break;
    }
    break;
case 1307:
    switch(callback_len){
    default:
    case 280: cb_RemoteStorageFileShareResult_t_280(lin_callback, callback); break;
    case 16: cb_RemoteStorageFileShareResult_t_16(lin_callback, callback); break;
    }
    break;
case 1308:
    switch(callback_len){
    default:
    case 40: cb_RemoteStorageDownloadUGCResult_t_40(lin_callback, callback); break;
    }
    break;
case 1309:
    switch(callback_len){
    default:
    case 24: cb_RemoteStoragePublishFileResult_t_24(lin_callback, callback); break;
    case 16: cb_RemoteStoragePublishFileResult_t_16(lin_callback, callback); break;
    }
    break;
case 1310:
    switch(callback_len){
    default:
    case 1744: cb_RemoteStorageGetPublishedFileDetailsResult_t_1744(lin_callback, callback); break;
    }
    break;
case 1311:
    switch(callback_len){
    default:
    case 16: cb_RemoteStorageDeletePublishedFileResult_t_16(lin_callback, callback); break;
    }
    break;
case 1312:
    switch(callback_len){
    default:
    case 416: cb_RemoteStorageEnumerateUserPublishedFilesResult_t_416(lin_callback, callback); break;
    }
    break;
case 1313:
    switch(callback_len){
    default:
    case 16: cb_RemoteStorageSubscribePublishedFileResult_t_16(lin_callback, callback); break;
    }
    break;
case 1314:
    switch(callback_len){
    default:
    case 616: cb_RemoteStorageEnumerateUserSubscribedFilesResult_t_616(lin_callback, callback); break;
    }
    break;
case 1315:
    switch(callback_len){
    default:
    case 16: cb_RemoteStorageUnsubscribePublishedFileResult_t_16(lin_callback, callback); break;
    }
    break;
case 1316:
    switch(callback_len){
    default:
    case 24: cb_RemoteStorageUpdatePublishedFileResult_t_24(lin_callback, callback); break;
    case 16: cb_RemoteStorageUpdatePublishedFileResult_t_16(lin_callback, callback); break;
    }
    break;
case 1317:
    switch(callback_len){
    default:
    case 296: cb_RemoteStorageDownloadUGCResult_t_296(lin_callback, callback); break;
    }
    break;
case 1318:
    switch(callback_len){
    default:
    case 9760: cb_RemoteStorageGetPublishedFileDetailsResult_t_9760(lin_callback, callback); break;
    case 9752: cb_RemoteStorageGetPublishedFileDetailsResult_t_9752(lin_callback, callback); break;
    case 9496: cb_RemoteStorageGetPublishedFileDetailsResult_t_9496(lin_callback, callback); break;
    }
    break;
case 1319:
    switch(callback_len){
    default:
    case 624: cb_RemoteStorageEnumerateWorkshopFilesResult_t_624(lin_callback, callback); break;
    case 616: cb_RemoteStorageEnumerateWorkshopFilesResult_t_616(lin_callback, callback); break;
    }
    break;
case 1320:
    switch(callback_len){
    default:
    case 32: cb_RemoteStorageGetPublishedItemVoteDetailsResult_t_32(lin_callback, callback); break;
    }
    break;
case 1324:
    switch(callback_len){
    default:
    case 16: cb_RemoteStorageUpdateUserPublishedItemVoteResult_t_16(lin_callback, callback); break;
    }
    break;
case 1325:
    switch(callback_len){
    default:
    case 24: cb_RemoteStorageUserVoteDetails_t_24(lin_callback, callback); break;
    }
    break;
case 1326:
    switch(callback_len){
    default:
    case 416: cb_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_416(lin_callback, callback); break;
    }
    break;
case 1327:
    switch(callback_len){
    default:
    case 24: cb_RemoteStorageSetUserPublishedFileActionResult_t_24(lin_callback, callback); break;
    }
    break;
case 1330:
    switch(callback_len){
    default:
    case 24: cb_RemoteStoragePublishedFileUpdated_t_24(lin_callback, callback); break;
    }
    break;
case 2101:
    switch(callback_len){
    default:
    case 32: cb_HTTPRequestCompleted_t_32(lin_callback, callback); break;
    case 24: cb_HTTPRequestCompleted_t_24(lin_callback, callback); break;
    }
    break;
case 2102:
    switch(callback_len){
    default:
    case 16: cb_HTTPRequestHeadersReceived_t_16(lin_callback, callback); break;
    }
    break;
case 2103:
    switch(callback_len){
    default:
    case 24: cb_HTTPRequestDataReceived_t_24(lin_callback, callback); break;
    }
    break;
case 3402:
    switch(callback_len){
    default:
    case 9784: cb_SteamUGCRequestUGCDetailsResult_t_9784(lin_callback, callback); break;
    case 9776: cb_SteamUGCRequestUGCDetailsResult_t_9776(lin_callback, callback); break;
    case 9768: cb_SteamUGCRequestUGCDetailsResult_t_9768(lin_callback, callback); break;
    }
    break;
case 3403:
    switch(callback_len){
    default:
    case 24: cb_CreateItemResult_t_24(lin_callback, callback); break;
    }
    break;
case 3405:
    switch(callback_len){
    default:
    case 16: cb_ItemInstalled_t_16(lin_callback, callback); break;
    }
    break;
case 3406:
    switch(callback_len){
    default:
    case 24: cb_DownloadItemResult_t_24(lin_callback, callback); break;
    }
    break;
case 209:
    switch(callback_len){
    default:
    case 40: cb_GSReputation_t_40(lin_callback, callback); break;
    }
    break;
case 1106:
    switch(callback_len){
    default:
    case 32: cb_LeaderboardScoreUploaded_t_32(lin_callback, callback); break;
    }
    break;
case 3412:
    switch(callback_len){
    default:
    case 24: cb_AddUGCDependencyResult_t_24(lin_callback, callback); break;
    }
    break;
case 3413:
    switch(callback_len){
    default:
    case 24: cb_RemoveUGCDependencyResult_t_24(lin_callback, callback); break;
    }
    break;
case 3414:
    switch(callback_len){
    default:
    case 24: cb_AddAppDependencyResult_t_24(lin_callback, callback); break;
    }
    break;
case 1111:
    switch(callback_len){
    default:
    case 16: cb_LeaderboardUGCSet_t_16(lin_callback, callback); break;
    }
    break;
case 1112:
    switch(callback_len){
    default:
    case 24: cb_PS3TrophiesInstalled_t_24(lin_callback, callback); break;
    }
    break;
case 3417:
    switch(callback_len){
    default:
    case 16: cb_DeleteItemResult_t_16(lin_callback, callback); break;
    }
    break;
case 4704:
    switch(callback_len){
    default:
    case 24: cb_SteamInventoryStartPurchaseResult_t_24(lin_callback, callback); break;
    }
    break;
case 4516:
    switch(callback_len){
    default:
    case 12: cb_HTML_FileOpenDialog_t_12(lin_callback, callback); break;
    }
    break;
case 1023:
    switch(callback_len){
    default:
    case 40: cb_FileDetailsResult_t_40(lin_callback, callback); break;
    }
    break;
