/* This file is auto-generated, do not edit. */

#if 0
#pragma makedep unix
#endif

#include "unix_private.h"

extern "C" const unixlib_entry_t __wine_unix_call_funcs[] =
{
    steamclient_init,
    steamclient_next_callback,
    steamclient_CreateInterface,
    steamclient_Steam_GetAPICallResult,
    steamclient_Steam_BGetCallback,
    steamclient_callback_message_receive,
    steamclient_Steam_FreeLastCallback,
    steamclient_Steam_ReleaseThreadLocalMemory,
    steamclient_Steam_IsKnownInterface,
    steamclient_Steam_NotifyMissingInterface,
    steamclient_networking_messages_receive_144,
    steamclient_networking_messages_receive_147,
    steamclient_networking_messages_receive_153a,
    steamclient_networking_message_release_147,
    steamclient_networking_message_release_153a,
    ISteamAppList_STEAMAPPLIST_INTERFACE_VERSION001_GetNumInstalledApps,
    ISteamAppList_STEAMAPPLIST_INTERFACE_VERSION001_GetInstalledApps,
    ISteamAppList_STEAMAPPLIST_INTERFACE_VERSION001_GetAppName,
    ISteamAppList_STEAMAPPLIST_INTERFACE_VERSION001_GetAppInstallDir,
    ISteamAppList_STEAMAPPLIST_INTERFACE_VERSION001_GetAppBuildId,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION001_GetAppData,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION002_BIsSubscribed,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION002_BIsLowViolence,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION002_BIsCybercafe,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION002_BIsVACBanned,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION002_GetCurrentGameLanguage,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION002_GetAvailableGameLanguages,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION002_BIsSubscribedApp,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION003_BIsSubscribed,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION003_BIsLowViolence,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION003_BIsCybercafe,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION003_BIsVACBanned,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION003_GetCurrentGameLanguage,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION003_GetAvailableGameLanguages,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION003_BIsSubscribedApp,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION003_BIsDlcInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_BIsSubscribed,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_BIsLowViolence,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_BIsCybercafe,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_BIsVACBanned,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_GetCurrentGameLanguage,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_GetAvailableGameLanguages,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_BIsSubscribedApp,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_BIsDlcInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_GetEarliestPurchaseUnixTime,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_BIsSubscribedFromFreeWeekend,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_GetDLCCount,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_BGetDLCDataByIndex,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_InstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION004_UninstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_BIsSubscribed,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_BIsLowViolence,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_BIsCybercafe,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_BIsVACBanned,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_GetCurrentGameLanguage,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_GetAvailableGameLanguages,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_BIsSubscribedApp,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_BIsDlcInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_GetEarliestPurchaseUnixTime,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_BIsSubscribedFromFreeWeekend,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_GetDLCCount,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_BGetDLCDataByIndex,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_InstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_UninstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_RequestAppProofOfPurchaseKey,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_GetCurrentBetaName,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_MarkContentCorrupt,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_GetInstalledDepots,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_GetAppInstallDir,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION005_BIsAppInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_BIsSubscribed,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_BIsLowViolence,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_BIsCybercafe,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_BIsVACBanned,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_GetCurrentGameLanguage,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_GetAvailableGameLanguages,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_BIsSubscribedApp,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_BIsDlcInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_GetEarliestPurchaseUnixTime,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_BIsSubscribedFromFreeWeekend,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_GetDLCCount,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_BGetDLCDataByIndex,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_InstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_UninstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_RequestAppProofOfPurchaseKey,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_GetCurrentBetaName,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_MarkContentCorrupt,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_GetInstalledDepots,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_GetAppInstallDir,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_BIsAppInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_GetAppOwner,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION006_GetLaunchQueryParam,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_BIsSubscribed,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_BIsLowViolence,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_BIsCybercafe,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_BIsVACBanned,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetCurrentGameLanguage,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetAvailableGameLanguages,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_BIsSubscribedApp,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_BIsDlcInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetEarliestPurchaseUnixTime,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_BIsSubscribedFromFreeWeekend,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetDLCCount,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_BGetDLCDataByIndex,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_InstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_UninstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_RequestAppProofOfPurchaseKey,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetCurrentBetaName,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_MarkContentCorrupt,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetInstalledDepots,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetAppInstallDir,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_BIsAppInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetAppOwner,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetLaunchQueryParam,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetDlcDownloadProgress,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION007_GetAppBuildId,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsSubscribed,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsLowViolence,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsCybercafe,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsVACBanned,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetCurrentGameLanguage,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetAvailableGameLanguages,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsSubscribedApp,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsDlcInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetEarliestPurchaseUnixTime,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsSubscribedFromFreeWeekend,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetDLCCount,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BGetDLCDataByIndex,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_InstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_UninstallDLC,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_RequestAppProofOfPurchaseKey,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetCurrentBetaName,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_MarkContentCorrupt,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetInstalledDepots,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetAppInstallDir,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsAppInstalled,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetAppOwner,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetLaunchQueryParam,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetDlcDownloadProgress,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetAppBuildId,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_RequestAllProofOfPurchaseKeys,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetFileDetails,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetLaunchCommandLine,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsSubscribedFromFamilySharing,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_BIsTimedTrial,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_SetDlcContext,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetNumBetas,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_GetBetaInfo,
    ISteamApps_STEAMAPPS_INTERFACE_VERSION008_SetActiveBeta,
    ISteamAppTicket_STEAMAPPTICKET_INTERFACE_VERSION001_GetAppOwnershipTicketData,
    ISteamController_STEAMCONTROLLER_INTERFACE_VERSION_Init,
    ISteamController_STEAMCONTROLLER_INTERFACE_VERSION_Shutdown,
    ISteamController_STEAMCONTROLLER_INTERFACE_VERSION_RunFrame,
    ISteamController_STEAMCONTROLLER_INTERFACE_VERSION_GetControllerState,
    ISteamController_STEAMCONTROLLER_INTERFACE_VERSION_TriggerHapticPulse,
    ISteamController_STEAMCONTROLLER_INTERFACE_VERSION_SetOverrideMode,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_Init,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_Shutdown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_CreateBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_RemoveBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_LoadURL,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_SetSize,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_StopLoad,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_Reload,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_GoBack,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_GoForward,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_AddHeader,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_ExecuteJavascript,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_MouseUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_MouseDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_MouseDoubleClick,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_MouseMove,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_MouseWheel,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_KeyDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_KeyUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_KeyChar,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_SetHorizontalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_SetVerticalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_SetKeyFocus,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_ViewSource,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_CopyToClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_PasteFromClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_Find,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_StopFind,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_GetLinkAtPosition,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_AllowStartRequest,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_JSDialogResponse,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_001_FileLoadDialogResponse,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_Init,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_Shutdown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_CreateBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_RemoveBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_LoadURL,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_SetSize,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_StopLoad,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_Reload,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_GoBack,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_GoForward,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_AddHeader,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_ExecuteJavascript,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_MouseUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_MouseDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_MouseDoubleClick,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_MouseMove,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_MouseWheel,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_KeyDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_KeyUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_KeyChar,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_SetHorizontalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_SetVerticalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_SetKeyFocus,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_ViewSource,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_CopyToClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_PasteFromClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_Find,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_StopFind,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_GetLinkAtPosition,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_SetCookie,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_SetPageScaleFactor,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_AllowStartRequest,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_JSDialogResponse,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_002_FileLoadDialogResponse,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_Init,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_Shutdown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_CreateBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_RemoveBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_LoadURL,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_SetSize,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_StopLoad,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_Reload,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_GoBack,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_GoForward,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_AddHeader,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_ExecuteJavascript,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_MouseUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_MouseDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_MouseDoubleClick,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_MouseMove,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_MouseWheel,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_KeyDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_KeyUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_KeyChar,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_SetHorizontalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_SetVerticalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_SetKeyFocus,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_ViewSource,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_CopyToClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_PasteFromClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_Find,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_StopFind,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_GetLinkAtPosition,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_SetCookie,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_SetPageScaleFactor,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_SetBackgroundMode,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_AllowStartRequest,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_JSDialogResponse,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_003_FileLoadDialogResponse,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_Init,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_Shutdown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_CreateBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_RemoveBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_LoadURL,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_SetSize,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_StopLoad,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_Reload,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_GoBack,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_GoForward,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_AddHeader,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_ExecuteJavascript,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_MouseUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_MouseDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_MouseDoubleClick,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_MouseMove,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_MouseWheel,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_KeyDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_KeyUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_KeyChar,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_SetHorizontalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_SetVerticalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_SetKeyFocus,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_ViewSource,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_CopyToClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_PasteFromClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_Find,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_StopFind,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_GetLinkAtPosition,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_SetCookie,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_SetPageScaleFactor,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_SetBackgroundMode,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_SetDPIScalingFactor,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_AllowStartRequest,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_JSDialogResponse,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_004_FileLoadDialogResponse,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_Init,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_Shutdown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_CreateBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_RemoveBrowser,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_LoadURL,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_SetSize,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_StopLoad,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_Reload,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_GoBack,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_GoForward,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_AddHeader,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_ExecuteJavascript,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_MouseUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_MouseDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_MouseDoubleClick,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_MouseMove,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_MouseWheel,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_KeyDown,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_KeyUp,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_KeyChar,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_SetHorizontalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_SetVerticalScroll,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_SetKeyFocus,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_ViewSource,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_CopyToClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_PasteFromClipboard,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_Find,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_StopFind,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_GetLinkAtPosition,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_SetCookie,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_SetPageScaleFactor,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_SetBackgroundMode,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_SetDPIScalingFactor,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_OpenDeveloperTools,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_AllowStartRequest,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_JSDialogResponse,
    ISteamHTMLSurface_STEAMHTMLSURFACE_INTERFACE_VERSION_005_FileLoadDialogResponse,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_CreateHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_SetHTTPRequestContextValue,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_SetHTTPRequestNetworkActivityTimeout,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_SetHTTPRequestHeaderValue,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_SetHTTPRequestGetOrPostParameter,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_SendHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_DeferHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_PrioritizeHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_GetHTTPResponseHeaderSize,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_GetHTTPResponseHeaderValue,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_GetHTTPResponseBodySize,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_GetHTTPResponseBodyData,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_ReleaseHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_GetHTTPDownloadProgressPct,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION001_SetHTTPRequestRawPostBody,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_CreateHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetHTTPRequestContextValue,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetHTTPRequestNetworkActivityTimeout,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetHTTPRequestHeaderValue,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetHTTPRequestGetOrPostParameter,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SendHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SendHTTPRequestAndStreamResponse,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_DeferHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_PrioritizeHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_GetHTTPResponseHeaderSize,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_GetHTTPResponseHeaderValue,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_GetHTTPResponseBodySize,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_GetHTTPResponseBodyData,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_GetHTTPStreamingResponseBodyData,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_ReleaseHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_GetHTTPDownloadProgressPct,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetHTTPRequestRawPostBody,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_CreateCookieContainer,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_ReleaseCookieContainer,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetCookie,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetHTTPRequestCookieContainer,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetHTTPRequestUserAgentInfo,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetHTTPRequestRequiresVerifiedCertificate,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_SetHTTPRequestAbsoluteTimeoutMS,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION002_GetHTTPRequestWasTimedOut,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_CreateHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetHTTPRequestContextValue,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetHTTPRequestNetworkActivityTimeout,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetHTTPRequestHeaderValue,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetHTTPRequestGetOrPostParameter,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SendHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SendHTTPRequestAndStreamResponse,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_DeferHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_PrioritizeHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_GetHTTPResponseHeaderSize,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_GetHTTPResponseHeaderValue,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_GetHTTPResponseBodySize,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_GetHTTPResponseBodyData,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_GetHTTPStreamingResponseBodyData,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_ReleaseHTTPRequest,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_GetHTTPDownloadProgressPct,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetHTTPRequestRawPostBody,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_CreateCookieContainer,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_ReleaseCookieContainer,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetCookie,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetHTTPRequestCookieContainer,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetHTTPRequestUserAgentInfo,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetHTTPRequestRequiresVerifiedCertificate,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_SetHTTPRequestAbsoluteTimeoutMS,
    ISteamHTTP_STEAMHTTP_INTERFACE_VERSION003_GetHTTPRequestWasTimedOut,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GetResultStatus,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GetResultItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GetResultTimestamp,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_CheckResultSteamID,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_DestroyResult,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GetAllItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GetItemsByID,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_SerializeResult,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_DeserializeResult,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GenerateItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GrantPromoItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_AddPromoItem,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_AddPromoItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_ConsumeItem,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_ExchangeItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_TransferItemQuantity,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_SendItemDropHeartbeat,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_TriggerItemDrop,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_TradeItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_LoadItemDefinitions,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GetItemDefinitionIDs,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GetItemDefinitionProperty,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_RequestEligiblePromoItemDefinitionsIDs,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V001_GetEligiblePromoItemDefinitionIDs,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetResultStatus,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetResultItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetResultItemProperty,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetResultTimestamp,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_CheckResultSteamID,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_DestroyResult,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetAllItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetItemsByID,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_SerializeResult,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_DeserializeResult,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GenerateItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GrantPromoItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_AddPromoItem,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_AddPromoItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_ConsumeItem,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_ExchangeItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_TransferItemQuantity,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_SendItemDropHeartbeat,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_TriggerItemDrop,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_TradeItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_LoadItemDefinitions,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetItemDefinitionIDs,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetItemDefinitionProperty,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_RequestEligiblePromoItemDefinitionsIDs,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetEligiblePromoItemDefinitionIDs,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_StartPurchase,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_RequestPrices,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetNumItemsWithPrices,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetItemsWithPrices,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_GetItemPrice,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_StartUpdateProperties,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_RemoveProperty,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_SetProperty,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_SetProperty_2,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_SetProperty_3,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_SetProperty_4,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V002_SubmitUpdateProperties,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetResultStatus,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetResultItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetResultItemProperty,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetResultTimestamp,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_CheckResultSteamID,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_DestroyResult,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetAllItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetItemsByID,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_SerializeResult,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_DeserializeResult,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GenerateItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GrantPromoItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_AddPromoItem,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_AddPromoItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_ConsumeItem,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_ExchangeItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_TransferItemQuantity,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_SendItemDropHeartbeat,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_TriggerItemDrop,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_TradeItems,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_LoadItemDefinitions,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetItemDefinitionIDs,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetItemDefinitionProperty,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_RequestEligiblePromoItemDefinitionsIDs,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetEligiblePromoItemDefinitionIDs,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_StartPurchase,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_RequestPrices,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetNumItemsWithPrices,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetItemsWithPrices,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_GetItemPrice,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_StartUpdateProperties,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_RemoveProperty,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_SetProperty,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_SetProperty_2,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_SetProperty_3,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_SetProperty_4,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_SubmitUpdateProperties,
    ISteamInventory_STEAMINVENTORY_INTERFACE_V003_InspectItem,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_RegisterSteamMusicRemote,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_DeregisterSteamMusicRemote,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_BIsCurrentMusicRemote,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_BActivationSuccess,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_SetDisplayName,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_SetPNGIcon_64x64,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_EnablePlayPrevious,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_EnablePlayNext,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_EnableShuffled,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_EnableLooped,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_EnableQueue,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_EnablePlaylists,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_UpdatePlaybackStatus,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_UpdateShuffled,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_UpdateLooped,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_UpdateVolume,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_CurrentEntryWillChange,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_CurrentEntryIsAvailable,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_UpdateCurrentEntryText,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_UpdateCurrentEntryElapsedSeconds,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_UpdateCurrentEntryCoverArt,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_CurrentEntryDidChange,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_QueueWillChange,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_ResetQueueEntries,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_SetQueueEntry,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_SetCurrentQueueEntry,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_QueueDidChange,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_PlaylistWillChange,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_ResetPlaylistEntries,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_SetPlaylistEntry,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_SetCurrentPlaylistEntry,
    ISteamMusicRemote_STEAMMUSICREMOTE_INTERFACE_VERSION001_PlaylistDidChange,
    ISteamMusic_STEAMMUSIC_INTERFACE_VERSION001_BIsEnabled,
    ISteamMusic_STEAMMUSIC_INTERFACE_VERSION001_BIsPlaying,
    ISteamMusic_STEAMMUSIC_INTERFACE_VERSION001_GetPlaybackStatus,
    ISteamMusic_STEAMMUSIC_INTERFACE_VERSION001_Play,
    ISteamMusic_STEAMMUSIC_INTERFACE_VERSION001_Pause,
    ISteamMusic_STEAMMUSIC_INTERFACE_VERSION001_PlayPrevious,
    ISteamMusic_STEAMMUSIC_INTERFACE_VERSION001_PlayNext,
    ISteamMusic_STEAMMUSIC_INTERFACE_VERSION001_SetVolume,
    ISteamMusic_STEAMMUSIC_INTERFACE_VERSION001_GetVolume,
    ISteamParentalSettings_STEAMPARENTALSETTINGS_INTERFACE_VERSION001_BIsParentalLockEnabled,
    ISteamParentalSettings_STEAMPARENTALSETTINGS_INTERFACE_VERSION001_BIsParentalLockLocked,
    ISteamParentalSettings_STEAMPARENTALSETTINGS_INTERFACE_VERSION001_BIsAppBlocked,
    ISteamParentalSettings_STEAMPARENTALSETTINGS_INTERFACE_VERSION001_BIsAppInBlockList,
    ISteamParentalSettings_STEAMPARENTALSETTINGS_INTERFACE_VERSION001_BIsFeatureBlocked,
    ISteamParentalSettings_STEAMPARENTALSETTINGS_INTERFACE_VERSION001_BIsFeatureInBlockList,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION001_GetSessionCount,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION001_GetSessionID,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION001_GetSessionSteamID,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION001_GetSessionClientName,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION001_GetSessionClientFormFactor,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION001_BGetSessionClientResolution,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION001_BSendRemotePlayTogetherInvite,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION002_GetSessionCount,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION002_GetSessionID,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION002_GetSessionSteamID,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION002_GetSessionClientName,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION002_GetSessionClientFormFactor,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION002_BGetSessionClientResolution,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION002_BStartRemotePlayTogether,
    ISteamRemotePlay_STEAMREMOTEPLAY_INTERFACE_VERSION002_BSendRemotePlayTogetherInvite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION001_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION001_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION001_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION001_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION001_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION001_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION001_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION001_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION002_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION002_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION002_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION002_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION002_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION002_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION002_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION003_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION004_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_PublishFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_UpdatePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION005_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION006_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION007_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileWriteStreamOpen,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileWriteStreamWriteChunk,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileWriteStreamClose,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileWriteStreamCancel,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION008_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileWriteStreamOpen,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileWriteStreamWriteChunk,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileWriteStreamClose,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileWriteStreamCancel,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION009_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileWriteStreamOpen,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileWriteStreamWriteChunk,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileWriteStreamClose,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileWriteStreamCancel,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION010_UGCDownloadToLocation,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileWriteStreamOpen,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileWriteStreamWriteChunk,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileWriteStreamClose,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileWriteStreamCancel,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION011_UGCDownloadToLocation,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileWriteStreamOpen,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileWriteStreamWriteChunk,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileWriteStreamClose,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileWriteStreamCancel,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION012_UGCDownloadToLocation,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileWriteAsync,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileReadAsync,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileReadAsyncComplete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileWriteStreamOpen,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileWriteStreamWriteChunk,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileWriteStreamClose,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileWriteStreamCancel,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION013_UGCDownloadToLocation,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileWriteAsync,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileReadAsync,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileReadAsyncComplete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileWriteStreamOpen,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileWriteStreamWriteChunk,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileWriteStreamClose,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileWriteStreamCancel,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION014_UGCDownloadToLocation,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileWrite,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileWriteAsync,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileReadAsync,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileReadAsyncComplete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileForget,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileDelete,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileShare,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_SetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileWriteStreamOpen,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileWriteStreamWriteChunk,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileWriteStreamClose,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileWriteStreamCancel,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FileExists,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_FilePersisted,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetFileSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetFileTimestamp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetSyncPlatforms,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetFileCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetFileNameAndSize,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetQuota,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_IsCloudEnabledForAccount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_IsCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_SetCloudEnabledForApp,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UGCDownload,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetUGCDownloadProgress,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetUGCDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UGCRead,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetCachedUGCCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetCachedUGCHandle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_PublishWorkshopFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_CreatePublishedFileUpdateRequest,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UpdatePublishedFileFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UpdatePublishedFilePreviewFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UpdatePublishedFileTitle,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UpdatePublishedFileDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UpdatePublishedFileVisibility,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UpdatePublishedFileTags,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_CommitPublishedFileUpdate,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetPublishedFileDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_DeletePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_EnumerateUserPublishedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_SubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_EnumerateUserSubscribedFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UnsubscribePublishedFile,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UpdatePublishedFileSetChangeDescription,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UpdateUserPublishedItemVote,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetUserPublishedItemVoteDetails,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_EnumerateUserSharedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_PublishVideo,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_SetUserPublishedFileAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_EnumeratePublishedFilesByUserAction,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_EnumeratePublishedWorkshopFiles,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_UGCDownloadToLocation,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetLocalFileChangeCount,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_GetLocalFileChange,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_BeginFileWriteBatch,
    ISteamRemoteStorage_STEAMREMOTESTORAGE_INTERFACE_VERSION016_EndFileWriteBatch,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION001_WriteScreenshot,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION001_AddScreenshotToLibrary,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION001_TriggerScreenshot,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION001_HookScreenshots,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION001_SetLocation,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION001_TagUser,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION002_WriteScreenshot,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION002_AddScreenshotToLibrary,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION002_TriggerScreenshot,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION002_HookScreenshots,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION002_SetLocation,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION002_TagUser,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION002_TagPublishedFile,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION003_WriteScreenshot,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION003_AddScreenshotToLibrary,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION003_TriggerScreenshot,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION003_HookScreenshots,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION003_SetLocation,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION003_TagUser,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION003_TagPublishedFile,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION003_IsScreenshotsHooked,
    ISteamScreenshots_STEAMSCREENSHOTS_INTERFACE_VERSION003_AddVRScreenshotToLibrary,
    ISteamTimeline_STEAMTIMELINE_INTERFACE_V001_SetTimelineStateDescription,
    ISteamTimeline_STEAMTIMELINE_INTERFACE_V001_ClearTimelineStateDescription,
    ISteamTimeline_STEAMTIMELINE_INTERFACE_V001_AddTimelineEvent,
    ISteamTimeline_STEAMTIMELINE_INTERFACE_V001_SetTimelineGameMode,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION001_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION002_GetItemUpdateInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION003_GetItemUpdateInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION004_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION005_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION006_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION007_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION008_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION009_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetReturnPlaytimeStats,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_AddDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_RemoveDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_AddAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_RemoveAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_GetAppDependencies,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION010_DeleteItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_CreateQueryAllUGCRequest_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetReturnPlaytimeStats,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetAllowLegacyUpload,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_AddDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_RemoveDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_AddAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_RemoveAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_GetAppDependencies,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION012_DeleteItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_CreateQueryAllUGCRequest_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetQueryUGCKeyValueTag_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetReturnPlaytimeStats,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetAllowLegacyUpload,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_RemoveAllItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_AddDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_RemoveDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_AddAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_RemoveAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_GetAppDependencies,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION013_DeleteItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_CreateQueryAllUGCRequest_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetQueryUGCKeyValueTag_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddRequiredTagGroup,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetReturnPlaytimeStats,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetAllowLegacyUpload,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_RemoveAllItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_RemoveDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_AddAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_RemoveAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_GetAppDependencies,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION014_DeleteItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_CreateQueryAllUGCRequest_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCNumTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCTagDisplayName,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetQueryUGCKeyValueTag_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddRequiredTagGroup,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetReturnPlaytimeStats,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetAllowLegacyUpload,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_RemoveAllItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_RemoveDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_AddAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_RemoveAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetAppDependencies,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_DeleteItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_ShowWorkshopEULA,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION015_GetWorkshopEULAStatus,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_CreateQueryAllUGCRequest_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCNumTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCTagDisplayName,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetQueryUGCKeyValueTag_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddRequiredTagGroup,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetReturnPlaytimeStats,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetTimeCreatedDateRange,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetTimeUpdatedDateRange,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetAllowLegacyUpload,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_RemoveAllItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_RemoveDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_AddAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_RemoveAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetAppDependencies,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_DeleteItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_ShowWorkshopEULA,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION016_GetWorkshopEULAStatus,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_CreateQueryAllUGCRequest_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCNumTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCTagDisplayName,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCKeyValueTag_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetQueryUGCContentDescriptors,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddRequiredTagGroup,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetReturnPlaytimeStats,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetTimeCreatedDateRange,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetTimeUpdatedDateRange,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetAllowLegacyUpload,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_RemoveAllItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddContentDescriptor,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_RemoveContentDescriptor,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_RemoveDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_AddAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_RemoveAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetAppDependencies,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_DeleteItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_ShowWorkshopEULA,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION017_GetWorkshopEULAStatus,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_CreateQueryAllUGCRequest_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCNumTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCTagDisplayName,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCKeyValueTag_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetQueryUGCContentDescriptors,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddRequiredTagGroup,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetReturnPlaytimeStats,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetTimeCreatedDateRange,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetTimeUpdatedDateRange,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetAllowLegacyUpload,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_RemoveAllItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddContentDescriptor,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_RemoveContentDescriptor,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_RemoveDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_AddAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_RemoveAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetAppDependencies,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_DeleteItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_ShowWorkshopEULA,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetWorkshopEULAStatus,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION018_GetUserContentDescriptorPreferences,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_CreateQueryUserUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_CreateQueryAllUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_CreateQueryAllUGCRequest_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_CreateQueryUGCDetailsRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SendQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCResult,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCNumTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCTagDisplayName,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCPreviewURL,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCStatistic,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCNumAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCAdditionalPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCNumKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCKeyValueTag_2,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetNumSupportedGameVersions,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetSupportedGameVersionData,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetQueryUGCContentDescriptors,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_ReleaseQueryUGCRequest,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddRequiredTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddRequiredTagGroup,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddExcludedTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetReturnOnlyIDs,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetReturnKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetReturnLongDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetReturnMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetReturnChildren,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetReturnAdditionalPreviews,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetReturnTotalOnly,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetReturnPlaytimeStats,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetAllowCachedResponse,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetAdminQuery,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetCloudFileNameFilter,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetMatchAnyTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetSearchText,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetRankedByTrendDays,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetTimeCreatedDateRange,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetTimeUpdatedDateRange,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddRequiredKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_RequestUGCDetails,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_CreateItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_StartItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetItemTitle,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetItemDescription,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetItemUpdateLanguage,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetItemMetadata,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetItemVisibility,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetItemTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetItemContent,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetAllowLegacyUpload,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_RemoveAllItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_RemoveItemKeyValueTags,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddItemKeyValueTag,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_UpdateItemPreviewFile,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_UpdateItemPreviewVideo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_RemoveItemPreview,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddContentDescriptor,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_RemoveContentDescriptor,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetRequiredGameVersions,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SubmitItemUpdate,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetItemUpdateProgress,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetUserItemVote,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddItemToFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_RemoveItemFromFavorites,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_UnsubscribeItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetNumSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetSubscribedItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetItemState,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetItemInstallInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetItemDownloadInfo,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_DownloadItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_BInitWorkshopForGameServer,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_SuspendDownloads,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_StartPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_StopPlaytimeTracking,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_StopPlaytimeTrackingForAllItems,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_RemoveDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_AddAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_RemoveAppDependency,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetAppDependencies,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_DeleteItem,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_ShowWorkshopEULA,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetWorkshopEULAStatus,
    ISteamUGC_STEAMUGC_INTERFACE_VERSION020_GetUserContentDescriptorPreferences,
    ISteamUnifiedMessages_STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001_SendMethod,
    ISteamUnifiedMessages_STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001_GetMethodResponseInfo,
    ISteamUnifiedMessages_STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001_GetMethodResponseData,
    ISteamUnifiedMessages_STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001_ReleaseMethod,
    ISteamUnifiedMessages_STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001_SendNotification,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetNumStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetStatName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetStatType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetNumAchievements,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetAchievementName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetNumGroupAchievements,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetGroupAchievementName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetGroupAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_SetGroupAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_ClearGroupAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION001_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetNumStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetStatName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetStatType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetNumAchievements,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetAchievementName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION002_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION003_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_RequestUserStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_GetUserStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_GetUserStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION004_GetUserAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_RequestUserStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetUserStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetUserStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetUserAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_ResetAllStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_FindOrCreateLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_FindLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetLeaderboardName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetLeaderboardEntryCount,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetLeaderboardSortMethod,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetLeaderboardDisplayType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_DownloadLeaderboardEntries,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_GetDownloadedLeaderboardEntry,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION005_UploadLeaderboardScore,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_RequestUserStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetUserStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetUserStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetUserAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_ResetAllStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_FindOrCreateLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_FindLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetLeaderboardName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetLeaderboardEntryCount,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetLeaderboardSortMethod,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetLeaderboardDisplayType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_DownloadLeaderboardEntries,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetDownloadedLeaderboardEntry,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_UploadLeaderboardScore,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION006_GetNumberOfCurrentPlayers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_RequestUserStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetUserStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetUserStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetUserAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetUserAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_ResetAllStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_FindOrCreateLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_FindLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetLeaderboardName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetLeaderboardEntryCount,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetLeaderboardSortMethod,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetLeaderboardDisplayType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_DownloadLeaderboardEntries,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetDownloadedLeaderboardEntry,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_UploadLeaderboardScore,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION007_GetNumberOfCurrentPlayers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_RequestUserStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetUserStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetUserStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetUserAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetUserAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_ResetAllStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_FindOrCreateLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_FindLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetLeaderboardName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetLeaderboardEntryCount,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetLeaderboardSortMethod,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetLeaderboardDisplayType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_DownloadLeaderboardEntries,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetDownloadedLeaderboardEntry,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_UploadLeaderboardScore,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_AttachLeaderboardUGC,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION008_GetNumberOfCurrentPlayers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_RequestUserStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetUserStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetUserStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetUserAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetUserAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_ResetAllStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_FindOrCreateLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_FindLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetLeaderboardName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetLeaderboardEntryCount,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetLeaderboardSortMethod,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetLeaderboardDisplayType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_DownloadLeaderboardEntries,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_DownloadLeaderboardEntriesForUsers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetDownloadedLeaderboardEntry,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_UploadLeaderboardScore,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_AttachLeaderboardUGC,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION009_GetNumberOfCurrentPlayers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_RequestUserStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetUserStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetUserStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetUserAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetUserAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_ResetAllStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_FindOrCreateLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_FindLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetLeaderboardName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetLeaderboardEntryCount,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetLeaderboardSortMethod,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetLeaderboardDisplayType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_DownloadLeaderboardEntries,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_DownloadLeaderboardEntriesForUsers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetDownloadedLeaderboardEntry,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_UploadLeaderboardScore,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_AttachLeaderboardUGC,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetNumberOfCurrentPlayers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_RequestGlobalAchievementPercentages,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetMostAchievedAchievementInfo,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetNextMostAchievedAchievementInfo,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetAchievementAchievedPercent,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_RequestGlobalStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetGlobalStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetGlobalStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetGlobalStatHistory,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION010_GetGlobalStatHistory_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetNumAchievements,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetAchievementName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_RequestUserStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetUserStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetUserStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetUserAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetUserAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_ResetAllStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_FindOrCreateLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_FindLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetLeaderboardName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetLeaderboardEntryCount,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetLeaderboardSortMethod,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetLeaderboardDisplayType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_DownloadLeaderboardEntries,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_DownloadLeaderboardEntriesForUsers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetDownloadedLeaderboardEntry,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_UploadLeaderboardScore,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_AttachLeaderboardUGC,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetNumberOfCurrentPlayers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_RequestGlobalAchievementPercentages,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetMostAchievedAchievementInfo,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetNextMostAchievedAchievementInfo,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetAchievementAchievedPercent,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_RequestGlobalStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetGlobalStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetGlobalStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetGlobalStatHistory,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION011_GetGlobalStatHistory_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_RequestCurrentStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_SetStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_SetStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_UpdateAvgRateStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_SetAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_ClearAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_StoreStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetAchievementIcon,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetAchievementDisplayAttribute,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_IndicateAchievementProgress,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetNumAchievements,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetAchievementName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_RequestUserStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetUserStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetUserStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetUserAchievement,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetUserAchievementAndUnlockTime,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_ResetAllStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_FindOrCreateLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_FindLeaderboard,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetLeaderboardName,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetLeaderboardEntryCount,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetLeaderboardSortMethod,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetLeaderboardDisplayType,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_DownloadLeaderboardEntries,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_DownloadLeaderboardEntriesForUsers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetDownloadedLeaderboardEntry,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_UploadLeaderboardScore,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_AttachLeaderboardUGC,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetNumberOfCurrentPlayers,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_RequestGlobalAchievementPercentages,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetMostAchievedAchievementInfo,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetNextMostAchievedAchievementInfo,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetAchievementAchievedPercent,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_RequestGlobalStats,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetGlobalStat,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetGlobalStat_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetGlobalStatHistory,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetGlobalStatHistory_2,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetAchievementProgressLimits,
    ISteamUserStats_STEAMUSERSTATS_INTERFACE_VERSION012_GetAchievementProgressLimits_2,
    ISteamVideo_STEAMVIDEO_INTERFACE_V001_GetVideoURL,
    ISteamVideo_STEAMVIDEO_INTERFACE_V001_IsBroadcasting,
    ISteamVideo_STEAMVIDEO_INTERFACE_V002_GetVideoURL,
    ISteamVideo_STEAMVIDEO_INTERFACE_V002_IsBroadcasting,
    ISteamVideo_STEAMVIDEO_INTERFACE_V002_GetOPFSettings,
    ISteamVideo_STEAMVIDEO_INTERFACE_V002_GetOPFStringForApp,
    ISteamVideo_STEAMVIDEO_INTERFACE_V007_GetVideoURL,
    ISteamVideo_STEAMVIDEO_INTERFACE_V007_IsBroadcasting,
    ISteamVideo_STEAMVIDEO_INTERFACE_V007_GetOPFSettings,
    ISteamVideo_STEAMVIDEO_INTERFACE_V007_GetOPFStringForApp,
    ISteamClient_SteamClient006_CreateSteamPipe,
    ISteamClient_SteamClient006_BReleaseSteamPipe,
    ISteamClient_SteamClient006_CreateGlobalUser,
    ISteamClient_SteamClient006_ConnectToGlobalUser,
    ISteamClient_SteamClient006_CreateLocalUser,
    ISteamClient_SteamClient006_ReleaseUser,
    ISteamClient_SteamClient006_GetISteamUser,
    ISteamClient_SteamClient006_GetIVAC,
    ISteamClient_SteamClient006_GetISteamGameServer,
    ISteamClient_SteamClient006_SetLocalIPBinding,
    ISteamClient_SteamClient006_GetUniverseName,
    ISteamClient_SteamClient006_GetISteamFriends,
    ISteamClient_SteamClient006_GetISteamUtils,
    ISteamClient_SteamClient006_GetISteamBilling,
    ISteamClient_SteamClient006_GetISteamMatchmaking,
    ISteamClient_SteamClient006_GetISteamApps,
    ISteamClient_SteamClient006_GetISteamContentServer,
    ISteamClient_SteamClient006_GetISteamMasterServerUpdater,
    ISteamClient_SteamClient006_GetISteamMatchmakingServers,
    ISteamClient_SteamClient006_RunFrame,
    ISteamClient_SteamClient006_GetIPCCallCount,
    ISteamClient_SteamClient007_CreateSteamPipe,
    ISteamClient_SteamClient007_BReleaseSteamPipe,
    ISteamClient_SteamClient007_ConnectToGlobalUser,
    ISteamClient_SteamClient007_CreateLocalUser,
    ISteamClient_SteamClient007_ReleaseUser,
    ISteamClient_SteamClient007_GetISteamUser,
    ISteamClient_SteamClient007_GetISteamGameServer,
    ISteamClient_SteamClient007_SetLocalIPBinding,
    ISteamClient_SteamClient007_GetISteamFriends,
    ISteamClient_SteamClient007_GetISteamUtils,
    ISteamClient_SteamClient007_GetISteamMatchmaking,
    ISteamClient_SteamClient007_GetISteamContentServer,
    ISteamClient_SteamClient007_GetISteamMasterServerUpdater,
    ISteamClient_SteamClient007_GetISteamMatchmakingServers,
    ISteamClient_SteamClient007_GetISteamGenericInterface,
    ISteamClient_SteamClient007_RunFrame,
    ISteamClient_SteamClient007_GetIPCCallCount,
    ISteamClient_SteamClient007_GetISteamUserStats,
    ISteamClient_SteamClient007_GetISteamApps,
    ISteamClient_SteamClient007_GetISteamNetworking,
    ISteamClient_SteamClient007_SetWarningMessageHook,
    ISteamClient_SteamClient007_GetISteamRemoteStorage,
    ISteamClient_SteamClient008_CreateSteamPipe,
    ISteamClient_SteamClient008_BReleaseSteamPipe,
    ISteamClient_SteamClient008_ConnectToGlobalUser,
    ISteamClient_SteamClient008_CreateLocalUser,
    ISteamClient_SteamClient008_ReleaseUser,
    ISteamClient_SteamClient008_GetISteamUser,
    ISteamClient_SteamClient008_GetISteamGameServer,
    ISteamClient_SteamClient008_SetLocalIPBinding,
    ISteamClient_SteamClient008_GetISteamFriends,
    ISteamClient_SteamClient008_GetISteamUtils,
    ISteamClient_SteamClient008_GetISteamMatchmaking,
    ISteamClient_SteamClient008_GetISteamMasterServerUpdater,
    ISteamClient_SteamClient008_GetISteamMatchmakingServers,
    ISteamClient_SteamClient008_GetISteamGenericInterface,
    ISteamClient_SteamClient008_GetISteamUserStats,
    ISteamClient_SteamClient008_GetISteamApps,
    ISteamClient_SteamClient008_GetISteamNetworking,
    ISteamClient_SteamClient008_GetISteamRemoteStorage,
    ISteamClient_SteamClient008_RunFrame,
    ISteamClient_SteamClient008_GetIPCCallCount,
    ISteamClient_SteamClient008_SetWarningMessageHook,
    ISteamClient_SteamClient009_CreateSteamPipe,
    ISteamClient_SteamClient009_BReleaseSteamPipe,
    ISteamClient_SteamClient009_ConnectToGlobalUser,
    ISteamClient_SteamClient009_CreateLocalUser,
    ISteamClient_SteamClient009_ReleaseUser,
    ISteamClient_SteamClient009_GetISteamUser,
    ISteamClient_SteamClient009_GetISteamGameServer,
    ISteamClient_SteamClient009_SetLocalIPBinding,
    ISteamClient_SteamClient009_GetISteamFriends,
    ISteamClient_SteamClient009_GetISteamUtils,
    ISteamClient_SteamClient009_GetISteamMatchmaking,
    ISteamClient_SteamClient009_GetISteamMasterServerUpdater,
    ISteamClient_SteamClient009_GetISteamMatchmakingServers,
    ISteamClient_SteamClient009_GetISteamGenericInterface,
    ISteamClient_SteamClient009_GetISteamUserStats,
    ISteamClient_SteamClient009_GetISteamGameServerStats,
    ISteamClient_SteamClient009_GetISteamApps,
    ISteamClient_SteamClient009_GetISteamNetworking,
    ISteamClient_SteamClient009_GetISteamRemoteStorage,
    ISteamClient_SteamClient009_RunFrame,
    ISteamClient_SteamClient009_GetIPCCallCount,
    ISteamClient_SteamClient009_SetWarningMessageHook,
    ISteamClient_SteamClient010_CreateSteamPipe,
    ISteamClient_SteamClient010_BReleaseSteamPipe,
    ISteamClient_SteamClient010_ConnectToGlobalUser,
    ISteamClient_SteamClient010_CreateLocalUser,
    ISteamClient_SteamClient010_ReleaseUser,
    ISteamClient_SteamClient010_GetISteamUser,
    ISteamClient_SteamClient010_GetISteamGameServer,
    ISteamClient_SteamClient010_SetLocalIPBinding,
    ISteamClient_SteamClient010_GetISteamFriends,
    ISteamClient_SteamClient010_GetISteamUtils,
    ISteamClient_SteamClient010_GetISteamMatchmaking,
    ISteamClient_SteamClient010_GetISteamMasterServerUpdater,
    ISteamClient_SteamClient010_GetISteamMatchmakingServers,
    ISteamClient_SteamClient010_GetISteamGenericInterface,
    ISteamClient_SteamClient010_GetISteamUserStats,
    ISteamClient_SteamClient010_GetISteamGameServerStats,
    ISteamClient_SteamClient010_GetISteamApps,
    ISteamClient_SteamClient010_GetISteamNetworking,
    ISteamClient_SteamClient010_GetISteamRemoteStorage,
    ISteamClient_SteamClient010_RunFrame,
    ISteamClient_SteamClient010_GetIPCCallCount,
    ISteamClient_SteamClient010_SetWarningMessageHook,
    ISteamClient_SteamClient010_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient010_GetISteamHTTP,
    ISteamClient_SteamClient011_CreateSteamPipe,
    ISteamClient_SteamClient011_BReleaseSteamPipe,
    ISteamClient_SteamClient011_ConnectToGlobalUser,
    ISteamClient_SteamClient011_CreateLocalUser,
    ISteamClient_SteamClient011_ReleaseUser,
    ISteamClient_SteamClient011_GetISteamUser,
    ISteamClient_SteamClient011_GetISteamGameServer,
    ISteamClient_SteamClient011_SetLocalIPBinding,
    ISteamClient_SteamClient011_GetISteamFriends,
    ISteamClient_SteamClient011_GetISteamUtils,
    ISteamClient_SteamClient011_GetISteamMatchmaking,
    ISteamClient_SteamClient011_GetISteamMasterServerUpdater,
    ISteamClient_SteamClient011_GetISteamMatchmakingServers,
    ISteamClient_SteamClient011_GetISteamGenericInterface,
    ISteamClient_SteamClient011_GetISteamUserStats,
    ISteamClient_SteamClient011_GetISteamGameServerStats,
    ISteamClient_SteamClient011_GetISteamApps,
    ISteamClient_SteamClient011_GetISteamNetworking,
    ISteamClient_SteamClient011_GetISteamRemoteStorage,
    ISteamClient_SteamClient011_GetISteamScreenshots,
    ISteamClient_SteamClient011_RunFrame,
    ISteamClient_SteamClient011_GetIPCCallCount,
    ISteamClient_SteamClient011_SetWarningMessageHook,
    ISteamClient_SteamClient011_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient011_GetISteamHTTP,
    ISteamClient_SteamClient012_CreateSteamPipe,
    ISteamClient_SteamClient012_BReleaseSteamPipe,
    ISteamClient_SteamClient012_ConnectToGlobalUser,
    ISteamClient_SteamClient012_CreateLocalUser,
    ISteamClient_SteamClient012_ReleaseUser,
    ISteamClient_SteamClient012_GetISteamUser,
    ISteamClient_SteamClient012_GetISteamGameServer,
    ISteamClient_SteamClient012_SetLocalIPBinding,
    ISteamClient_SteamClient012_GetISteamFriends,
    ISteamClient_SteamClient012_GetISteamUtils,
    ISteamClient_SteamClient012_GetISteamMatchmaking,
    ISteamClient_SteamClient012_GetISteamMatchmakingServers,
    ISteamClient_SteamClient012_GetISteamGenericInterface,
    ISteamClient_SteamClient012_GetISteamUserStats,
    ISteamClient_SteamClient012_GetISteamGameServerStats,
    ISteamClient_SteamClient012_GetISteamApps,
    ISteamClient_SteamClient012_GetISteamNetworking,
    ISteamClient_SteamClient012_GetISteamRemoteStorage,
    ISteamClient_SteamClient012_GetISteamScreenshots,
    ISteamClient_SteamClient012_RunFrame,
    ISteamClient_SteamClient012_GetIPCCallCount,
    ISteamClient_SteamClient012_SetWarningMessageHook,
    ISteamClient_SteamClient012_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient012_GetISteamHTTP,
    ISteamClient_SteamClient012_GetISteamUnifiedMessages,
    ISteamClient_SteamClient012_GetISteamController,
    ISteamClient_SteamClient012_GetISteamUGC,
    ISteamClient_SteamClient013_CreateSteamPipe,
    ISteamClient_SteamClient013_BReleaseSteamPipe,
    ISteamClient_SteamClient013_ConnectToGlobalUser,
    ISteamClient_SteamClient013_CreateLocalUser,
    ISteamClient_SteamClient013_ReleaseUser,
    ISteamClient_SteamClient013_GetISteamUser,
    ISteamClient_SteamClient013_GetISteamGameServer,
    ISteamClient_SteamClient013_SetLocalIPBinding,
    ISteamClient_SteamClient013_GetISteamFriends,
    ISteamClient_SteamClient013_GetISteamUtils,
    ISteamClient_SteamClient013_GetISteamMatchmaking,
    ISteamClient_SteamClient013_GetISteamMatchmakingServers,
    ISteamClient_SteamClient013_GetISteamGenericInterface,
    ISteamClient_SteamClient013_GetISteamUserStats,
    ISteamClient_SteamClient013_GetISteamGameServerStats,
    ISteamClient_SteamClient013_GetISteamApps,
    ISteamClient_SteamClient013_GetISteamNetworking,
    ISteamClient_SteamClient013_GetISteamRemoteStorage,
    ISteamClient_SteamClient013_GetISteamScreenshots,
    ISteamClient_SteamClient013_RunFrame,
    ISteamClient_SteamClient013_GetIPCCallCount,
    ISteamClient_SteamClient013_SetWarningMessageHook,
    ISteamClient_SteamClient013_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient013_GetISteamHTTP,
    ISteamClient_SteamClient013_GetISteamUnifiedMessages,
    ISteamClient_SteamClient013_GetISteamController,
    ISteamClient_SteamClient013_GetISteamUGC,
    ISteamClient_SteamClient013_GetISteamInventory,
    ISteamClient_SteamClient013_GetISteamVideo,
    ISteamClient_SteamClient013_GetISteamAppList,
    ISteamClient_SteamClient014_CreateSteamPipe,
    ISteamClient_SteamClient014_BReleaseSteamPipe,
    ISteamClient_SteamClient014_ConnectToGlobalUser,
    ISteamClient_SteamClient014_CreateLocalUser,
    ISteamClient_SteamClient014_ReleaseUser,
    ISteamClient_SteamClient014_GetISteamUser,
    ISteamClient_SteamClient014_GetISteamGameServer,
    ISteamClient_SteamClient014_SetLocalIPBinding,
    ISteamClient_SteamClient014_GetISteamFriends,
    ISteamClient_SteamClient014_GetISteamUtils,
    ISteamClient_SteamClient014_GetISteamMatchmaking,
    ISteamClient_SteamClient014_GetISteamMatchmakingServers,
    ISteamClient_SteamClient014_GetISteamGenericInterface,
    ISteamClient_SteamClient014_GetISteamUserStats,
    ISteamClient_SteamClient014_GetISteamGameServerStats,
    ISteamClient_SteamClient014_GetISteamApps,
    ISteamClient_SteamClient014_GetISteamNetworking,
    ISteamClient_SteamClient014_GetISteamRemoteStorage,
    ISteamClient_SteamClient014_GetISteamScreenshots,
    ISteamClient_SteamClient014_RunFrame,
    ISteamClient_SteamClient014_GetIPCCallCount,
    ISteamClient_SteamClient014_SetWarningMessageHook,
    ISteamClient_SteamClient014_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient014_GetISteamHTTP,
    ISteamClient_SteamClient014_GetISteamUnifiedMessages,
    ISteamClient_SteamClient014_GetISteamController,
    ISteamClient_SteamClient014_GetISteamUGC,
    ISteamClient_SteamClient014_GetISteamAppList,
    ISteamClient_SteamClient014_GetISteamMusic,
    ISteamClient_SteamClient015_CreateSteamPipe,
    ISteamClient_SteamClient015_BReleaseSteamPipe,
    ISteamClient_SteamClient015_ConnectToGlobalUser,
    ISteamClient_SteamClient015_CreateLocalUser,
    ISteamClient_SteamClient015_ReleaseUser,
    ISteamClient_SteamClient015_GetISteamUser,
    ISteamClient_SteamClient015_GetISteamGameServer,
    ISteamClient_SteamClient015_SetLocalIPBinding,
    ISteamClient_SteamClient015_GetISteamFriends,
    ISteamClient_SteamClient015_GetISteamUtils,
    ISteamClient_SteamClient015_GetISteamMatchmaking,
    ISteamClient_SteamClient015_GetISteamMatchmakingServers,
    ISteamClient_SteamClient015_GetISteamGenericInterface,
    ISteamClient_SteamClient015_GetISteamUserStats,
    ISteamClient_SteamClient015_GetISteamGameServerStats,
    ISteamClient_SteamClient015_GetISteamApps,
    ISteamClient_SteamClient015_GetISteamNetworking,
    ISteamClient_SteamClient015_GetISteamRemoteStorage,
    ISteamClient_SteamClient015_GetISteamScreenshots,
    ISteamClient_SteamClient015_RunFrame,
    ISteamClient_SteamClient015_GetIPCCallCount,
    ISteamClient_SteamClient015_SetWarningMessageHook,
    ISteamClient_SteamClient015_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient015_GetISteamHTTP,
    ISteamClient_SteamClient015_GetISteamUnifiedMessages,
    ISteamClient_SteamClient015_GetISteamController,
    ISteamClient_SteamClient015_GetISteamUGC,
    ISteamClient_SteamClient015_GetISteamAppList,
    ISteamClient_SteamClient015_GetISteamMusic,
    ISteamClient_SteamClient015_GetISteamMusicRemote,
    ISteamClient_SteamClient016_CreateSteamPipe,
    ISteamClient_SteamClient016_BReleaseSteamPipe,
    ISteamClient_SteamClient016_ConnectToGlobalUser,
    ISteamClient_SteamClient016_CreateLocalUser,
    ISteamClient_SteamClient016_ReleaseUser,
    ISteamClient_SteamClient016_GetISteamUser,
    ISteamClient_SteamClient016_GetISteamGameServer,
    ISteamClient_SteamClient016_SetLocalIPBinding,
    ISteamClient_SteamClient016_GetISteamFriends,
    ISteamClient_SteamClient016_GetISteamUtils,
    ISteamClient_SteamClient016_GetISteamMatchmaking,
    ISteamClient_SteamClient016_GetISteamMatchmakingServers,
    ISteamClient_SteamClient016_GetISteamGenericInterface,
    ISteamClient_SteamClient016_GetISteamUserStats,
    ISteamClient_SteamClient016_GetISteamGameServerStats,
    ISteamClient_SteamClient016_GetISteamApps,
    ISteamClient_SteamClient016_GetISteamNetworking,
    ISteamClient_SteamClient016_GetISteamRemoteStorage,
    ISteamClient_SteamClient016_GetISteamScreenshots,
    ISteamClient_SteamClient016_RunFrame,
    ISteamClient_SteamClient016_GetIPCCallCount,
    ISteamClient_SteamClient016_SetWarningMessageHook,
    ISteamClient_SteamClient016_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient016_GetISteamHTTP,
    ISteamClient_SteamClient016_GetISteamUnifiedMessages,
    ISteamClient_SteamClient016_GetISteamController,
    ISteamClient_SteamClient016_GetISteamUGC,
    ISteamClient_SteamClient016_GetISteamAppList,
    ISteamClient_SteamClient016_GetISteamMusic,
    ISteamClient_SteamClient016_GetISteamMusicRemote,
    ISteamClient_SteamClient016_GetISteamHTMLSurface,
    ISteamClient_SteamClient016_Set_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient016_Remove_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient016_Set_SteamAPI_CCheckCallbackRegisteredInProcess,
    ISteamClient_SteamClient017_CreateSteamPipe,
    ISteamClient_SteamClient017_BReleaseSteamPipe,
    ISteamClient_SteamClient017_ConnectToGlobalUser,
    ISteamClient_SteamClient017_CreateLocalUser,
    ISteamClient_SteamClient017_ReleaseUser,
    ISteamClient_SteamClient017_GetISteamUser,
    ISteamClient_SteamClient017_GetISteamGameServer,
    ISteamClient_SteamClient017_SetLocalIPBinding,
    ISteamClient_SteamClient017_GetISteamFriends,
    ISteamClient_SteamClient017_GetISteamUtils,
    ISteamClient_SteamClient017_GetISteamMatchmaking,
    ISteamClient_SteamClient017_GetISteamMatchmakingServers,
    ISteamClient_SteamClient017_GetISteamGenericInterface,
    ISteamClient_SteamClient017_GetISteamUserStats,
    ISteamClient_SteamClient017_GetISteamGameServerStats,
    ISteamClient_SteamClient017_GetISteamApps,
    ISteamClient_SteamClient017_GetISteamNetworking,
    ISteamClient_SteamClient017_GetISteamRemoteStorage,
    ISteamClient_SteamClient017_GetISteamScreenshots,
    ISteamClient_SteamClient017_RunFrame,
    ISteamClient_SteamClient017_GetIPCCallCount,
    ISteamClient_SteamClient017_SetWarningMessageHook,
    ISteamClient_SteamClient017_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient017_GetISteamHTTP,
    ISteamClient_SteamClient017_DEPRECATED_GetISteamUnifiedMessages,
    ISteamClient_SteamClient017_GetISteamController,
    ISteamClient_SteamClient017_GetISteamUGC,
    ISteamClient_SteamClient017_GetISteamAppList,
    ISteamClient_SteamClient017_GetISteamMusic,
    ISteamClient_SteamClient017_GetISteamMusicRemote,
    ISteamClient_SteamClient017_GetISteamHTMLSurface,
    ISteamClient_SteamClient017_DEPRECATED_Set_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient017_DEPRECATED_Remove_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient017_Set_SteamAPI_CCheckCallbackRegisteredInProcess,
    ISteamClient_SteamClient017_GetISteamInventory,
    ISteamClient_SteamClient017_GetISteamVideo,
    ISteamClient_SteamClient017_GetISteamParentalSettings,
    ISteamClient_SteamClient018_CreateSteamPipe,
    ISteamClient_SteamClient018_BReleaseSteamPipe,
    ISteamClient_SteamClient018_ConnectToGlobalUser,
    ISteamClient_SteamClient018_CreateLocalUser,
    ISteamClient_SteamClient018_ReleaseUser,
    ISteamClient_SteamClient018_GetISteamUser,
    ISteamClient_SteamClient018_GetISteamGameServer,
    ISteamClient_SteamClient018_SetLocalIPBinding,
    ISteamClient_SteamClient018_GetISteamFriends,
    ISteamClient_SteamClient018_GetISteamUtils,
    ISteamClient_SteamClient018_GetISteamMatchmaking,
    ISteamClient_SteamClient018_GetISteamMatchmakingServers,
    ISteamClient_SteamClient018_GetISteamGenericInterface,
    ISteamClient_SteamClient018_GetISteamUserStats,
    ISteamClient_SteamClient018_GetISteamGameServerStats,
    ISteamClient_SteamClient018_GetISteamApps,
    ISteamClient_SteamClient018_GetISteamNetworking,
    ISteamClient_SteamClient018_GetISteamRemoteStorage,
    ISteamClient_SteamClient018_GetISteamScreenshots,
    ISteamClient_SteamClient018_GetISteamGameSearch,
    ISteamClient_SteamClient018_RunFrame,
    ISteamClient_SteamClient018_GetIPCCallCount,
    ISteamClient_SteamClient018_SetWarningMessageHook,
    ISteamClient_SteamClient018_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient018_GetISteamHTTP,
    ISteamClient_SteamClient018_DEPRECATED_GetISteamUnifiedMessages,
    ISteamClient_SteamClient018_GetISteamController,
    ISteamClient_SteamClient018_GetISteamUGC,
    ISteamClient_SteamClient018_GetISteamAppList,
    ISteamClient_SteamClient018_GetISteamMusic,
    ISteamClient_SteamClient018_GetISteamMusicRemote,
    ISteamClient_SteamClient018_GetISteamHTMLSurface,
    ISteamClient_SteamClient018_DEPRECATED_Set_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient018_DEPRECATED_Remove_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient018_Set_SteamAPI_CCheckCallbackRegisteredInProcess,
    ISteamClient_SteamClient018_GetISteamInventory,
    ISteamClient_SteamClient018_GetISteamVideo,
    ISteamClient_SteamClient018_GetISteamParentalSettings,
    ISteamClient_SteamClient018_GetISteamInput,
    ISteamClient_SteamClient018_GetISteamParties,
    ISteamClient_SteamClient019_CreateSteamPipe,
    ISteamClient_SteamClient019_BReleaseSteamPipe,
    ISteamClient_SteamClient019_ConnectToGlobalUser,
    ISteamClient_SteamClient019_CreateLocalUser,
    ISteamClient_SteamClient019_ReleaseUser,
    ISteamClient_SteamClient019_GetISteamUser,
    ISteamClient_SteamClient019_GetISteamGameServer,
    ISteamClient_SteamClient019_SetLocalIPBinding,
    ISteamClient_SteamClient019_GetISteamFriends,
    ISteamClient_SteamClient019_GetISteamUtils,
    ISteamClient_SteamClient019_GetISteamMatchmaking,
    ISteamClient_SteamClient019_GetISteamMatchmakingServers,
    ISteamClient_SteamClient019_GetISteamGenericInterface,
    ISteamClient_SteamClient019_GetISteamUserStats,
    ISteamClient_SteamClient019_GetISteamGameServerStats,
    ISteamClient_SteamClient019_GetISteamApps,
    ISteamClient_SteamClient019_GetISteamNetworking,
    ISteamClient_SteamClient019_GetISteamRemoteStorage,
    ISteamClient_SteamClient019_GetISteamScreenshots,
    ISteamClient_SteamClient019_GetISteamGameSearch,
    ISteamClient_SteamClient019_RunFrame,
    ISteamClient_SteamClient019_GetIPCCallCount,
    ISteamClient_SteamClient019_SetWarningMessageHook,
    ISteamClient_SteamClient019_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient019_GetISteamHTTP,
    ISteamClient_SteamClient019_DEPRECATED_GetISteamUnifiedMessages,
    ISteamClient_SteamClient019_GetISteamController,
    ISteamClient_SteamClient019_GetISteamUGC,
    ISteamClient_SteamClient019_GetISteamAppList,
    ISteamClient_SteamClient019_GetISteamMusic,
    ISteamClient_SteamClient019_GetISteamMusicRemote,
    ISteamClient_SteamClient019_GetISteamHTMLSurface,
    ISteamClient_SteamClient019_DEPRECATED_Set_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient019_DEPRECATED_Remove_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient019_Set_SteamAPI_CCheckCallbackRegisteredInProcess,
    ISteamClient_SteamClient019_GetISteamInventory,
    ISteamClient_SteamClient019_GetISteamVideo,
    ISteamClient_SteamClient019_GetISteamParentalSettings,
    ISteamClient_SteamClient019_GetISteamInput,
    ISteamClient_SteamClient019_GetISteamParties,
    ISteamClient_SteamClient019_GetISteamRemotePlay,
    ISteamClient_SteamClient020_CreateSteamPipe,
    ISteamClient_SteamClient020_BReleaseSteamPipe,
    ISteamClient_SteamClient020_ConnectToGlobalUser,
    ISteamClient_SteamClient020_CreateLocalUser,
    ISteamClient_SteamClient020_ReleaseUser,
    ISteamClient_SteamClient020_GetISteamUser,
    ISteamClient_SteamClient020_GetISteamGameServer,
    ISteamClient_SteamClient020_SetLocalIPBinding,
    ISteamClient_SteamClient020_GetISteamFriends,
    ISteamClient_SteamClient020_GetISteamUtils,
    ISteamClient_SteamClient020_GetISteamMatchmaking,
    ISteamClient_SteamClient020_GetISteamMatchmakingServers,
    ISteamClient_SteamClient020_GetISteamGenericInterface,
    ISteamClient_SteamClient020_GetISteamUserStats,
    ISteamClient_SteamClient020_GetISteamGameServerStats,
    ISteamClient_SteamClient020_GetISteamApps,
    ISteamClient_SteamClient020_GetISteamNetworking,
    ISteamClient_SteamClient020_GetISteamRemoteStorage,
    ISteamClient_SteamClient020_GetISteamScreenshots,
    ISteamClient_SteamClient020_GetISteamGameSearch,
    ISteamClient_SteamClient020_RunFrame,
    ISteamClient_SteamClient020_GetIPCCallCount,
    ISteamClient_SteamClient020_SetWarningMessageHook,
    ISteamClient_SteamClient020_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient020_GetISteamHTTP,
    ISteamClient_SteamClient020_DEPRECATED_GetISteamUnifiedMessages,
    ISteamClient_SteamClient020_GetISteamController,
    ISteamClient_SteamClient020_GetISteamUGC,
    ISteamClient_SteamClient020_GetISteamAppList,
    ISteamClient_SteamClient020_GetISteamMusic,
    ISteamClient_SteamClient020_GetISteamMusicRemote,
    ISteamClient_SteamClient020_GetISteamHTMLSurface,
    ISteamClient_SteamClient020_DEPRECATED_Set_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient020_DEPRECATED_Remove_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient020_Set_SteamAPI_CCheckCallbackRegisteredInProcess,
    ISteamClient_SteamClient020_GetISteamInventory,
    ISteamClient_SteamClient020_GetISteamVideo,
    ISteamClient_SteamClient020_GetISteamParentalSettings,
    ISteamClient_SteamClient020_GetISteamInput,
    ISteamClient_SteamClient020_GetISteamParties,
    ISteamClient_SteamClient020_GetISteamRemotePlay,
    ISteamClient_SteamClient020_DestroyAllInterfaces,
    ISteamClient_SteamClient021_CreateSteamPipe,
    ISteamClient_SteamClient021_BReleaseSteamPipe,
    ISteamClient_SteamClient021_ConnectToGlobalUser,
    ISteamClient_SteamClient021_CreateLocalUser,
    ISteamClient_SteamClient021_ReleaseUser,
    ISteamClient_SteamClient021_GetISteamUser,
    ISteamClient_SteamClient021_GetISteamGameServer,
    ISteamClient_SteamClient021_SetLocalIPBinding,
    ISteamClient_SteamClient021_GetISteamFriends,
    ISteamClient_SteamClient021_GetISteamUtils,
    ISteamClient_SteamClient021_GetISteamMatchmaking,
    ISteamClient_SteamClient021_GetISteamMatchmakingServers,
    ISteamClient_SteamClient021_GetISteamGenericInterface,
    ISteamClient_SteamClient021_GetISteamUserStats,
    ISteamClient_SteamClient021_GetISteamGameServerStats,
    ISteamClient_SteamClient021_GetISteamApps,
    ISteamClient_SteamClient021_GetISteamNetworking,
    ISteamClient_SteamClient021_GetISteamRemoteStorage,
    ISteamClient_SteamClient021_GetISteamScreenshots,
    ISteamClient_SteamClient021_GetISteamGameSearch,
    ISteamClient_SteamClient021_RunFrame,
    ISteamClient_SteamClient021_GetIPCCallCount,
    ISteamClient_SteamClient021_SetWarningMessageHook,
    ISteamClient_SteamClient021_BShutdownIfAllPipesClosed,
    ISteamClient_SteamClient021_GetISteamHTTP,
    ISteamClient_SteamClient021_GetISteamController,
    ISteamClient_SteamClient021_GetISteamUGC,
    ISteamClient_SteamClient021_GetISteamMusic,
    ISteamClient_SteamClient021_GetISteamMusicRemote,
    ISteamClient_SteamClient021_GetISteamHTMLSurface,
    ISteamClient_SteamClient021_DEPRECATED_Set_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient021_DEPRECATED_Remove_SteamAPI_CPostAPIResultInProcess,
    ISteamClient_SteamClient021_Set_SteamAPI_CCheckCallbackRegisteredInProcess,
    ISteamClient_SteamClient021_GetISteamInventory,
    ISteamClient_SteamClient021_GetISteamVideo,
    ISteamClient_SteamClient021_GetISteamParentalSettings,
    ISteamClient_SteamClient021_GetISteamInput,
    ISteamClient_SteamClient021_GetISteamParties,
    ISteamClient_SteamClient021_GetISteamRemotePlay,
    ISteamClient_SteamClient021_DestroyAllInterfaces,
    ISteamController_SteamController003_Init,
    ISteamController_SteamController003_Shutdown,
    ISteamController_SteamController003_RunFrame,
    ISteamController_SteamController003_GetConnectedControllers,
    ISteamController_SteamController003_ShowBindingPanel,
    ISteamController_SteamController003_GetActionSetHandle,
    ISteamController_SteamController003_ActivateActionSet,
    ISteamController_SteamController003_GetCurrentActionSet,
    ISteamController_SteamController003_GetDigitalActionHandle,
    ISteamController_SteamController003_GetDigitalActionData,
    ISteamController_SteamController003_GetDigitalActionOrigins,
    ISteamController_SteamController003_GetAnalogActionHandle,
    ISteamController_SteamController003_GetAnalogActionData,
    ISteamController_SteamController003_GetAnalogActionOrigins,
    ISteamController_SteamController003_StopAnalogActionMomentum,
    ISteamController_SteamController003_TriggerHapticPulse,
    ISteamController_SteamController003_TriggerRepeatedHapticPulse,
    ISteamController_SteamController004_Init,
    ISteamController_SteamController004_Shutdown,
    ISteamController_SteamController004_RunFrame,
    ISteamController_SteamController004_GetConnectedControllers,
    ISteamController_SteamController004_ShowBindingPanel,
    ISteamController_SteamController004_GetActionSetHandle,
    ISteamController_SteamController004_ActivateActionSet,
    ISteamController_SteamController004_GetCurrentActionSet,
    ISteamController_SteamController004_GetDigitalActionHandle,
    ISteamController_SteamController004_GetDigitalActionData,
    ISteamController_SteamController004_GetDigitalActionOrigins,
    ISteamController_SteamController004_GetAnalogActionHandle,
    ISteamController_SteamController004_GetAnalogActionData,
    ISteamController_SteamController004_GetAnalogActionOrigins,
    ISteamController_SteamController004_StopAnalogActionMomentum,
    ISteamController_SteamController004_TriggerHapticPulse,
    ISteamController_SteamController004_TriggerRepeatedHapticPulse,
    ISteamController_SteamController004_GetGamepadIndexForController,
    ISteamController_SteamController004_GetControllerForGamepadIndex,
    ISteamController_SteamController004_GetMotionData,
    ISteamController_SteamController004_ShowDigitalActionOrigins,
    ISteamController_SteamController004_ShowAnalogActionOrigins,
    ISteamController_SteamController005_Init,
    ISteamController_SteamController005_Shutdown,
    ISteamController_SteamController005_RunFrame,
    ISteamController_SteamController005_GetConnectedControllers,
    ISteamController_SteamController005_ShowBindingPanel,
    ISteamController_SteamController005_GetActionSetHandle,
    ISteamController_SteamController005_ActivateActionSet,
    ISteamController_SteamController005_GetCurrentActionSet,
    ISteamController_SteamController005_GetDigitalActionHandle,
    ISteamController_SteamController005_GetDigitalActionData,
    ISteamController_SteamController005_GetDigitalActionOrigins,
    ISteamController_SteamController005_GetAnalogActionHandle,
    ISteamController_SteamController005_GetAnalogActionData,
    ISteamController_SteamController005_GetAnalogActionOrigins,
    ISteamController_SteamController005_StopAnalogActionMomentum,
    ISteamController_SteamController005_TriggerHapticPulse,
    ISteamController_SteamController005_TriggerRepeatedHapticPulse,
    ISteamController_SteamController005_TriggerVibration,
    ISteamController_SteamController005_SetLEDColor,
    ISteamController_SteamController005_GetGamepadIndexForController,
    ISteamController_SteamController005_GetControllerForGamepadIndex,
    ISteamController_SteamController005_GetMotionData,
    ISteamController_SteamController005_ShowDigitalActionOrigins,
    ISteamController_SteamController005_ShowAnalogActionOrigins,
    ISteamController_SteamController005_GetStringForActionOrigin,
    ISteamController_SteamController005_GetGlyphForActionOrigin,
    ISteamController_SteamController006_Init,
    ISteamController_SteamController006_Shutdown,
    ISteamController_SteamController006_RunFrame,
    ISteamController_SteamController006_GetConnectedControllers,
    ISteamController_SteamController006_ShowBindingPanel,
    ISteamController_SteamController006_GetActionSetHandle,
    ISteamController_SteamController006_ActivateActionSet,
    ISteamController_SteamController006_GetCurrentActionSet,
    ISteamController_SteamController006_ActivateActionSetLayer,
    ISteamController_SteamController006_DeactivateActionSetLayer,
    ISteamController_SteamController006_DeactivateAllActionSetLayers,
    ISteamController_SteamController006_GetActiveActionSetLayers,
    ISteamController_SteamController006_GetDigitalActionHandle,
    ISteamController_SteamController006_GetDigitalActionData,
    ISteamController_SteamController006_GetDigitalActionOrigins,
    ISteamController_SteamController006_GetAnalogActionHandle,
    ISteamController_SteamController006_GetAnalogActionData,
    ISteamController_SteamController006_GetAnalogActionOrigins,
    ISteamController_SteamController006_StopAnalogActionMomentum,
    ISteamController_SteamController006_TriggerHapticPulse,
    ISteamController_SteamController006_TriggerRepeatedHapticPulse,
    ISteamController_SteamController006_TriggerVibration,
    ISteamController_SteamController006_SetLEDColor,
    ISteamController_SteamController006_GetGamepadIndexForController,
    ISteamController_SteamController006_GetControllerForGamepadIndex,
    ISteamController_SteamController006_GetMotionData,
    ISteamController_SteamController006_ShowDigitalActionOrigins,
    ISteamController_SteamController006_ShowAnalogActionOrigins,
    ISteamController_SteamController006_GetStringForActionOrigin,
    ISteamController_SteamController006_GetGlyphForActionOrigin,
    ISteamController_SteamController006_GetInputTypeForHandle,
    ISteamController_SteamController007_Init,
    ISteamController_SteamController007_Shutdown,
    ISteamController_SteamController007_RunFrame,
    ISteamController_SteamController007_GetConnectedControllers,
    ISteamController_SteamController007_GetActionSetHandle,
    ISteamController_SteamController007_ActivateActionSet,
    ISteamController_SteamController007_GetCurrentActionSet,
    ISteamController_SteamController007_ActivateActionSetLayer,
    ISteamController_SteamController007_DeactivateActionSetLayer,
    ISteamController_SteamController007_DeactivateAllActionSetLayers,
    ISteamController_SteamController007_GetActiveActionSetLayers,
    ISteamController_SteamController007_GetDigitalActionHandle,
    ISteamController_SteamController007_GetDigitalActionData,
    ISteamController_SteamController007_GetDigitalActionOrigins,
    ISteamController_SteamController007_GetAnalogActionHandle,
    ISteamController_SteamController007_GetAnalogActionData,
    ISteamController_SteamController007_GetAnalogActionOrigins,
    ISteamController_SteamController007_GetGlyphForActionOrigin,
    ISteamController_SteamController007_GetStringForActionOrigin,
    ISteamController_SteamController007_StopAnalogActionMomentum,
    ISteamController_SteamController007_GetMotionData,
    ISteamController_SteamController007_TriggerHapticPulse,
    ISteamController_SteamController007_TriggerRepeatedHapticPulse,
    ISteamController_SteamController007_TriggerVibration,
    ISteamController_SteamController007_SetLEDColor,
    ISteamController_SteamController007_ShowBindingPanel,
    ISteamController_SteamController007_GetInputTypeForHandle,
    ISteamController_SteamController007_GetControllerForGamepadIndex,
    ISteamController_SteamController007_GetGamepadIndexForController,
    ISteamController_SteamController007_GetStringForXboxOrigin,
    ISteamController_SteamController007_GetGlyphForXboxOrigin,
    ISteamController_SteamController007_GetActionOriginFromXboxOrigin,
    ISteamController_SteamController007_TranslateActionOrigin,
    ISteamController_SteamController007_GetControllerBindingRevision,
    ISteamController_SteamController008_Init,
    ISteamController_SteamController008_Shutdown,
    ISteamController_SteamController008_RunFrame,
    ISteamController_SteamController008_GetConnectedControllers,
    ISteamController_SteamController008_GetActionSetHandle,
    ISteamController_SteamController008_ActivateActionSet,
    ISteamController_SteamController008_GetCurrentActionSet,
    ISteamController_SteamController008_ActivateActionSetLayer,
    ISteamController_SteamController008_DeactivateActionSetLayer,
    ISteamController_SteamController008_DeactivateAllActionSetLayers,
    ISteamController_SteamController008_GetActiveActionSetLayers,
    ISteamController_SteamController008_GetDigitalActionHandle,
    ISteamController_SteamController008_GetDigitalActionData,
    ISteamController_SteamController008_GetDigitalActionOrigins,
    ISteamController_SteamController008_GetAnalogActionHandle,
    ISteamController_SteamController008_GetAnalogActionData,
    ISteamController_SteamController008_GetAnalogActionOrigins,
    ISteamController_SteamController008_GetGlyphForActionOrigin,
    ISteamController_SteamController008_GetStringForActionOrigin,
    ISteamController_SteamController008_StopAnalogActionMomentum,
    ISteamController_SteamController008_GetMotionData,
    ISteamController_SteamController008_TriggerHapticPulse,
    ISteamController_SteamController008_TriggerRepeatedHapticPulse,
    ISteamController_SteamController008_TriggerVibration,
    ISteamController_SteamController008_SetLEDColor,
    ISteamController_SteamController008_ShowBindingPanel,
    ISteamController_SteamController008_GetInputTypeForHandle,
    ISteamController_SteamController008_GetControllerForGamepadIndex,
    ISteamController_SteamController008_GetGamepadIndexForController,
    ISteamController_SteamController008_GetStringForXboxOrigin,
    ISteamController_SteamController008_GetGlyphForXboxOrigin,
    ISteamController_SteamController008_GetActionOriginFromXboxOrigin,
    ISteamController_SteamController008_TranslateActionOrigin,
    ISteamController_SteamController008_GetControllerBindingRevision,
    ISteamFriends_SteamFriends001_GetPersonaName,
    ISteamFriends_SteamFriends001_SetPersonaName,
    ISteamFriends_SteamFriends001_GetPersonaState,
    ISteamFriends_SteamFriends001_SetPersonaState,
    ISteamFriends_SteamFriends001_AddFriend,
    ISteamFriends_SteamFriends001_RemoveFriend,
    ISteamFriends_SteamFriends001_HasFriend,
    ISteamFriends_SteamFriends001_GetFriendRelationship,
    ISteamFriends_SteamFriends001_GetFriendPersonaState,
    ISteamFriends_SteamFriends001_Deprecated_GetFriendGamePlayed,
    ISteamFriends_SteamFriends001_GetFriendPersonaName,
    ISteamFriends_SteamFriends001_AddFriendByName,
    ISteamFriends_SteamFriends001_GetFriendCount,
    ISteamFriends_SteamFriends001_GetFriendByIndex,
    ISteamFriends_SteamFriends001_SendMsgToFriend,
    ISteamFriends_SteamFriends001_SetFriendRegValue,
    ISteamFriends_SteamFriends001_GetFriendRegValue,
    ISteamFriends_SteamFriends001_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends001_GetChatMessage,
    ISteamFriends_SteamFriends001_SendMsgToFriend_2,
    ISteamFriends_SteamFriends001_GetChatIDOfChatHistoryStart,
    ISteamFriends_SteamFriends001_SetChatHistoryStart,
    ISteamFriends_SteamFriends001_ClearChatHistory,
    ISteamFriends_SteamFriends001_InviteFriendByEmail,
    ISteamFriends_SteamFriends001_GetBlockedFriendCount,
    ISteamFriends_SteamFriends001_GetFriendGamePlayed,
    ISteamFriends_SteamFriends001_GetFriendGamePlayed2,
    ISteamFriends_SteamFriends002_GetPersonaName,
    ISteamFriends_SteamFriends002_SetPersonaName,
    ISteamFriends_SteamFriends002_GetPersonaState,
    ISteamFriends_SteamFriends002_SetPersonaState,
    ISteamFriends_SteamFriends002_GetFriendCount,
    ISteamFriends_SteamFriends002_GetFriendByIndex,
    ISteamFriends_SteamFriends002_GetFriendRelationship,
    ISteamFriends_SteamFriends002_GetFriendPersonaState,
    ISteamFriends_SteamFriends002_GetFriendPersonaName,
    ISteamFriends_SteamFriends002_SetFriendRegValue,
    ISteamFriends_SteamFriends002_GetFriendRegValue,
    ISteamFriends_SteamFriends002_GetFriendGamePlayed,
    ISteamFriends_SteamFriends002_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends002_AddFriend,
    ISteamFriends_SteamFriends002_RemoveFriend,
    ISteamFriends_SteamFriends002_HasFriend,
    ISteamFriends_SteamFriends002_AddFriendByName,
    ISteamFriends_SteamFriends002_InviteFriendByEmail,
    ISteamFriends_SteamFriends002_GetChatMessage,
    ISteamFriends_SteamFriends002_SendMsgToFriend,
    ISteamFriends_SteamFriends002_GetChatIDOfChatHistoryStart,
    ISteamFriends_SteamFriends002_SetChatHistoryStart,
    ISteamFriends_SteamFriends002_ClearChatHistory,
    ISteamFriends_SteamFriends002_GetClanCount,
    ISteamFriends_SteamFriends002_GetClanByIndex,
    ISteamFriends_SteamFriends002_GetClanName,
    ISteamFriends_SteamFriends002_InviteFriendToClan,
    ISteamFriends_SteamFriends002_AcknowledgeInviteToClan,
    ISteamFriends_SteamFriends002_GetFriendCountFromSource,
    ISteamFriends_SteamFriends002_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends003_GetPersonaName,
    ISteamFriends_SteamFriends003_SetPersonaName,
    ISteamFriends_SteamFriends003_GetPersonaState,
    ISteamFriends_SteamFriends003_GetFriendCount,
    ISteamFriends_SteamFriends003_GetFriendByIndex,
    ISteamFriends_SteamFriends003_GetFriendRelationship,
    ISteamFriends_SteamFriends003_GetFriendPersonaState,
    ISteamFriends_SteamFriends003_GetFriendPersonaName,
    ISteamFriends_SteamFriends003_GetFriendAvatar,
    ISteamFriends_SteamFriends003_GetFriendGamePlayed,
    ISteamFriends_SteamFriends003_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends003_HasFriend,
    ISteamFriends_SteamFriends003_GetClanCount,
    ISteamFriends_SteamFriends003_GetClanByIndex,
    ISteamFriends_SteamFriends003_GetClanName,
    ISteamFriends_SteamFriends003_GetFriendCountFromSource,
    ISteamFriends_SteamFriends003_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends003_IsUserInSource,
    ISteamFriends_SteamFriends003_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends003_ActivateGameOverlay,
    ISteamFriends_SteamFriends004_GetPersonaName,
    ISteamFriends_SteamFriends004_SetPersonaName,
    ISteamFriends_SteamFriends004_GetPersonaState,
    ISteamFriends_SteamFriends004_GetFriendCount,
    ISteamFriends_SteamFriends004_GetFriendByIndex,
    ISteamFriends_SteamFriends004_GetFriendRelationship,
    ISteamFriends_SteamFriends004_GetFriendPersonaState,
    ISteamFriends_SteamFriends004_GetFriendPersonaName,
    ISteamFriends_SteamFriends004_GetFriendAvatar,
    ISteamFriends_SteamFriends004_GetFriendGamePlayed,
    ISteamFriends_SteamFriends004_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends004_HasFriend,
    ISteamFriends_SteamFriends004_GetClanCount,
    ISteamFriends_SteamFriends004_GetClanByIndex,
    ISteamFriends_SteamFriends004_GetClanName,
    ISteamFriends_SteamFriends004_GetFriendCountFromSource,
    ISteamFriends_SteamFriends004_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends004_IsUserInSource,
    ISteamFriends_SteamFriends004_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends004_ActivateGameOverlay,
    ISteamFriends_SteamFriends005_GetPersonaName,
    ISteamFriends_SteamFriends005_SetPersonaName,
    ISteamFriends_SteamFriends005_GetPersonaState,
    ISteamFriends_SteamFriends005_GetFriendCount,
    ISteamFriends_SteamFriends005_GetFriendByIndex,
    ISteamFriends_SteamFriends005_GetFriendRelationship,
    ISteamFriends_SteamFriends005_GetFriendPersonaState,
    ISteamFriends_SteamFriends005_GetFriendPersonaName,
    ISteamFriends_SteamFriends005_GetFriendAvatar,
    ISteamFriends_SteamFriends005_GetFriendGamePlayed,
    ISteamFriends_SteamFriends005_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends005_HasFriend,
    ISteamFriends_SteamFriends005_GetClanCount,
    ISteamFriends_SteamFriends005_GetClanByIndex,
    ISteamFriends_SteamFriends005_GetClanName,
    ISteamFriends_SteamFriends005_GetFriendCountFromSource,
    ISteamFriends_SteamFriends005_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends005_IsUserInSource,
    ISteamFriends_SteamFriends005_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends005_ActivateGameOverlay,
    ISteamFriends_SteamFriends005_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends005_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends005_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends005_SetPlayedWith,
    ISteamFriends_SteamFriends006_GetPersonaName,
    ISteamFriends_SteamFriends006_SetPersonaName,
    ISteamFriends_SteamFriends006_GetPersonaState,
    ISteamFriends_SteamFriends006_GetFriendCount,
    ISteamFriends_SteamFriends006_GetFriendByIndex,
    ISteamFriends_SteamFriends006_GetFriendRelationship,
    ISteamFriends_SteamFriends006_GetFriendPersonaState,
    ISteamFriends_SteamFriends006_GetFriendPersonaName,
    ISteamFriends_SteamFriends006_GetFriendAvatar,
    ISteamFriends_SteamFriends006_GetFriendGamePlayed,
    ISteamFriends_SteamFriends006_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends006_HasFriend,
    ISteamFriends_SteamFriends006_GetClanCount,
    ISteamFriends_SteamFriends006_GetClanByIndex,
    ISteamFriends_SteamFriends006_GetClanName,
    ISteamFriends_SteamFriends006_GetClanTag,
    ISteamFriends_SteamFriends006_GetFriendCountFromSource,
    ISteamFriends_SteamFriends006_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends006_IsUserInSource,
    ISteamFriends_SteamFriends006_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends006_ActivateGameOverlay,
    ISteamFriends_SteamFriends006_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends006_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends006_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends006_SetPlayedWith,
    ISteamFriends_SteamFriends006_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends007_GetPersonaName,
    ISteamFriends_SteamFriends007_SetPersonaName,
    ISteamFriends_SteamFriends007_GetPersonaState,
    ISteamFriends_SteamFriends007_GetFriendCount,
    ISteamFriends_SteamFriends007_GetFriendByIndex,
    ISteamFriends_SteamFriends007_GetFriendRelationship,
    ISteamFriends_SteamFriends007_GetFriendPersonaState,
    ISteamFriends_SteamFriends007_GetFriendPersonaName,
    ISteamFriends_SteamFriends007_GetFriendGamePlayed,
    ISteamFriends_SteamFriends007_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends007_HasFriend,
    ISteamFriends_SteamFriends007_GetClanCount,
    ISteamFriends_SteamFriends007_GetClanByIndex,
    ISteamFriends_SteamFriends007_GetClanName,
    ISteamFriends_SteamFriends007_GetClanTag,
    ISteamFriends_SteamFriends007_GetFriendCountFromSource,
    ISteamFriends_SteamFriends007_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends007_IsUserInSource,
    ISteamFriends_SteamFriends007_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends007_ActivateGameOverlay,
    ISteamFriends_SteamFriends007_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends007_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends007_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends007_SetPlayedWith,
    ISteamFriends_SteamFriends007_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends007_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends007_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends007_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends008_GetPersonaName,
    ISteamFriends_SteamFriends008_SetPersonaName,
    ISteamFriends_SteamFriends008_GetPersonaState,
    ISteamFriends_SteamFriends008_GetFriendCount,
    ISteamFriends_SteamFriends008_GetFriendByIndex,
    ISteamFriends_SteamFriends008_GetFriendRelationship,
    ISteamFriends_SteamFriends008_GetFriendPersonaState,
    ISteamFriends_SteamFriends008_GetFriendPersonaName,
    ISteamFriends_SteamFriends008_GetFriendGamePlayed,
    ISteamFriends_SteamFriends008_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends008_HasFriend,
    ISteamFriends_SteamFriends008_GetClanCount,
    ISteamFriends_SteamFriends008_GetClanByIndex,
    ISteamFriends_SteamFriends008_GetClanName,
    ISteamFriends_SteamFriends008_GetClanTag,
    ISteamFriends_SteamFriends008_GetFriendCountFromSource,
    ISteamFriends_SteamFriends008_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends008_IsUserInSource,
    ISteamFriends_SteamFriends008_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends008_ActivateGameOverlay,
    ISteamFriends_SteamFriends008_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends008_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends008_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends008_SetPlayedWith,
    ISteamFriends_SteamFriends008_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends008_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends008_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends008_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends008_RequestUserInformation,
    ISteamFriends_SteamFriends008_RequestClanOfficerList,
    ISteamFriends_SteamFriends008_GetClanOwner,
    ISteamFriends_SteamFriends008_GetClanOfficerCount,
    ISteamFriends_SteamFriends008_GetClanOfficerByIndex,
    ISteamFriends_SteamFriends008_GetUserRestrictions,
    ISteamFriends_SteamFriends009_GetPersonaName,
    ISteamFriends_SteamFriends009_SetPersonaName,
    ISteamFriends_SteamFriends009_GetPersonaState,
    ISteamFriends_SteamFriends009_GetFriendCount,
    ISteamFriends_SteamFriends009_GetFriendByIndex,
    ISteamFriends_SteamFriends009_GetFriendRelationship,
    ISteamFriends_SteamFriends009_GetFriendPersonaState,
    ISteamFriends_SteamFriends009_GetFriendPersonaName,
    ISteamFriends_SteamFriends009_GetFriendGamePlayed,
    ISteamFriends_SteamFriends009_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends009_HasFriend,
    ISteamFriends_SteamFriends009_GetClanCount,
    ISteamFriends_SteamFriends009_GetClanByIndex,
    ISteamFriends_SteamFriends009_GetClanName,
    ISteamFriends_SteamFriends009_GetClanTag,
    ISteamFriends_SteamFriends009_GetFriendCountFromSource,
    ISteamFriends_SteamFriends009_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends009_IsUserInSource,
    ISteamFriends_SteamFriends009_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends009_ActivateGameOverlay,
    ISteamFriends_SteamFriends009_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends009_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends009_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends009_SetPlayedWith,
    ISteamFriends_SteamFriends009_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends009_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends009_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends009_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends009_RequestUserInformation,
    ISteamFriends_SteamFriends009_RequestClanOfficerList,
    ISteamFriends_SteamFriends009_GetClanOwner,
    ISteamFriends_SteamFriends009_GetClanOfficerCount,
    ISteamFriends_SteamFriends009_GetClanOfficerByIndex,
    ISteamFriends_SteamFriends009_GetUserRestrictions,
    ISteamFriends_SteamFriends009_SetRichPresence,
    ISteamFriends_SteamFriends009_ClearRichPresence,
    ISteamFriends_SteamFriends009_GetFriendRichPresence,
    ISteamFriends_SteamFriends009_GetFriendRichPresenceKeyCount,
    ISteamFriends_SteamFriends009_GetFriendRichPresenceKeyByIndex,
    ISteamFriends_SteamFriends009_InviteUserToGame,
    ISteamFriends_SteamFriends009_GetCoplayFriendCount,
    ISteamFriends_SteamFriends009_GetCoplayFriend,
    ISteamFriends_SteamFriends009_GetFriendCoplayTime,
    ISteamFriends_SteamFriends009_GetFriendCoplayGame,
    ISteamFriends_SteamFriends010_GetPersonaName,
    ISteamFriends_SteamFriends010_SetPersonaName,
    ISteamFriends_SteamFriends010_GetPersonaState,
    ISteamFriends_SteamFriends010_GetFriendCount,
    ISteamFriends_SteamFriends010_GetFriendByIndex,
    ISteamFriends_SteamFriends010_GetFriendRelationship,
    ISteamFriends_SteamFriends010_GetFriendPersonaState,
    ISteamFriends_SteamFriends010_GetFriendPersonaName,
    ISteamFriends_SteamFriends010_GetFriendGamePlayed,
    ISteamFriends_SteamFriends010_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends010_HasFriend,
    ISteamFriends_SteamFriends010_GetClanCount,
    ISteamFriends_SteamFriends010_GetClanByIndex,
    ISteamFriends_SteamFriends010_GetClanName,
    ISteamFriends_SteamFriends010_GetClanTag,
    ISteamFriends_SteamFriends010_GetClanActivityCounts,
    ISteamFriends_SteamFriends010_DownloadClanActivityCounts,
    ISteamFriends_SteamFriends010_GetFriendCountFromSource,
    ISteamFriends_SteamFriends010_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends010_IsUserInSource,
    ISteamFriends_SteamFriends010_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends010_ActivateGameOverlay,
    ISteamFriends_SteamFriends010_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends010_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends010_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends010_SetPlayedWith,
    ISteamFriends_SteamFriends010_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends010_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends010_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends010_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends010_RequestUserInformation,
    ISteamFriends_SteamFriends010_RequestClanOfficerList,
    ISteamFriends_SteamFriends010_GetClanOwner,
    ISteamFriends_SteamFriends010_GetClanOfficerCount,
    ISteamFriends_SteamFriends010_GetClanOfficerByIndex,
    ISteamFriends_SteamFriends010_GetUserRestrictions,
    ISteamFriends_SteamFriends010_SetRichPresence,
    ISteamFriends_SteamFriends010_ClearRichPresence,
    ISteamFriends_SteamFriends010_GetFriendRichPresence,
    ISteamFriends_SteamFriends010_GetFriendRichPresenceKeyCount,
    ISteamFriends_SteamFriends010_GetFriendRichPresenceKeyByIndex,
    ISteamFriends_SteamFriends010_InviteUserToGame,
    ISteamFriends_SteamFriends010_GetCoplayFriendCount,
    ISteamFriends_SteamFriends010_GetCoplayFriend,
    ISteamFriends_SteamFriends010_GetFriendCoplayTime,
    ISteamFriends_SteamFriends010_GetFriendCoplayGame,
    ISteamFriends_SteamFriends010_JoinClanChatRoom,
    ISteamFriends_SteamFriends010_LeaveClanChatRoom,
    ISteamFriends_SteamFriends010_GetClanChatMemberCount,
    ISteamFriends_SteamFriends010_GetChatMemberByIndex,
    ISteamFriends_SteamFriends010_SendClanChatMessage,
    ISteamFriends_SteamFriends010_GetClanChatMessage,
    ISteamFriends_SteamFriends010_IsClanChatAdmin,
    ISteamFriends_SteamFriends010_IsClanChatWindowOpenInSteam,
    ISteamFriends_SteamFriends010_OpenClanChatWindowInSteam,
    ISteamFriends_SteamFriends010_CloseClanChatWindowInSteam,
    ISteamFriends_SteamFriends010_SetListenForFriendsMessages,
    ISteamFriends_SteamFriends010_ReplyToFriendMessage,
    ISteamFriends_SteamFriends010_GetFriendMessage,
    ISteamFriends_SteamFriends011_GetPersonaName,
    ISteamFriends_SteamFriends011_SetPersonaName,
    ISteamFriends_SteamFriends011_GetPersonaState,
    ISteamFriends_SteamFriends011_GetFriendCount,
    ISteamFriends_SteamFriends011_GetFriendByIndex,
    ISteamFriends_SteamFriends011_GetFriendRelationship,
    ISteamFriends_SteamFriends011_GetFriendPersonaState,
    ISteamFriends_SteamFriends011_GetFriendPersonaName,
    ISteamFriends_SteamFriends011_GetFriendGamePlayed,
    ISteamFriends_SteamFriends011_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends011_HasFriend,
    ISteamFriends_SteamFriends011_GetClanCount,
    ISteamFriends_SteamFriends011_GetClanByIndex,
    ISteamFriends_SteamFriends011_GetClanName,
    ISteamFriends_SteamFriends011_GetClanTag,
    ISteamFriends_SteamFriends011_GetClanActivityCounts,
    ISteamFriends_SteamFriends011_DownloadClanActivityCounts,
    ISteamFriends_SteamFriends011_GetFriendCountFromSource,
    ISteamFriends_SteamFriends011_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends011_IsUserInSource,
    ISteamFriends_SteamFriends011_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends011_ActivateGameOverlay,
    ISteamFriends_SteamFriends011_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends011_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends011_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends011_SetPlayedWith,
    ISteamFriends_SteamFriends011_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends011_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends011_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends011_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends011_RequestUserInformation,
    ISteamFriends_SteamFriends011_RequestClanOfficerList,
    ISteamFriends_SteamFriends011_GetClanOwner,
    ISteamFriends_SteamFriends011_GetClanOfficerCount,
    ISteamFriends_SteamFriends011_GetClanOfficerByIndex,
    ISteamFriends_SteamFriends011_GetUserRestrictions,
    ISteamFriends_SteamFriends011_SetRichPresence,
    ISteamFriends_SteamFriends011_ClearRichPresence,
    ISteamFriends_SteamFriends011_GetFriendRichPresence,
    ISteamFriends_SteamFriends011_GetFriendRichPresenceKeyCount,
    ISteamFriends_SteamFriends011_GetFriendRichPresenceKeyByIndex,
    ISteamFriends_SteamFriends011_RequestFriendRichPresence,
    ISteamFriends_SteamFriends011_InviteUserToGame,
    ISteamFriends_SteamFriends011_GetCoplayFriendCount,
    ISteamFriends_SteamFriends011_GetCoplayFriend,
    ISteamFriends_SteamFriends011_GetFriendCoplayTime,
    ISteamFriends_SteamFriends011_GetFriendCoplayGame,
    ISteamFriends_SteamFriends011_JoinClanChatRoom,
    ISteamFriends_SteamFriends011_LeaveClanChatRoom,
    ISteamFriends_SteamFriends011_GetClanChatMemberCount,
    ISteamFriends_SteamFriends011_GetChatMemberByIndex,
    ISteamFriends_SteamFriends011_SendClanChatMessage,
    ISteamFriends_SteamFriends011_GetClanChatMessage,
    ISteamFriends_SteamFriends011_IsClanChatAdmin,
    ISteamFriends_SteamFriends011_IsClanChatWindowOpenInSteam,
    ISteamFriends_SteamFriends011_OpenClanChatWindowInSteam,
    ISteamFriends_SteamFriends011_CloseClanChatWindowInSteam,
    ISteamFriends_SteamFriends011_SetListenForFriendsMessages,
    ISteamFriends_SteamFriends011_ReplyToFriendMessage,
    ISteamFriends_SteamFriends011_GetFriendMessage,
    ISteamFriends_SteamFriends011_GetFollowerCount,
    ISteamFriends_SteamFriends011_IsFollowing,
    ISteamFriends_SteamFriends011_EnumerateFollowingList,
    ISteamFriends_SteamFriends012_GetPersonaName,
    ISteamFriends_SteamFriends012_SetPersonaName,
    ISteamFriends_SteamFriends012_GetPersonaState,
    ISteamFriends_SteamFriends012_GetFriendCount,
    ISteamFriends_SteamFriends012_GetFriendByIndex,
    ISteamFriends_SteamFriends012_GetFriendRelationship,
    ISteamFriends_SteamFriends012_GetFriendPersonaState,
    ISteamFriends_SteamFriends012_GetFriendPersonaName,
    ISteamFriends_SteamFriends012_GetFriendGamePlayed,
    ISteamFriends_SteamFriends012_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends012_HasFriend,
    ISteamFriends_SteamFriends012_GetClanCount,
    ISteamFriends_SteamFriends012_GetClanByIndex,
    ISteamFriends_SteamFriends012_GetClanName,
    ISteamFriends_SteamFriends012_GetClanTag,
    ISteamFriends_SteamFriends012_GetClanActivityCounts,
    ISteamFriends_SteamFriends012_DownloadClanActivityCounts,
    ISteamFriends_SteamFriends012_GetFriendCountFromSource,
    ISteamFriends_SteamFriends012_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends012_IsUserInSource,
    ISteamFriends_SteamFriends012_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends012_ActivateGameOverlay,
    ISteamFriends_SteamFriends012_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends012_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends012_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends012_SetPlayedWith,
    ISteamFriends_SteamFriends012_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends012_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends012_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends012_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends012_RequestUserInformation,
    ISteamFriends_SteamFriends012_RequestClanOfficerList,
    ISteamFriends_SteamFriends012_GetClanOwner,
    ISteamFriends_SteamFriends012_GetClanOfficerCount,
    ISteamFriends_SteamFriends012_GetClanOfficerByIndex,
    ISteamFriends_SteamFriends012_GetUserRestrictions,
    ISteamFriends_SteamFriends012_SetRichPresence,
    ISteamFriends_SteamFriends012_ClearRichPresence,
    ISteamFriends_SteamFriends012_GetFriendRichPresence,
    ISteamFriends_SteamFriends012_GetFriendRichPresenceKeyCount,
    ISteamFriends_SteamFriends012_GetFriendRichPresenceKeyByIndex,
    ISteamFriends_SteamFriends012_RequestFriendRichPresence,
    ISteamFriends_SteamFriends012_InviteUserToGame,
    ISteamFriends_SteamFriends012_GetCoplayFriendCount,
    ISteamFriends_SteamFriends012_GetCoplayFriend,
    ISteamFriends_SteamFriends012_GetFriendCoplayTime,
    ISteamFriends_SteamFriends012_GetFriendCoplayGame,
    ISteamFriends_SteamFriends012_JoinClanChatRoom,
    ISteamFriends_SteamFriends012_LeaveClanChatRoom,
    ISteamFriends_SteamFriends012_GetClanChatMemberCount,
    ISteamFriends_SteamFriends012_GetChatMemberByIndex,
    ISteamFriends_SteamFriends012_SendClanChatMessage,
    ISteamFriends_SteamFriends012_GetClanChatMessage,
    ISteamFriends_SteamFriends012_IsClanChatAdmin,
    ISteamFriends_SteamFriends012_IsClanChatWindowOpenInSteam,
    ISteamFriends_SteamFriends012_OpenClanChatWindowInSteam,
    ISteamFriends_SteamFriends012_CloseClanChatWindowInSteam,
    ISteamFriends_SteamFriends012_SetListenForFriendsMessages,
    ISteamFriends_SteamFriends012_ReplyToFriendMessage,
    ISteamFriends_SteamFriends012_GetFriendMessage,
    ISteamFriends_SteamFriends012_GetFollowerCount,
    ISteamFriends_SteamFriends012_IsFollowing,
    ISteamFriends_SteamFriends012_EnumerateFollowingList,
    ISteamFriends_SteamFriends013_GetPersonaName,
    ISteamFriends_SteamFriends013_SetPersonaName,
    ISteamFriends_SteamFriends013_GetPersonaState,
    ISteamFriends_SteamFriends013_GetFriendCount,
    ISteamFriends_SteamFriends013_GetFriendByIndex,
    ISteamFriends_SteamFriends013_GetFriendRelationship,
    ISteamFriends_SteamFriends013_GetFriendPersonaState,
    ISteamFriends_SteamFriends013_GetFriendPersonaName,
    ISteamFriends_SteamFriends013_GetFriendGamePlayed,
    ISteamFriends_SteamFriends013_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends013_HasFriend,
    ISteamFriends_SteamFriends013_GetClanCount,
    ISteamFriends_SteamFriends013_GetClanByIndex,
    ISteamFriends_SteamFriends013_GetClanName,
    ISteamFriends_SteamFriends013_GetClanTag,
    ISteamFriends_SteamFriends013_GetClanActivityCounts,
    ISteamFriends_SteamFriends013_DownloadClanActivityCounts,
    ISteamFriends_SteamFriends013_GetFriendCountFromSource,
    ISteamFriends_SteamFriends013_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends013_IsUserInSource,
    ISteamFriends_SteamFriends013_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends013_ActivateGameOverlay,
    ISteamFriends_SteamFriends013_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends013_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends013_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends013_SetPlayedWith,
    ISteamFriends_SteamFriends013_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends013_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends013_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends013_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends013_RequestUserInformation,
    ISteamFriends_SteamFriends013_RequestClanOfficerList,
    ISteamFriends_SteamFriends013_GetClanOwner,
    ISteamFriends_SteamFriends013_GetClanOfficerCount,
    ISteamFriends_SteamFriends013_GetClanOfficerByIndex,
    ISteamFriends_SteamFriends013_GetUserRestrictions,
    ISteamFriends_SteamFriends013_SetRichPresence,
    ISteamFriends_SteamFriends013_ClearRichPresence,
    ISteamFriends_SteamFriends013_GetFriendRichPresence,
    ISteamFriends_SteamFriends013_GetFriendRichPresenceKeyCount,
    ISteamFriends_SteamFriends013_GetFriendRichPresenceKeyByIndex,
    ISteamFriends_SteamFriends013_RequestFriendRichPresence,
    ISteamFriends_SteamFriends013_InviteUserToGame,
    ISteamFriends_SteamFriends013_GetCoplayFriendCount,
    ISteamFriends_SteamFriends013_GetCoplayFriend,
    ISteamFriends_SteamFriends013_GetFriendCoplayTime,
    ISteamFriends_SteamFriends013_GetFriendCoplayGame,
    ISteamFriends_SteamFriends013_JoinClanChatRoom,
    ISteamFriends_SteamFriends013_LeaveClanChatRoom,
    ISteamFriends_SteamFriends013_GetClanChatMemberCount,
    ISteamFriends_SteamFriends013_GetChatMemberByIndex,
    ISteamFriends_SteamFriends013_SendClanChatMessage,
    ISteamFriends_SteamFriends013_GetClanChatMessage,
    ISteamFriends_SteamFriends013_IsClanChatAdmin,
    ISteamFriends_SteamFriends013_IsClanChatWindowOpenInSteam,
    ISteamFriends_SteamFriends013_OpenClanChatWindowInSteam,
    ISteamFriends_SteamFriends013_CloseClanChatWindowInSteam,
    ISteamFriends_SteamFriends013_SetListenForFriendsMessages,
    ISteamFriends_SteamFriends013_ReplyToFriendMessage,
    ISteamFriends_SteamFriends013_GetFriendMessage,
    ISteamFriends_SteamFriends013_GetFollowerCount,
    ISteamFriends_SteamFriends013_IsFollowing,
    ISteamFriends_SteamFriends013_EnumerateFollowingList,
    ISteamFriends_SteamFriends014_GetPersonaName,
    ISteamFriends_SteamFriends014_SetPersonaName,
    ISteamFriends_SteamFriends014_GetPersonaState,
    ISteamFriends_SteamFriends014_GetFriendCount,
    ISteamFriends_SteamFriends014_GetFriendByIndex,
    ISteamFriends_SteamFriends014_GetFriendRelationship,
    ISteamFriends_SteamFriends014_GetFriendPersonaState,
    ISteamFriends_SteamFriends014_GetFriendPersonaName,
    ISteamFriends_SteamFriends014_GetFriendGamePlayed,
    ISteamFriends_SteamFriends014_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends014_GetPlayerNickname,
    ISteamFriends_SteamFriends014_HasFriend,
    ISteamFriends_SteamFriends014_GetClanCount,
    ISteamFriends_SteamFriends014_GetClanByIndex,
    ISteamFriends_SteamFriends014_GetClanName,
    ISteamFriends_SteamFriends014_GetClanTag,
    ISteamFriends_SteamFriends014_GetClanActivityCounts,
    ISteamFriends_SteamFriends014_DownloadClanActivityCounts,
    ISteamFriends_SteamFriends014_GetFriendCountFromSource,
    ISteamFriends_SteamFriends014_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends014_IsUserInSource,
    ISteamFriends_SteamFriends014_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends014_ActivateGameOverlay,
    ISteamFriends_SteamFriends014_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends014_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends014_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends014_SetPlayedWith,
    ISteamFriends_SteamFriends014_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends014_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends014_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends014_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends014_RequestUserInformation,
    ISteamFriends_SteamFriends014_RequestClanOfficerList,
    ISteamFriends_SteamFriends014_GetClanOwner,
    ISteamFriends_SteamFriends014_GetClanOfficerCount,
    ISteamFriends_SteamFriends014_GetClanOfficerByIndex,
    ISteamFriends_SteamFriends014_GetUserRestrictions,
    ISteamFriends_SteamFriends014_SetRichPresence,
    ISteamFriends_SteamFriends014_ClearRichPresence,
    ISteamFriends_SteamFriends014_GetFriendRichPresence,
    ISteamFriends_SteamFriends014_GetFriendRichPresenceKeyCount,
    ISteamFriends_SteamFriends014_GetFriendRichPresenceKeyByIndex,
    ISteamFriends_SteamFriends014_RequestFriendRichPresence,
    ISteamFriends_SteamFriends014_InviteUserToGame,
    ISteamFriends_SteamFriends014_GetCoplayFriendCount,
    ISteamFriends_SteamFriends014_GetCoplayFriend,
    ISteamFriends_SteamFriends014_GetFriendCoplayTime,
    ISteamFriends_SteamFriends014_GetFriendCoplayGame,
    ISteamFriends_SteamFriends014_JoinClanChatRoom,
    ISteamFriends_SteamFriends014_LeaveClanChatRoom,
    ISteamFriends_SteamFriends014_GetClanChatMemberCount,
    ISteamFriends_SteamFriends014_GetChatMemberByIndex,
    ISteamFriends_SteamFriends014_SendClanChatMessage,
    ISteamFriends_SteamFriends014_GetClanChatMessage,
    ISteamFriends_SteamFriends014_IsClanChatAdmin,
    ISteamFriends_SteamFriends014_IsClanChatWindowOpenInSteam,
    ISteamFriends_SteamFriends014_OpenClanChatWindowInSteam,
    ISteamFriends_SteamFriends014_CloseClanChatWindowInSteam,
    ISteamFriends_SteamFriends014_SetListenForFriendsMessages,
    ISteamFriends_SteamFriends014_ReplyToFriendMessage,
    ISteamFriends_SteamFriends014_GetFriendMessage,
    ISteamFriends_SteamFriends014_GetFollowerCount,
    ISteamFriends_SteamFriends014_IsFollowing,
    ISteamFriends_SteamFriends014_EnumerateFollowingList,
    ISteamFriends_SteamFriends015_GetPersonaName,
    ISteamFriends_SteamFriends015_SetPersonaName,
    ISteamFriends_SteamFriends015_GetPersonaState,
    ISteamFriends_SteamFriends015_GetFriendCount,
    ISteamFriends_SteamFriends015_GetFriendByIndex,
    ISteamFriends_SteamFriends015_GetFriendRelationship,
    ISteamFriends_SteamFriends015_GetFriendPersonaState,
    ISteamFriends_SteamFriends015_GetFriendPersonaName,
    ISteamFriends_SteamFriends015_GetFriendGamePlayed,
    ISteamFriends_SteamFriends015_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends015_GetFriendSteamLevel,
    ISteamFriends_SteamFriends015_GetPlayerNickname,
    ISteamFriends_SteamFriends015_GetFriendsGroupCount,
    ISteamFriends_SteamFriends015_GetFriendsGroupIDByIndex,
    ISteamFriends_SteamFriends015_GetFriendsGroupName,
    ISteamFriends_SteamFriends015_GetFriendsGroupMembersCount,
    ISteamFriends_SteamFriends015_GetFriendsGroupMembersList,
    ISteamFriends_SteamFriends015_HasFriend,
    ISteamFriends_SteamFriends015_GetClanCount,
    ISteamFriends_SteamFriends015_GetClanByIndex,
    ISteamFriends_SteamFriends015_GetClanName,
    ISteamFriends_SteamFriends015_GetClanTag,
    ISteamFriends_SteamFriends015_GetClanActivityCounts,
    ISteamFriends_SteamFriends015_DownloadClanActivityCounts,
    ISteamFriends_SteamFriends015_GetFriendCountFromSource,
    ISteamFriends_SteamFriends015_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends015_IsUserInSource,
    ISteamFriends_SteamFriends015_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends015_ActivateGameOverlay,
    ISteamFriends_SteamFriends015_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends015_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends015_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends015_SetPlayedWith,
    ISteamFriends_SteamFriends015_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends015_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends015_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends015_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends015_RequestUserInformation,
    ISteamFriends_SteamFriends015_RequestClanOfficerList,
    ISteamFriends_SteamFriends015_GetClanOwner,
    ISteamFriends_SteamFriends015_GetClanOfficerCount,
    ISteamFriends_SteamFriends015_GetClanOfficerByIndex,
    ISteamFriends_SteamFriends015_GetUserRestrictions,
    ISteamFriends_SteamFriends015_SetRichPresence,
    ISteamFriends_SteamFriends015_ClearRichPresence,
    ISteamFriends_SteamFriends015_GetFriendRichPresence,
    ISteamFriends_SteamFriends015_GetFriendRichPresenceKeyCount,
    ISteamFriends_SteamFriends015_GetFriendRichPresenceKeyByIndex,
    ISteamFriends_SteamFriends015_RequestFriendRichPresence,
    ISteamFriends_SteamFriends015_InviteUserToGame,
    ISteamFriends_SteamFriends015_GetCoplayFriendCount,
    ISteamFriends_SteamFriends015_GetCoplayFriend,
    ISteamFriends_SteamFriends015_GetFriendCoplayTime,
    ISteamFriends_SteamFriends015_GetFriendCoplayGame,
    ISteamFriends_SteamFriends015_JoinClanChatRoom,
    ISteamFriends_SteamFriends015_LeaveClanChatRoom,
    ISteamFriends_SteamFriends015_GetClanChatMemberCount,
    ISteamFriends_SteamFriends015_GetChatMemberByIndex,
    ISteamFriends_SteamFriends015_SendClanChatMessage,
    ISteamFriends_SteamFriends015_GetClanChatMessage,
    ISteamFriends_SteamFriends015_IsClanChatAdmin,
    ISteamFriends_SteamFriends015_IsClanChatWindowOpenInSteam,
    ISteamFriends_SteamFriends015_OpenClanChatWindowInSteam,
    ISteamFriends_SteamFriends015_CloseClanChatWindowInSteam,
    ISteamFriends_SteamFriends015_SetListenForFriendsMessages,
    ISteamFriends_SteamFriends015_ReplyToFriendMessage,
    ISteamFriends_SteamFriends015_GetFriendMessage,
    ISteamFriends_SteamFriends015_GetFollowerCount,
    ISteamFriends_SteamFriends015_IsFollowing,
    ISteamFriends_SteamFriends015_EnumerateFollowingList,
    ISteamFriends_SteamFriends015_IsClanPublic,
    ISteamFriends_SteamFriends015_IsClanOfficialGameGroup,
    ISteamFriends_SteamFriends017_GetPersonaName,
    ISteamFriends_SteamFriends017_SetPersonaName,
    ISteamFriends_SteamFriends017_GetPersonaState,
    ISteamFriends_SteamFriends017_GetFriendCount,
    ISteamFriends_SteamFriends017_GetFriendByIndex,
    ISteamFriends_SteamFriends017_GetFriendRelationship,
    ISteamFriends_SteamFriends017_GetFriendPersonaState,
    ISteamFriends_SteamFriends017_GetFriendPersonaName,
    ISteamFriends_SteamFriends017_GetFriendGamePlayed,
    ISteamFriends_SteamFriends017_GetFriendPersonaNameHistory,
    ISteamFriends_SteamFriends017_GetFriendSteamLevel,
    ISteamFriends_SteamFriends017_GetPlayerNickname,
    ISteamFriends_SteamFriends017_GetFriendsGroupCount,
    ISteamFriends_SteamFriends017_GetFriendsGroupIDByIndex,
    ISteamFriends_SteamFriends017_GetFriendsGroupName,
    ISteamFriends_SteamFriends017_GetFriendsGroupMembersCount,
    ISteamFriends_SteamFriends017_GetFriendsGroupMembersList,
    ISteamFriends_SteamFriends017_HasFriend,
    ISteamFriends_SteamFriends017_GetClanCount,
    ISteamFriends_SteamFriends017_GetClanByIndex,
    ISteamFriends_SteamFriends017_GetClanName,
    ISteamFriends_SteamFriends017_GetClanTag,
    ISteamFriends_SteamFriends017_GetClanActivityCounts,
    ISteamFriends_SteamFriends017_DownloadClanActivityCounts,
    ISteamFriends_SteamFriends017_GetFriendCountFromSource,
    ISteamFriends_SteamFriends017_GetFriendFromSourceByIndex,
    ISteamFriends_SteamFriends017_IsUserInSource,
    ISteamFriends_SteamFriends017_SetInGameVoiceSpeaking,
    ISteamFriends_SteamFriends017_ActivateGameOverlay,
    ISteamFriends_SteamFriends017_ActivateGameOverlayToUser,
    ISteamFriends_SteamFriends017_ActivateGameOverlayToWebPage,
    ISteamFriends_SteamFriends017_ActivateGameOverlayToStore,
    ISteamFriends_SteamFriends017_SetPlayedWith,
    ISteamFriends_SteamFriends017_ActivateGameOverlayInviteDialog,
    ISteamFriends_SteamFriends017_GetSmallFriendAvatar,
    ISteamFriends_SteamFriends017_GetMediumFriendAvatar,
    ISteamFriends_SteamFriends017_GetLargeFriendAvatar,
    ISteamFriends_SteamFriends017_RequestUserInformation,
    ISteamFriends_SteamFriends017_RequestClanOfficerList,
    ISteamFriends_SteamFriends017_GetClanOwner,
    ISteamFriends_SteamFriends017_GetClanOfficerCount,
    ISteamFriends_SteamFriends017_GetClanOfficerByIndex,
    ISteamFriends_SteamFriends017_GetUserRestrictions,
    ISteamFriends_SteamFriends017_SetRichPresence,
    ISteamFriends_SteamFriends017_ClearRichPresence,
    ISteamFriends_SteamFriends017_GetFriendRichPresence,
    ISteamFriends_SteamFriends017_GetFriendRichPresenceKeyCount,
    ISteamFriends_SteamFriends017_GetFriendRichPresenceKeyByIndex,
    ISteamFriends_SteamFriends017_RequestFriendRichPresence,
    ISteamFriends_SteamFriends017_InviteUserToGame,
    ISteamFriends_SteamFriends017_GetCoplayFriendCount,
    ISteamFriends_SteamFriends017_GetCoplayFriend,
    ISteamFriends_SteamFriends017_GetFriendCoplayTime,
    ISteamFriends_SteamFriends017_GetFriendCoplayGame,
    ISteamFriends_SteamFriends017_JoinClanChatRoom,
    ISteamFriends_SteamFriends017_LeaveClanChatRoom,
    ISteamFriends_SteamFriends017_GetClanChatMemberCount,
    ISteamFriends_SteamFriends017_GetChatMemberByIndex,
    ISteamFriends_SteamFriends017_SendClanChatMessage,
    ISteamFriends_SteamFriends017_GetClanChatMessage,
    ISteamFriends_SteamFriends017_IsClanChatAdmin,
    ISteamFriends_SteamFriends017_IsClanChatWindowOpenInSteam,
    ISteamFriends_SteamFriends017_OpenClanChatWindowInSteam,
    ISteamFriends_SteamFriends017_CloseClanChatWindowInSteam,
    ISteamFriends_SteamFriends017_SetListenForFriendsMessages,
    ISteamFriends_SteamFriends017_ReplyToFriendMessage,
    ISteamFriends_SteamFriends017_GetFriendMessage,
    ISteamFriends_SteamFriends017_GetFollowerCount,
    ISteamFriends_SteamFriends017_IsFollowing,
    ISteamFriends_SteamFriends017_EnumerateFollowingList,
    ISteamFriends_SteamFriends017_IsClanPublic,
    ISteamFriends_SteamFriends017_IsClanOfficialGameGroup,
    ISteamFriends_SteamFriends017_GetNumChatsWithUnreadPriorityMessages,
    ISteamFriends_SteamFriends017_ActivateGameOverlayRemotePlayTogetherInviteDialog,
    ISteamFriends_SteamFriends017_RegisterProtocolInOverlayBrowser,
    ISteamFriends_SteamFriends017_ActivateGameOverlayInviteDialogConnectString,
    ISteamFriends_SteamFriends017_RequestEquippedProfileItems,
    ISteamFriends_SteamFriends017_BHasEquippedProfileItem,
    ISteamFriends_SteamFriends017_GetProfileItemPropertyString,
    ISteamFriends_SteamFriends017_GetProfileItemPropertyUint,
    ISteamGameCoordinator_SteamGameCoordinator001_SendMessage,
    ISteamGameCoordinator_SteamGameCoordinator001_IsMessageAvailable,
    ISteamGameCoordinator_SteamGameCoordinator001_RetrieveMessage,
    ISteamGameServer_SteamGameServer002_LogOn,
    ISteamGameServer_SteamGameServer002_LogOff,
    ISteamGameServer_SteamGameServer002_BLoggedOn,
    ISteamGameServer_SteamGameServer002_GSSetSpawnCount,
    ISteamGameServer_SteamGameServer002_GSGetSteam2GetEncryptionKeyToSendToNewClient,
    ISteamGameServer_SteamGameServer002_GSSendSteam2UserConnect,
    ISteamGameServer_SteamGameServer002_GSSendSteam3UserConnect,
    ISteamGameServer_SteamGameServer002_GSRemoveUserConnect,
    ISteamGameServer_SteamGameServer002_GSSendUserDisconnect,
    ISteamGameServer_SteamGameServer002_GSSendUserStatusResponse,
    ISteamGameServer_SteamGameServer002_Obsolete_GSSetStatus,
    ISteamGameServer_SteamGameServer002_GSUpdateStatus,
    ISteamGameServer_SteamGameServer002_BSecure,
    ISteamGameServer_SteamGameServer002_GetSteamID,
    ISteamGameServer_SteamGameServer002_GSSetServerType,
    ISteamGameServer_SteamGameServer002_GSSetServerType2,
    ISteamGameServer_SteamGameServer002_GSUpdateStatus2,
    ISteamGameServer_SteamGameServer002_GSCreateUnauthenticatedUser,
    ISteamGameServer_SteamGameServer002_GSSetUserData,
    ISteamGameServer_SteamGameServer002_GSUpdateSpectatorPort,
    ISteamGameServer_SteamGameServer002_GSSetGameType,
    ISteamGameServer_SteamGameServer003_LogOn,
    ISteamGameServer_SteamGameServer003_LogOff,
    ISteamGameServer_SteamGameServer003_BLoggedOn,
    ISteamGameServer_SteamGameServer003_BSecure,
    ISteamGameServer_SteamGameServer003_GetSteamID,
    ISteamGameServer_SteamGameServer003_GSGetSteam2GetEncryptionKeyToSendToNewClient,
    ISteamGameServer_SteamGameServer003_GSSendUserConnect,
    ISteamGameServer_SteamGameServer003_GSRemoveUserConnect,
    ISteamGameServer_SteamGameServer003_GSSendUserDisconnect,
    ISteamGameServer_SteamGameServer003_GSSetSpawnCount,
    ISteamGameServer_SteamGameServer003_GSSetServerType,
    ISteamGameServer_SteamGameServer003_GSUpdateStatus,
    ISteamGameServer_SteamGameServer003_GSCreateUnauthenticatedUser,
    ISteamGameServer_SteamGameServer003_GSSetUserData,
    ISteamGameServer_SteamGameServer003_GSUpdateSpectatorPort,
    ISteamGameServer_SteamGameServer003_GSSetGameType,
    ISteamGameServer_SteamGameServer003_GSGetUserAchievementStatus,
    ISteamGameServer_SteamGameServer004_LogOn,
    ISteamGameServer_SteamGameServer004_LogOff,
    ISteamGameServer_SteamGameServer004_BLoggedOn,
    ISteamGameServer_SteamGameServer004_BSecure,
    ISteamGameServer_SteamGameServer004_GetSteamID,
    ISteamGameServer_SteamGameServer004_SendUserConnectAndAuthenticate,
    ISteamGameServer_SteamGameServer004_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer004_SendUserDisconnect,
    ISteamGameServer_SteamGameServer004_BUpdateUserData,
    ISteamGameServer_SteamGameServer004_BSetServerType,
    ISteamGameServer_SteamGameServer004_UpdateServerStatus,
    ISteamGameServer_SteamGameServer004_UpdateSpectatorPort,
    ISteamGameServer_SteamGameServer004_SetGameType,
    ISteamGameServer_SteamGameServer004_BGetUserAchievementStatus,
    ISteamGameServer_SteamGameServer005_LogOn,
    ISteamGameServer_SteamGameServer005_LogOff,
    ISteamGameServer_SteamGameServer005_BLoggedOn,
    ISteamGameServer_SteamGameServer005_BSecure,
    ISteamGameServer_SteamGameServer005_GetSteamID,
    ISteamGameServer_SteamGameServer005_SendUserConnectAndAuthenticate,
    ISteamGameServer_SteamGameServer005_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer005_SendUserDisconnect,
    ISteamGameServer_SteamGameServer005_BUpdateUserData,
    ISteamGameServer_SteamGameServer005_BSetServerType,
    ISteamGameServer_SteamGameServer005_UpdateServerStatus,
    ISteamGameServer_SteamGameServer005_UpdateSpectatorPort,
    ISteamGameServer_SteamGameServer005_SetGameType,
    ISteamGameServer_SteamGameServer005_BGetUserAchievementStatus,
    ISteamGameServer_SteamGameServer008_LogOn,
    ISteamGameServer_SteamGameServer008_LogOff,
    ISteamGameServer_SteamGameServer008_BLoggedOn,
    ISteamGameServer_SteamGameServer008_BSecure,
    ISteamGameServer_SteamGameServer008_GetSteamID,
    ISteamGameServer_SteamGameServer008_SendUserConnectAndAuthenticate,
    ISteamGameServer_SteamGameServer008_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer008_SendUserDisconnect,
    ISteamGameServer_SteamGameServer008_BUpdateUserData,
    ISteamGameServer_SteamGameServer008_BSetServerType,
    ISteamGameServer_SteamGameServer008_UpdateServerStatus,
    ISteamGameServer_SteamGameServer008_UpdateSpectatorPort,
    ISteamGameServer_SteamGameServer008_SetGameType,
    ISteamGameServer_SteamGameServer008_BGetUserAchievementStatus,
    ISteamGameServer_SteamGameServer008_GetGameplayStats,
    ISteamGameServer_SteamGameServer008_RequestUserGroupStatus,
    ISteamGameServer_SteamGameServer008_GetPublicIP,
    ISteamGameServer_SteamGameServer009_LogOn,
    ISteamGameServer_SteamGameServer009_LogOff,
    ISteamGameServer_SteamGameServer009_BLoggedOn,
    ISteamGameServer_SteamGameServer009_BSecure,
    ISteamGameServer_SteamGameServer009_GetSteamID,
    ISteamGameServer_SteamGameServer009_SendUserConnectAndAuthenticate,
    ISteamGameServer_SteamGameServer009_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer009_SendUserDisconnect,
    ISteamGameServer_SteamGameServer009_BUpdateUserData,
    ISteamGameServer_SteamGameServer009_BSetServerType,
    ISteamGameServer_SteamGameServer009_UpdateServerStatus,
    ISteamGameServer_SteamGameServer009_UpdateSpectatorPort,
    ISteamGameServer_SteamGameServer009_SetGameType,
    ISteamGameServer_SteamGameServer009_BGetUserAchievementStatus,
    ISteamGameServer_SteamGameServer009_GetGameplayStats,
    ISteamGameServer_SteamGameServer009_RequestUserGroupStatus,
    ISteamGameServer_SteamGameServer009_GetPublicIP,
    ISteamGameServer_SteamGameServer009_SetGameData,
    ISteamGameServer_SteamGameServer009_UserHasLicenseForApp,
    ISteamGameServer_SteamGameServer010_LogOn,
    ISteamGameServer_SteamGameServer010_LogOff,
    ISteamGameServer_SteamGameServer010_BLoggedOn,
    ISteamGameServer_SteamGameServer010_BSecure,
    ISteamGameServer_SteamGameServer010_GetSteamID,
    ISteamGameServer_SteamGameServer010_SendUserConnectAndAuthenticate,
    ISteamGameServer_SteamGameServer010_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer010_SendUserDisconnect,
    ISteamGameServer_SteamGameServer010_BUpdateUserData,
    ISteamGameServer_SteamGameServer010_BSetServerType,
    ISteamGameServer_SteamGameServer010_UpdateServerStatus,
    ISteamGameServer_SteamGameServer010_UpdateSpectatorPort,
    ISteamGameServer_SteamGameServer010_SetGameTags,
    ISteamGameServer_SteamGameServer010_GetGameplayStats,
    ISteamGameServer_SteamGameServer010_GetServerReputation,
    ISteamGameServer_SteamGameServer010_RequestUserGroupStatus,
    ISteamGameServer_SteamGameServer010_GetPublicIP,
    ISteamGameServer_SteamGameServer010_SetGameData,
    ISteamGameServer_SteamGameServer010_UserHasLicenseForApp,
    ISteamGameServer_SteamGameServer010_GetAuthSessionTicket,
    ISteamGameServer_SteamGameServer010_BeginAuthSession,
    ISteamGameServer_SteamGameServer010_EndAuthSession,
    ISteamGameServer_SteamGameServer010_CancelAuthTicket,
    ISteamGameServer_SteamGameServer011_InitGameServer,
    ISteamGameServer_SteamGameServer011_SetProduct,
    ISteamGameServer_SteamGameServer011_SetGameDescription,
    ISteamGameServer_SteamGameServer011_SetModDir,
    ISteamGameServer_SteamGameServer011_SetDedicatedServer,
    ISteamGameServer_SteamGameServer011_LogOn,
    ISteamGameServer_SteamGameServer011_LogOnAnonymous,
    ISteamGameServer_SteamGameServer011_LogOff,
    ISteamGameServer_SteamGameServer011_BLoggedOn,
    ISteamGameServer_SteamGameServer011_BSecure,
    ISteamGameServer_SteamGameServer011_GetSteamID,
    ISteamGameServer_SteamGameServer011_WasRestartRequested,
    ISteamGameServer_SteamGameServer011_SetMaxPlayerCount,
    ISteamGameServer_SteamGameServer011_SetBotPlayerCount,
    ISteamGameServer_SteamGameServer011_SetServerName,
    ISteamGameServer_SteamGameServer011_SetMapName,
    ISteamGameServer_SteamGameServer011_SetPasswordProtected,
    ISteamGameServer_SteamGameServer011_SetSpectatorPort,
    ISteamGameServer_SteamGameServer011_SetSpectatorServerName,
    ISteamGameServer_SteamGameServer011_ClearAllKeyValues,
    ISteamGameServer_SteamGameServer011_SetKeyValue,
    ISteamGameServer_SteamGameServer011_SetGameTags,
    ISteamGameServer_SteamGameServer011_SetGameData,
    ISteamGameServer_SteamGameServer011_SetRegion,
    ISteamGameServer_SteamGameServer011_SendUserConnectAndAuthenticate,
    ISteamGameServer_SteamGameServer011_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer011_SendUserDisconnect,
    ISteamGameServer_SteamGameServer011_BUpdateUserData,
    ISteamGameServer_SteamGameServer011_GetAuthSessionTicket,
    ISteamGameServer_SteamGameServer011_BeginAuthSession,
    ISteamGameServer_SteamGameServer011_EndAuthSession,
    ISteamGameServer_SteamGameServer011_CancelAuthTicket,
    ISteamGameServer_SteamGameServer011_UserHasLicenseForApp,
    ISteamGameServer_SteamGameServer011_RequestUserGroupStatus,
    ISteamGameServer_SteamGameServer011_GetGameplayStats,
    ISteamGameServer_SteamGameServer011_GetServerReputation,
    ISteamGameServer_SteamGameServer011_GetPublicIP,
    ISteamGameServer_SteamGameServer011_HandleIncomingPacket,
    ISteamGameServer_SteamGameServer011_GetNextOutgoingPacket,
    ISteamGameServer_SteamGameServer011_EnableHeartbeats,
    ISteamGameServer_SteamGameServer011_SetHeartbeatInterval,
    ISteamGameServer_SteamGameServer011_ForceHeartbeat,
    ISteamGameServer_SteamGameServer011_AssociateWithClan,
    ISteamGameServer_SteamGameServer011_ComputeNewPlayerCompatibility,
    ISteamGameServer_SteamGameServer012_InitGameServer,
    ISteamGameServer_SteamGameServer012_SetProduct,
    ISteamGameServer_SteamGameServer012_SetGameDescription,
    ISteamGameServer_SteamGameServer012_SetModDir,
    ISteamGameServer_SteamGameServer012_SetDedicatedServer,
    ISteamGameServer_SteamGameServer012_LogOn,
    ISteamGameServer_SteamGameServer012_LogOnAnonymous,
    ISteamGameServer_SteamGameServer012_LogOff,
    ISteamGameServer_SteamGameServer012_BLoggedOn,
    ISteamGameServer_SteamGameServer012_BSecure,
    ISteamGameServer_SteamGameServer012_GetSteamID,
    ISteamGameServer_SteamGameServer012_WasRestartRequested,
    ISteamGameServer_SteamGameServer012_SetMaxPlayerCount,
    ISteamGameServer_SteamGameServer012_SetBotPlayerCount,
    ISteamGameServer_SteamGameServer012_SetServerName,
    ISteamGameServer_SteamGameServer012_SetMapName,
    ISteamGameServer_SteamGameServer012_SetPasswordProtected,
    ISteamGameServer_SteamGameServer012_SetSpectatorPort,
    ISteamGameServer_SteamGameServer012_SetSpectatorServerName,
    ISteamGameServer_SteamGameServer012_ClearAllKeyValues,
    ISteamGameServer_SteamGameServer012_SetKeyValue,
    ISteamGameServer_SteamGameServer012_SetGameTags,
    ISteamGameServer_SteamGameServer012_SetGameData,
    ISteamGameServer_SteamGameServer012_SetRegion,
    ISteamGameServer_SteamGameServer012_SendUserConnectAndAuthenticate,
    ISteamGameServer_SteamGameServer012_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer012_SendUserDisconnect,
    ISteamGameServer_SteamGameServer012_BUpdateUserData,
    ISteamGameServer_SteamGameServer012_GetAuthSessionTicket,
    ISteamGameServer_SteamGameServer012_BeginAuthSession,
    ISteamGameServer_SteamGameServer012_EndAuthSession,
    ISteamGameServer_SteamGameServer012_CancelAuthTicket,
    ISteamGameServer_SteamGameServer012_UserHasLicenseForApp,
    ISteamGameServer_SteamGameServer012_RequestUserGroupStatus,
    ISteamGameServer_SteamGameServer012_GetGameplayStats,
    ISteamGameServer_SteamGameServer012_GetServerReputation,
    ISteamGameServer_SteamGameServer012_GetPublicIP,
    ISteamGameServer_SteamGameServer012_HandleIncomingPacket,
    ISteamGameServer_SteamGameServer012_GetNextOutgoingPacket,
    ISteamGameServer_SteamGameServer012_EnableHeartbeats,
    ISteamGameServer_SteamGameServer012_SetHeartbeatInterval,
    ISteamGameServer_SteamGameServer012_ForceHeartbeat,
    ISteamGameServer_SteamGameServer012_AssociateWithClan,
    ISteamGameServer_SteamGameServer012_ComputeNewPlayerCompatibility,
    ISteamGameServer_SteamGameServer013_InitGameServer,
    ISteamGameServer_SteamGameServer013_SetProduct,
    ISteamGameServer_SteamGameServer013_SetGameDescription,
    ISteamGameServer_SteamGameServer013_SetModDir,
    ISteamGameServer_SteamGameServer013_SetDedicatedServer,
    ISteamGameServer_SteamGameServer013_LogOn,
    ISteamGameServer_SteamGameServer013_LogOnAnonymous,
    ISteamGameServer_SteamGameServer013_LogOff,
    ISteamGameServer_SteamGameServer013_BLoggedOn,
    ISteamGameServer_SteamGameServer013_BSecure,
    ISteamGameServer_SteamGameServer013_GetSteamID,
    ISteamGameServer_SteamGameServer013_WasRestartRequested,
    ISteamGameServer_SteamGameServer013_SetMaxPlayerCount,
    ISteamGameServer_SteamGameServer013_SetBotPlayerCount,
    ISteamGameServer_SteamGameServer013_SetServerName,
    ISteamGameServer_SteamGameServer013_SetMapName,
    ISteamGameServer_SteamGameServer013_SetPasswordProtected,
    ISteamGameServer_SteamGameServer013_SetSpectatorPort,
    ISteamGameServer_SteamGameServer013_SetSpectatorServerName,
    ISteamGameServer_SteamGameServer013_ClearAllKeyValues,
    ISteamGameServer_SteamGameServer013_SetKeyValue,
    ISteamGameServer_SteamGameServer013_SetGameTags,
    ISteamGameServer_SteamGameServer013_SetGameData,
    ISteamGameServer_SteamGameServer013_SetRegion,
    ISteamGameServer_SteamGameServer013_SendUserConnectAndAuthenticate,
    ISteamGameServer_SteamGameServer013_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer013_SendUserDisconnect,
    ISteamGameServer_SteamGameServer013_BUpdateUserData,
    ISteamGameServer_SteamGameServer013_GetAuthSessionTicket,
    ISteamGameServer_SteamGameServer013_BeginAuthSession,
    ISteamGameServer_SteamGameServer013_EndAuthSession,
    ISteamGameServer_SteamGameServer013_CancelAuthTicket,
    ISteamGameServer_SteamGameServer013_UserHasLicenseForApp,
    ISteamGameServer_SteamGameServer013_RequestUserGroupStatus,
    ISteamGameServer_SteamGameServer013_GetGameplayStats,
    ISteamGameServer_SteamGameServer013_GetServerReputation,
    ISteamGameServer_SteamGameServer013_GetPublicIP,
    ISteamGameServer_SteamGameServer013_HandleIncomingPacket,
    ISteamGameServer_SteamGameServer013_GetNextOutgoingPacket,
    ISteamGameServer_SteamGameServer013_EnableHeartbeats,
    ISteamGameServer_SteamGameServer013_SetHeartbeatInterval,
    ISteamGameServer_SteamGameServer013_ForceHeartbeat,
    ISteamGameServer_SteamGameServer013_AssociateWithClan,
    ISteamGameServer_SteamGameServer013_ComputeNewPlayerCompatibility,
    ISteamGameServer_SteamGameServer014_InitGameServer,
    ISteamGameServer_SteamGameServer014_SetProduct,
    ISteamGameServer_SteamGameServer014_SetGameDescription,
    ISteamGameServer_SteamGameServer014_SetModDir,
    ISteamGameServer_SteamGameServer014_SetDedicatedServer,
    ISteamGameServer_SteamGameServer014_LogOn,
    ISteamGameServer_SteamGameServer014_LogOnAnonymous,
    ISteamGameServer_SteamGameServer014_LogOff,
    ISteamGameServer_SteamGameServer014_BLoggedOn,
    ISteamGameServer_SteamGameServer014_BSecure,
    ISteamGameServer_SteamGameServer014_GetSteamID,
    ISteamGameServer_SteamGameServer014_WasRestartRequested,
    ISteamGameServer_SteamGameServer014_SetMaxPlayerCount,
    ISteamGameServer_SteamGameServer014_SetBotPlayerCount,
    ISteamGameServer_SteamGameServer014_SetServerName,
    ISteamGameServer_SteamGameServer014_SetMapName,
    ISteamGameServer_SteamGameServer014_SetPasswordProtected,
    ISteamGameServer_SteamGameServer014_SetSpectatorPort,
    ISteamGameServer_SteamGameServer014_SetSpectatorServerName,
    ISteamGameServer_SteamGameServer014_ClearAllKeyValues,
    ISteamGameServer_SteamGameServer014_SetKeyValue,
    ISteamGameServer_SteamGameServer014_SetGameTags,
    ISteamGameServer_SteamGameServer014_SetGameData,
    ISteamGameServer_SteamGameServer014_SetRegion,
    ISteamGameServer_SteamGameServer014_SetAdvertiseServerActive,
    ISteamGameServer_SteamGameServer014_GetAuthSessionTicket,
    ISteamGameServer_SteamGameServer014_BeginAuthSession,
    ISteamGameServer_SteamGameServer014_EndAuthSession,
    ISteamGameServer_SteamGameServer014_CancelAuthTicket,
    ISteamGameServer_SteamGameServer014_UserHasLicenseForApp,
    ISteamGameServer_SteamGameServer014_RequestUserGroupStatus,
    ISteamGameServer_SteamGameServer014_GetGameplayStats,
    ISteamGameServer_SteamGameServer014_GetServerReputation,
    ISteamGameServer_SteamGameServer014_GetPublicIP,
    ISteamGameServer_SteamGameServer014_HandleIncomingPacket,
    ISteamGameServer_SteamGameServer014_GetNextOutgoingPacket,
    ISteamGameServer_SteamGameServer014_AssociateWithClan,
    ISteamGameServer_SteamGameServer014_ComputeNewPlayerCompatibility,
    ISteamGameServer_SteamGameServer014_SendUserConnectAndAuthenticate_DEPRECATED,
    ISteamGameServer_SteamGameServer014_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer014_SendUserDisconnect_DEPRECATED,
    ISteamGameServer_SteamGameServer014_BUpdateUserData,
    ISteamGameServer_SteamGameServer014_SetMasterServerHeartbeatInterval_DEPRECATED,
    ISteamGameServer_SteamGameServer014_ForceMasterServerHeartbeat_DEPRECATED,
    ISteamGameServer_SteamGameServer015_InitGameServer,
    ISteamGameServer_SteamGameServer015_SetProduct,
    ISteamGameServer_SteamGameServer015_SetGameDescription,
    ISteamGameServer_SteamGameServer015_SetModDir,
    ISteamGameServer_SteamGameServer015_SetDedicatedServer,
    ISteamGameServer_SteamGameServer015_LogOn,
    ISteamGameServer_SteamGameServer015_LogOnAnonymous,
    ISteamGameServer_SteamGameServer015_LogOff,
    ISteamGameServer_SteamGameServer015_BLoggedOn,
    ISteamGameServer_SteamGameServer015_BSecure,
    ISteamGameServer_SteamGameServer015_GetSteamID,
    ISteamGameServer_SteamGameServer015_WasRestartRequested,
    ISteamGameServer_SteamGameServer015_SetMaxPlayerCount,
    ISteamGameServer_SteamGameServer015_SetBotPlayerCount,
    ISteamGameServer_SteamGameServer015_SetServerName,
    ISteamGameServer_SteamGameServer015_SetMapName,
    ISteamGameServer_SteamGameServer015_SetPasswordProtected,
    ISteamGameServer_SteamGameServer015_SetSpectatorPort,
    ISteamGameServer_SteamGameServer015_SetSpectatorServerName,
    ISteamGameServer_SteamGameServer015_ClearAllKeyValues,
    ISteamGameServer_SteamGameServer015_SetKeyValue,
    ISteamGameServer_SteamGameServer015_SetGameTags,
    ISteamGameServer_SteamGameServer015_SetGameData,
    ISteamGameServer_SteamGameServer015_SetRegion,
    ISteamGameServer_SteamGameServer015_SetAdvertiseServerActive,
    ISteamGameServer_SteamGameServer015_GetAuthSessionTicket,
    ISteamGameServer_SteamGameServer015_BeginAuthSession,
    ISteamGameServer_SteamGameServer015_EndAuthSession,
    ISteamGameServer_SteamGameServer015_CancelAuthTicket,
    ISteamGameServer_SteamGameServer015_UserHasLicenseForApp,
    ISteamGameServer_SteamGameServer015_RequestUserGroupStatus,
    ISteamGameServer_SteamGameServer015_GetGameplayStats,
    ISteamGameServer_SteamGameServer015_GetServerReputation,
    ISteamGameServer_SteamGameServer015_GetPublicIP,
    ISteamGameServer_SteamGameServer015_HandleIncomingPacket,
    ISteamGameServer_SteamGameServer015_GetNextOutgoingPacket,
    ISteamGameServer_SteamGameServer015_AssociateWithClan,
    ISteamGameServer_SteamGameServer015_ComputeNewPlayerCompatibility,
    ISteamGameServer_SteamGameServer015_SendUserConnectAndAuthenticate_DEPRECATED,
    ISteamGameServer_SteamGameServer015_CreateUnauthenticatedUserConnection,
    ISteamGameServer_SteamGameServer015_SendUserDisconnect_DEPRECATED,
    ISteamGameServer_SteamGameServer015_BUpdateUserData,
    ISteamGameServer_SteamGameServer015_SetMasterServerHeartbeatInterval_DEPRECATED,
    ISteamGameServer_SteamGameServer015_ForceMasterServerHeartbeat_DEPRECATED,
    ISteamGameServerStats_SteamGameServerStats001_RequestUserStats,
    ISteamGameServerStats_SteamGameServerStats001_GetUserStat,
    ISteamGameServerStats_SteamGameServerStats001_GetUserStat_2,
    ISteamGameServerStats_SteamGameServerStats001_GetUserAchievement,
    ISteamGameServerStats_SteamGameServerStats001_SetUserStat,
    ISteamGameServerStats_SteamGameServerStats001_SetUserStat_2,
    ISteamGameServerStats_SteamGameServerStats001_UpdateUserAvgRateStat,
    ISteamGameServerStats_SteamGameServerStats001_SetUserAchievement,
    ISteamGameServerStats_SteamGameServerStats001_ClearUserAchievement,
    ISteamGameServerStats_SteamGameServerStats001_StoreUserStats,
    ISteamGameStats_SteamGameStats001_GetNewSession,
    ISteamGameStats_SteamGameStats001_EndSession,
    ISteamGameStats_SteamGameStats001_AddSessionAttributeInt,
    ISteamGameStats_SteamGameStats001_AddSessionAttributeString,
    ISteamGameStats_SteamGameStats001_AddSessionAttributeFloat,
    ISteamGameStats_SteamGameStats001_AddNewRow,
    ISteamGameStats_SteamGameStats001_CommitRow,
    ISteamGameStats_SteamGameStats001_CommitOutstandingRows,
    ISteamGameStats_SteamGameStats001_AddRowAttributeInt,
    ISteamGameStats_SteamGameStats001_AddRowAtributeString,
    ISteamGameStats_SteamGameStats001_AddRowAttributeFloat,
    ISteamGameStats_SteamGameStats001_AddSessionAttributeInt64,
    ISteamGameStats_SteamGameStats001_AddRowAttributeInt64,
    ISteamInput_SteamInput001_Init,
    ISteamInput_SteamInput001_Shutdown,
    ISteamInput_SteamInput001_RunFrame,
    ISteamInput_SteamInput001_GetConnectedControllers,
    ISteamInput_SteamInput001_GetActionSetHandle,
    ISteamInput_SteamInput001_ActivateActionSet,
    ISteamInput_SteamInput001_GetCurrentActionSet,
    ISteamInput_SteamInput001_ActivateActionSetLayer,
    ISteamInput_SteamInput001_DeactivateActionSetLayer,
    ISteamInput_SteamInput001_DeactivateAllActionSetLayers,
    ISteamInput_SteamInput001_GetActiveActionSetLayers,
    ISteamInput_SteamInput001_GetDigitalActionHandle,
    ISteamInput_SteamInput001_GetDigitalActionData,
    ISteamInput_SteamInput001_GetDigitalActionOrigins,
    ISteamInput_SteamInput001_GetAnalogActionHandle,
    ISteamInput_SteamInput001_GetAnalogActionData,
    ISteamInput_SteamInput001_GetAnalogActionOrigins,
    ISteamInput_SteamInput001_GetGlyphForActionOrigin,
    ISteamInput_SteamInput001_GetStringForActionOrigin,
    ISteamInput_SteamInput001_StopAnalogActionMomentum,
    ISteamInput_SteamInput001_GetMotionData,
    ISteamInput_SteamInput001_TriggerVibration,
    ISteamInput_SteamInput001_SetLEDColor,
    ISteamInput_SteamInput001_TriggerHapticPulse,
    ISteamInput_SteamInput001_TriggerRepeatedHapticPulse,
    ISteamInput_SteamInput001_ShowBindingPanel,
    ISteamInput_SteamInput001_GetInputTypeForHandle,
    ISteamInput_SteamInput001_GetControllerForGamepadIndex,
    ISteamInput_SteamInput001_GetGamepadIndexForController,
    ISteamInput_SteamInput001_GetStringForXboxOrigin,
    ISteamInput_SteamInput001_GetGlyphForXboxOrigin,
    ISteamInput_SteamInput001_GetActionOriginFromXboxOrigin,
    ISteamInput_SteamInput001_TranslateActionOrigin,
    ISteamInput_SteamInput001_GetDeviceBindingRevision,
    ISteamInput_SteamInput001_GetRemotePlaySessionID,
    ISteamInput_SteamInput002_Init,
    ISteamInput_SteamInput002_Shutdown,
    ISteamInput_SteamInput002_RunFrame,
    ISteamInput_SteamInput002_GetConnectedControllers,
    ISteamInput_SteamInput002_GetActionSetHandle,
    ISteamInput_SteamInput002_ActivateActionSet,
    ISteamInput_SteamInput002_GetCurrentActionSet,
    ISteamInput_SteamInput002_ActivateActionSetLayer,
    ISteamInput_SteamInput002_DeactivateActionSetLayer,
    ISteamInput_SteamInput002_DeactivateAllActionSetLayers,
    ISteamInput_SteamInput002_GetActiveActionSetLayers,
    ISteamInput_SteamInput002_GetDigitalActionHandle,
    ISteamInput_SteamInput002_GetDigitalActionData,
    ISteamInput_SteamInput002_GetDigitalActionOrigins,
    ISteamInput_SteamInput002_GetAnalogActionHandle,
    ISteamInput_SteamInput002_GetAnalogActionData,
    ISteamInput_SteamInput002_GetAnalogActionOrigins,
    ISteamInput_SteamInput002_GetGlyphForActionOrigin,
    ISteamInput_SteamInput002_GetStringForActionOrigin,
    ISteamInput_SteamInput002_StopAnalogActionMomentum,
    ISteamInput_SteamInput002_GetMotionData,
    ISteamInput_SteamInput002_TriggerVibration,
    ISteamInput_SteamInput002_SetLEDColor,
    ISteamInput_SteamInput002_TriggerHapticPulse,
    ISteamInput_SteamInput002_TriggerRepeatedHapticPulse,
    ISteamInput_SteamInput002_ShowBindingPanel,
    ISteamInput_SteamInput002_GetInputTypeForHandle,
    ISteamInput_SteamInput002_GetControllerForGamepadIndex,
    ISteamInput_SteamInput002_GetGamepadIndexForController,
    ISteamInput_SteamInput002_GetStringForXboxOrigin,
    ISteamInput_SteamInput002_GetGlyphForXboxOrigin,
    ISteamInput_SteamInput002_GetActionOriginFromXboxOrigin,
    ISteamInput_SteamInput002_TranslateActionOrigin,
    ISteamInput_SteamInput002_GetDeviceBindingRevision,
    ISteamInput_SteamInput002_GetRemotePlaySessionID,
    ISteamInput_SteamInput005_Init,
    ISteamInput_SteamInput005_Shutdown,
    ISteamInput_SteamInput005_SetInputActionManifestFilePath,
    ISteamInput_SteamInput005_RunFrame,
    ISteamInput_SteamInput005_BWaitForData,
    ISteamInput_SteamInput005_BNewDataAvailable,
    ISteamInput_SteamInput005_GetConnectedControllers,
    ISteamInput_SteamInput005_EnableDeviceCallbacks,
    ISteamInput_SteamInput005_EnableActionEventCallbacks,
    ISteamInput_SteamInput005_GetActionSetHandle,
    ISteamInput_SteamInput005_ActivateActionSet,
    ISteamInput_SteamInput005_GetCurrentActionSet,
    ISteamInput_SteamInput005_ActivateActionSetLayer,
    ISteamInput_SteamInput005_DeactivateActionSetLayer,
    ISteamInput_SteamInput005_DeactivateAllActionSetLayers,
    ISteamInput_SteamInput005_GetActiveActionSetLayers,
    ISteamInput_SteamInput005_GetDigitalActionHandle,
    ISteamInput_SteamInput005_GetDigitalActionData,
    ISteamInput_SteamInput005_GetDigitalActionOrigins,
    ISteamInput_SteamInput005_GetStringForDigitalActionName,
    ISteamInput_SteamInput005_GetAnalogActionHandle,
    ISteamInput_SteamInput005_GetAnalogActionData,
    ISteamInput_SteamInput005_GetAnalogActionOrigins,
    ISteamInput_SteamInput005_GetGlyphPNGForActionOrigin,
    ISteamInput_SteamInput005_GetGlyphSVGForActionOrigin,
    ISteamInput_SteamInput005_GetGlyphForActionOrigin_Legacy,
    ISteamInput_SteamInput005_GetStringForActionOrigin,
    ISteamInput_SteamInput005_GetStringForAnalogActionName,
    ISteamInput_SteamInput005_StopAnalogActionMomentum,
    ISteamInput_SteamInput005_GetMotionData,
    ISteamInput_SteamInput005_TriggerVibration,
    ISteamInput_SteamInput005_TriggerVibrationExtended,
    ISteamInput_SteamInput005_TriggerSimpleHapticEvent,
    ISteamInput_SteamInput005_SetLEDColor,
    ISteamInput_SteamInput005_Legacy_TriggerHapticPulse,
    ISteamInput_SteamInput005_Legacy_TriggerRepeatedHapticPulse,
    ISteamInput_SteamInput005_ShowBindingPanel,
    ISteamInput_SteamInput005_GetInputTypeForHandle,
    ISteamInput_SteamInput005_GetControllerForGamepadIndex,
    ISteamInput_SteamInput005_GetGamepadIndexForController,
    ISteamInput_SteamInput005_GetStringForXboxOrigin,
    ISteamInput_SteamInput005_GetGlyphForXboxOrigin,
    ISteamInput_SteamInput005_GetActionOriginFromXboxOrigin,
    ISteamInput_SteamInput005_TranslateActionOrigin,
    ISteamInput_SteamInput005_GetDeviceBindingRevision,
    ISteamInput_SteamInput005_GetRemotePlaySessionID,
    ISteamInput_SteamInput005_GetSessionInputConfigurationSettings,
    ISteamInput_SteamInput006_Init,
    ISteamInput_SteamInput006_Shutdown,
    ISteamInput_SteamInput006_SetInputActionManifestFilePath,
    ISteamInput_SteamInput006_RunFrame,
    ISteamInput_SteamInput006_BWaitForData,
    ISteamInput_SteamInput006_BNewDataAvailable,
    ISteamInput_SteamInput006_GetConnectedControllers,
    ISteamInput_SteamInput006_EnableDeviceCallbacks,
    ISteamInput_SteamInput006_EnableActionEventCallbacks,
    ISteamInput_SteamInput006_GetActionSetHandle,
    ISteamInput_SteamInput006_ActivateActionSet,
    ISteamInput_SteamInput006_GetCurrentActionSet,
    ISteamInput_SteamInput006_ActivateActionSetLayer,
    ISteamInput_SteamInput006_DeactivateActionSetLayer,
    ISteamInput_SteamInput006_DeactivateAllActionSetLayers,
    ISteamInput_SteamInput006_GetActiveActionSetLayers,
    ISteamInput_SteamInput006_GetDigitalActionHandle,
    ISteamInput_SteamInput006_GetDigitalActionData,
    ISteamInput_SteamInput006_GetDigitalActionOrigins,
    ISteamInput_SteamInput006_GetStringForDigitalActionName,
    ISteamInput_SteamInput006_GetAnalogActionHandle,
    ISteamInput_SteamInput006_GetAnalogActionData,
    ISteamInput_SteamInput006_GetAnalogActionOrigins,
    ISteamInput_SteamInput006_GetGlyphPNGForActionOrigin,
    ISteamInput_SteamInput006_GetGlyphSVGForActionOrigin,
    ISteamInput_SteamInput006_GetGlyphForActionOrigin_Legacy,
    ISteamInput_SteamInput006_GetStringForActionOrigin,
    ISteamInput_SteamInput006_GetStringForAnalogActionName,
    ISteamInput_SteamInput006_StopAnalogActionMomentum,
    ISteamInput_SteamInput006_GetMotionData,
    ISteamInput_SteamInput006_TriggerVibration,
    ISteamInput_SteamInput006_TriggerVibrationExtended,
    ISteamInput_SteamInput006_TriggerSimpleHapticEvent,
    ISteamInput_SteamInput006_SetLEDColor,
    ISteamInput_SteamInput006_Legacy_TriggerHapticPulse,
    ISteamInput_SteamInput006_Legacy_TriggerRepeatedHapticPulse,
    ISteamInput_SteamInput006_ShowBindingPanel,
    ISteamInput_SteamInput006_GetInputTypeForHandle,
    ISteamInput_SteamInput006_GetControllerForGamepadIndex,
    ISteamInput_SteamInput006_GetGamepadIndexForController,
    ISteamInput_SteamInput006_GetStringForXboxOrigin,
    ISteamInput_SteamInput006_GetGlyphForXboxOrigin,
    ISteamInput_SteamInput006_GetActionOriginFromXboxOrigin,
    ISteamInput_SteamInput006_TranslateActionOrigin,
    ISteamInput_SteamInput006_GetDeviceBindingRevision,
    ISteamInput_SteamInput006_GetRemotePlaySessionID,
    ISteamInput_SteamInput006_GetSessionInputConfigurationSettings,
    ISteamInput_SteamInput006_SetDualSenseTriggerEffect,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_SetActive,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_SetHeartbeatInterval,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_HandleIncomingPacket,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_GetNextOutgoingPacket,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_SetBasicServerData,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_ClearAllKeyValues,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_SetKeyValue,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_NotifyShutdown,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_WasRestartRequested,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_ForceHeartbeat,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_AddMasterServer,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_RemoveMasterServer,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_GetNumMasterServers,
    ISteamMasterServerUpdater_SteamMasterServerUpdater001_GetMasterServerAddress,
    ISteamGameSearch_SteamMatchGameSearch001_AddGameSearchParams,
    ISteamGameSearch_SteamMatchGameSearch001_SearchForGameWithLobby,
    ISteamGameSearch_SteamMatchGameSearch001_SearchForGameSolo,
    ISteamGameSearch_SteamMatchGameSearch001_AcceptGame,
    ISteamGameSearch_SteamMatchGameSearch001_DeclineGame,
    ISteamGameSearch_SteamMatchGameSearch001_RetrieveConnectionDetails,
    ISteamGameSearch_SteamMatchGameSearch001_EndGameSearch,
    ISteamGameSearch_SteamMatchGameSearch001_SetGameHostParams,
    ISteamGameSearch_SteamMatchGameSearch001_SetConnectionDetails,
    ISteamGameSearch_SteamMatchGameSearch001_RequestPlayersForGame,
    ISteamGameSearch_SteamMatchGameSearch001_HostConfirmGameStart,
    ISteamGameSearch_SteamMatchGameSearch001_CancelRequestPlayersForGame,
    ISteamGameSearch_SteamMatchGameSearch001_SubmitPlayerResult,
    ISteamGameSearch_SteamMatchGameSearch001_EndGame,
    ISteamMatchmaking_SteamMatchMaking001_GetFavoriteGameCount,
    ISteamMatchmaking_SteamMatchMaking001_GetFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking001_AddFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking001_RemoveFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking001_GetFavoriteGame2,
    ISteamMatchmaking_SteamMatchMaking001_AddFavoriteGame2,
    ISteamMatchmaking_SteamMatchMaking001_RemoveFavoriteGame2,
    ISteamMatchmaking_SteamMatchMaking001_RequestLobbyList,
    ISteamMatchmaking_SteamMatchMaking001_GetLobbyByIndex,
    ISteamMatchmaking_SteamMatchMaking001_CreateLobby,
    ISteamMatchmaking_SteamMatchMaking001_JoinLobby,
    ISteamMatchmaking_SteamMatchMaking001_LeaveLobby,
    ISteamMatchmaking_SteamMatchMaking001_InviteUserToLobby,
    ISteamMatchmaking_SteamMatchMaking001_GetNumLobbyMembers,
    ISteamMatchmaking_SteamMatchMaking001_GetLobbyMemberByIndex,
    ISteamMatchmaking_SteamMatchMaking001_GetLobbyData,
    ISteamMatchmaking_SteamMatchMaking001_SetLobbyData,
    ISteamMatchmaking_SteamMatchMaking001_GetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking001_SetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking001_SendLobbyChatMsg,
    ISteamMatchmaking_SteamMatchMaking001_GetLobbyChatEntry,
    ISteamMatchmaking_SteamMatchMaking001_RequestLobbyData,
    ISteamMatchmaking_SteamMatchMaking002_GetFavoriteGameCount,
    ISteamMatchmaking_SteamMatchMaking002_GetFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking002_AddFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking002_RemoveFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking002_RequestLobbyList,
    ISteamMatchmaking_SteamMatchMaking002_GetLobbyByIndex,
    ISteamMatchmaking_SteamMatchMaking002_CreateLobby,
    ISteamMatchmaking_SteamMatchMaking002_JoinLobby,
    ISteamMatchmaking_SteamMatchMaking002_LeaveLobby,
    ISteamMatchmaking_SteamMatchMaking002_InviteUserToLobby,
    ISteamMatchmaking_SteamMatchMaking002_GetNumLobbyMembers,
    ISteamMatchmaking_SteamMatchMaking002_GetLobbyMemberByIndex,
    ISteamMatchmaking_SteamMatchMaking002_GetLobbyData,
    ISteamMatchmaking_SteamMatchMaking002_SetLobbyData,
    ISteamMatchmaking_SteamMatchMaking002_GetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking002_SetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking002_SendLobbyChatMsg,
    ISteamMatchmaking_SteamMatchMaking002_GetLobbyChatEntry,
    ISteamMatchmaking_SteamMatchMaking002_RequestLobbyData,
    ISteamMatchmaking_SteamMatchMaking002_SetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking003_GetFavoriteGameCount,
    ISteamMatchmaking_SteamMatchMaking003_GetFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking003_AddFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking003_RemoveFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking003_RequestLobbyList,
    ISteamMatchmaking_SteamMatchMaking003_AddRequestLobbyListFilter,
    ISteamMatchmaking_SteamMatchMaking003_AddRequestLobbyListNumericalFilter,
    ISteamMatchmaking_SteamMatchMaking003_AddRequestLobbyListSlotsAvailableFilter,
    ISteamMatchmaking_SteamMatchMaking003_GetLobbyByIndex,
    ISteamMatchmaking_SteamMatchMaking003_CreateLobby,
    ISteamMatchmaking_SteamMatchMaking003_JoinLobby,
    ISteamMatchmaking_SteamMatchMaking003_LeaveLobby,
    ISteamMatchmaking_SteamMatchMaking003_InviteUserToLobby,
    ISteamMatchmaking_SteamMatchMaking003_GetNumLobbyMembers,
    ISteamMatchmaking_SteamMatchMaking003_GetLobbyMemberByIndex,
    ISteamMatchmaking_SteamMatchMaking003_GetLobbyData,
    ISteamMatchmaking_SteamMatchMaking003_SetLobbyData,
    ISteamMatchmaking_SteamMatchMaking003_GetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking003_SetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking003_SendLobbyChatMsg,
    ISteamMatchmaking_SteamMatchMaking003_GetLobbyChatEntry,
    ISteamMatchmaking_SteamMatchMaking003_RequestLobbyData,
    ISteamMatchmaking_SteamMatchMaking003_SetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking003_GetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking003_SetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking003_GetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking003_SetLobbyVoiceEnabled,
    ISteamMatchmaking_SteamMatchMaking003_RequestFriendsLobbies,
    ISteamMatchmaking_SteamMatchMaking004_GetFavoriteGameCount,
    ISteamMatchmaking_SteamMatchMaking004_GetFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking004_AddFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking004_RemoveFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking004_RequestLobbyList,
    ISteamMatchmaking_SteamMatchMaking004_AddRequestLobbyListFilter,
    ISteamMatchmaking_SteamMatchMaking004_AddRequestLobbyListNumericalFilter,
    ISteamMatchmaking_SteamMatchMaking004_AddRequestLobbyListSlotsAvailableFilter,
    ISteamMatchmaking_SteamMatchMaking004_GetLobbyByIndex,
    ISteamMatchmaking_SteamMatchMaking004_CreateLobby,
    ISteamMatchmaking_SteamMatchMaking004_JoinLobby,
    ISteamMatchmaking_SteamMatchMaking004_LeaveLobby,
    ISteamMatchmaking_SteamMatchMaking004_InviteUserToLobby,
    ISteamMatchmaking_SteamMatchMaking004_GetNumLobbyMembers,
    ISteamMatchmaking_SteamMatchMaking004_GetLobbyMemberByIndex,
    ISteamMatchmaking_SteamMatchMaking004_GetLobbyData,
    ISteamMatchmaking_SteamMatchMaking004_SetLobbyData,
    ISteamMatchmaking_SteamMatchMaking004_GetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking004_SetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking004_SendLobbyChatMsg,
    ISteamMatchmaking_SteamMatchMaking004_GetLobbyChatEntry,
    ISteamMatchmaking_SteamMatchMaking004_RequestLobbyData,
    ISteamMatchmaking_SteamMatchMaking004_SetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking004_GetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking004_SetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking004_GetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking004_RequestFriendsLobbies,
    ISteamMatchmaking_SteamMatchMaking005_GetFavoriteGameCount,
    ISteamMatchmaking_SteamMatchMaking005_GetFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking005_AddFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking005_RemoveFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking005_RequestLobbyList,
    ISteamMatchmaking_SteamMatchMaking005_AddRequestLobbyListFilter,
    ISteamMatchmaking_SteamMatchMaking005_AddRequestLobbyListNumericalFilter,
    ISteamMatchmaking_SteamMatchMaking005_AddRequestLobbyListSlotsAvailableFilter,
    ISteamMatchmaking_SteamMatchMaking005_AddRequestLobbyListNearValueFilter,
    ISteamMatchmaking_SteamMatchMaking005_GetLobbyByIndex,
    ISteamMatchmaking_SteamMatchMaking005_CreateLobby,
    ISteamMatchmaking_SteamMatchMaking005_JoinLobby,
    ISteamMatchmaking_SteamMatchMaking005_LeaveLobby,
    ISteamMatchmaking_SteamMatchMaking005_InviteUserToLobby,
    ISteamMatchmaking_SteamMatchMaking005_GetNumLobbyMembers,
    ISteamMatchmaking_SteamMatchMaking005_GetLobbyMemberByIndex,
    ISteamMatchmaking_SteamMatchMaking005_GetLobbyData,
    ISteamMatchmaking_SteamMatchMaking005_SetLobbyData,
    ISteamMatchmaking_SteamMatchMaking005_GetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking005_SetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking005_SendLobbyChatMsg,
    ISteamMatchmaking_SteamMatchMaking005_GetLobbyChatEntry,
    ISteamMatchmaking_SteamMatchMaking005_RequestLobbyData,
    ISteamMatchmaking_SteamMatchMaking005_SetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking005_GetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking005_SetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking005_GetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking005_RequestFriendsLobbies,
    ISteamMatchmaking_SteamMatchMaking005_SetLobbyType,
    ISteamMatchmaking_SteamMatchMaking005_GetLobbyOwner,
    ISteamMatchmaking_SteamMatchMaking005_GetLobbyDistance,
    ISteamMatchmaking_SteamMatchMaking006_GetFavoriteGameCount,
    ISteamMatchmaking_SteamMatchMaking006_GetFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking006_AddFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking006_RemoveFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking006_RequestLobbyList,
    ISteamMatchmaking_SteamMatchMaking006_AddRequestLobbyListFilter,
    ISteamMatchmaking_SteamMatchMaking006_AddRequestLobbyListNumericalFilter,
    ISteamMatchmaking_SteamMatchMaking006_AddRequestLobbyListNearValueFilter,
    ISteamMatchmaking_SteamMatchMaking006_GetLobbyByIndex,
    ISteamMatchmaking_SteamMatchMaking006_CreateLobby,
    ISteamMatchmaking_SteamMatchMaking006_JoinLobby,
    ISteamMatchmaking_SteamMatchMaking006_LeaveLobby,
    ISteamMatchmaking_SteamMatchMaking006_InviteUserToLobby,
    ISteamMatchmaking_SteamMatchMaking006_GetNumLobbyMembers,
    ISteamMatchmaking_SteamMatchMaking006_GetLobbyMemberByIndex,
    ISteamMatchmaking_SteamMatchMaking006_GetLobbyData,
    ISteamMatchmaking_SteamMatchMaking006_SetLobbyData,
    ISteamMatchmaking_SteamMatchMaking006_GetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking006_SetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking006_SendLobbyChatMsg,
    ISteamMatchmaking_SteamMatchMaking006_GetLobbyChatEntry,
    ISteamMatchmaking_SteamMatchMaking006_RequestLobbyData,
    ISteamMatchmaking_SteamMatchMaking006_SetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking006_GetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking006_SetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking006_GetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking006_SetLobbyType,
    ISteamMatchmaking_SteamMatchMaking006_GetLobbyOwner,
    ISteamMatchmaking_SteamMatchMaking007_GetFavoriteGameCount,
    ISteamMatchmaking_SteamMatchMaking007_GetFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking007_AddFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking007_RemoveFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking007_RequestLobbyList,
    ISteamMatchmaking_SteamMatchMaking007_AddRequestLobbyListStringFilter,
    ISteamMatchmaking_SteamMatchMaking007_AddRequestLobbyListNumericalFilter,
    ISteamMatchmaking_SteamMatchMaking007_AddRequestLobbyListNearValueFilter,
    ISteamMatchmaking_SteamMatchMaking007_AddRequestLobbyListFilterSlotsAvailable,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyByIndex,
    ISteamMatchmaking_SteamMatchMaking007_CreateLobby,
    ISteamMatchmaking_SteamMatchMaking007_JoinLobby,
    ISteamMatchmaking_SteamMatchMaking007_LeaveLobby,
    ISteamMatchmaking_SteamMatchMaking007_InviteUserToLobby,
    ISteamMatchmaking_SteamMatchMaking007_GetNumLobbyMembers,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyMemberByIndex,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyData,
    ISteamMatchmaking_SteamMatchMaking007_SetLobbyData,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyDataCount,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyDataByIndex,
    ISteamMatchmaking_SteamMatchMaking007_DeleteLobbyData,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking007_SetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking007_SendLobbyChatMsg,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyChatEntry,
    ISteamMatchmaking_SteamMatchMaking007_RequestLobbyData,
    ISteamMatchmaking_SteamMatchMaking007_SetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking007_SetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking007_SetLobbyType,
    ISteamMatchmaking_SteamMatchMaking007_SetLobbyJoinable,
    ISteamMatchmaking_SteamMatchMaking007_GetLobbyOwner,
    ISteamMatchmaking_SteamMatchMaking007_SetLobbyOwner,
    ISteamMatchmaking_SteamMatchMaking008_GetFavoriteGameCount,
    ISteamMatchmaking_SteamMatchMaking008_GetFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking008_AddFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking008_RemoveFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking008_RequestLobbyList,
    ISteamMatchmaking_SteamMatchMaking008_AddRequestLobbyListStringFilter,
    ISteamMatchmaking_SteamMatchMaking008_AddRequestLobbyListNumericalFilter,
    ISteamMatchmaking_SteamMatchMaking008_AddRequestLobbyListNearValueFilter,
    ISteamMatchmaking_SteamMatchMaking008_AddRequestLobbyListFilterSlotsAvailable,
    ISteamMatchmaking_SteamMatchMaking008_AddRequestLobbyListDistanceFilter,
    ISteamMatchmaking_SteamMatchMaking008_AddRequestLobbyListResultCountFilter,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyByIndex,
    ISteamMatchmaking_SteamMatchMaking008_CreateLobby,
    ISteamMatchmaking_SteamMatchMaking008_JoinLobby,
    ISteamMatchmaking_SteamMatchMaking008_LeaveLobby,
    ISteamMatchmaking_SteamMatchMaking008_InviteUserToLobby,
    ISteamMatchmaking_SteamMatchMaking008_GetNumLobbyMembers,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyMemberByIndex,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyData,
    ISteamMatchmaking_SteamMatchMaking008_SetLobbyData,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyDataCount,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyDataByIndex,
    ISteamMatchmaking_SteamMatchMaking008_DeleteLobbyData,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking008_SetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking008_SendLobbyChatMsg,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyChatEntry,
    ISteamMatchmaking_SteamMatchMaking008_RequestLobbyData,
    ISteamMatchmaking_SteamMatchMaking008_SetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking008_SetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking008_SetLobbyType,
    ISteamMatchmaking_SteamMatchMaking008_SetLobbyJoinable,
    ISteamMatchmaking_SteamMatchMaking008_GetLobbyOwner,
    ISteamMatchmaking_SteamMatchMaking008_SetLobbyOwner,
    ISteamMatchmaking_SteamMatchMaking009_GetFavoriteGameCount,
    ISteamMatchmaking_SteamMatchMaking009_GetFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking009_AddFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking009_RemoveFavoriteGame,
    ISteamMatchmaking_SteamMatchMaking009_RequestLobbyList,
    ISteamMatchmaking_SteamMatchMaking009_AddRequestLobbyListStringFilter,
    ISteamMatchmaking_SteamMatchMaking009_AddRequestLobbyListNumericalFilter,
    ISteamMatchmaking_SteamMatchMaking009_AddRequestLobbyListNearValueFilter,
    ISteamMatchmaking_SteamMatchMaking009_AddRequestLobbyListFilterSlotsAvailable,
    ISteamMatchmaking_SteamMatchMaking009_AddRequestLobbyListDistanceFilter,
    ISteamMatchmaking_SteamMatchMaking009_AddRequestLobbyListResultCountFilter,
    ISteamMatchmaking_SteamMatchMaking009_AddRequestLobbyListCompatibleMembersFilter,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyByIndex,
    ISteamMatchmaking_SteamMatchMaking009_CreateLobby,
    ISteamMatchmaking_SteamMatchMaking009_JoinLobby,
    ISteamMatchmaking_SteamMatchMaking009_LeaveLobby,
    ISteamMatchmaking_SteamMatchMaking009_InviteUserToLobby,
    ISteamMatchmaking_SteamMatchMaking009_GetNumLobbyMembers,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyMemberByIndex,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyData,
    ISteamMatchmaking_SteamMatchMaking009_SetLobbyData,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyDataCount,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyDataByIndex,
    ISteamMatchmaking_SteamMatchMaking009_DeleteLobbyData,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking009_SetLobbyMemberData,
    ISteamMatchmaking_SteamMatchMaking009_SendLobbyChatMsg,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyChatEntry,
    ISteamMatchmaking_SteamMatchMaking009_RequestLobbyData,
    ISteamMatchmaking_SteamMatchMaking009_SetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyGameServer,
    ISteamMatchmaking_SteamMatchMaking009_SetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyMemberLimit,
    ISteamMatchmaking_SteamMatchMaking009_SetLobbyType,
    ISteamMatchmaking_SteamMatchMaking009_SetLobbyJoinable,
    ISteamMatchmaking_SteamMatchMaking009_GetLobbyOwner,
    ISteamMatchmaking_SteamMatchMaking009_SetLobbyOwner,
    ISteamMatchmaking_SteamMatchMaking009_SetLinkedLobby,
    ISteamMatchmakingServers_SteamMatchMakingServers001_RequestInternetServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers001_RequestLANServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers001_RequestFriendsServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers001_RequestFavoritesServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers001_RequestHistoryServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers001_RequestSpectatorServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers001_GetServerDetails,
    ISteamMatchmakingServers_SteamMatchMakingServers001_CancelQuery,
    ISteamMatchmakingServers_SteamMatchMakingServers001_RefreshQuery,
    ISteamMatchmakingServers_SteamMatchMakingServers001_IsRefreshing,
    ISteamMatchmakingServers_SteamMatchMakingServers001_GetServerCount,
    ISteamMatchmakingServers_SteamMatchMakingServers001_RefreshServer,
    ISteamMatchmakingServers_SteamMatchMakingServers001_PingServer,
    ISteamMatchmakingServers_SteamMatchMakingServers001_PlayerDetails,
    ISteamMatchmakingServers_SteamMatchMakingServers001_ServerRules,
    ISteamMatchmakingServers_SteamMatchMakingServers001_CancelServerQuery,
    ISteamMatchmakingServers_SteamMatchMakingServers002_RequestInternetServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers002_RequestLANServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers002_RequestFriendsServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers002_RequestFavoritesServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers002_RequestHistoryServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers002_RequestSpectatorServerList,
    ISteamMatchmakingServers_SteamMatchMakingServers002_ReleaseRequest,
    ISteamMatchmakingServers_SteamMatchMakingServers002_GetServerDetails,
    ISteamMatchmakingServers_SteamMatchMakingServers002_CancelQuery,
    ISteamMatchmakingServers_SteamMatchMakingServers002_RefreshQuery,
    ISteamMatchmakingServers_SteamMatchMakingServers002_IsRefreshing,
    ISteamMatchmakingServers_SteamMatchMakingServers002_GetServerCount,
    ISteamMatchmakingServers_SteamMatchMakingServers002_RefreshServer,
    ISteamMatchmakingServers_SteamMatchMakingServers002_PingServer,
    ISteamMatchmakingServers_SteamMatchMakingServers002_PlayerDetails,
    ISteamMatchmakingServers_SteamMatchMakingServers002_ServerRules,
    ISteamMatchmakingServers_SteamMatchMakingServers002_CancelServerQuery,
    ISteamNetworking_SteamNetworking001_CreateListenSocket,
    ISteamNetworking_SteamNetworking001_CreateP2PConnectionSocket,
    ISteamNetworking_SteamNetworking001_CreateConnectionSocket,
    ISteamNetworking_SteamNetworking001_DestroySocket,
    ISteamNetworking_SteamNetworking001_DestroyListenSocket,
    ISteamNetworking_SteamNetworking001_SendDataOnSocket,
    ISteamNetworking_SteamNetworking001_IsDataAvailableOnSocket,
    ISteamNetworking_SteamNetworking001_RetrieveDataFromSocket,
    ISteamNetworking_SteamNetworking001_IsDataAvailable,
    ISteamNetworking_SteamNetworking001_RetrieveData,
    ISteamNetworking_SteamNetworking001_GetSocketInfo,
    ISteamNetworking_SteamNetworking001_GetListenSocketInfo,
    ISteamNetworking_SteamNetworking002_CreateListenSocket,
    ISteamNetworking_SteamNetworking002_CreateP2PConnectionSocket,
    ISteamNetworking_SteamNetworking002_CreateConnectionSocket,
    ISteamNetworking_SteamNetworking002_DestroySocket,
    ISteamNetworking_SteamNetworking002_DestroyListenSocket,
    ISteamNetworking_SteamNetworking002_SendDataOnSocket,
    ISteamNetworking_SteamNetworking002_IsDataAvailableOnSocket,
    ISteamNetworking_SteamNetworking002_RetrieveDataFromSocket,
    ISteamNetworking_SteamNetworking002_IsDataAvailable,
    ISteamNetworking_SteamNetworking002_RetrieveData,
    ISteamNetworking_SteamNetworking002_GetSocketInfo,
    ISteamNetworking_SteamNetworking002_GetListenSocketInfo,
    ISteamNetworking_SteamNetworking002_GetSocketConnectionType,
    ISteamNetworking_SteamNetworking002_GetMaxPacketSize,
    ISteamNetworking_SteamNetworking003_SendP2PPacket,
    ISteamNetworking_SteamNetworking003_IsP2PPacketAvailable,
    ISteamNetworking_SteamNetworking003_ReadP2PPacket,
    ISteamNetworking_SteamNetworking003_AcceptP2PSessionWithUser,
    ISteamNetworking_SteamNetworking003_CloseP2PSessionWithUser,
    ISteamNetworking_SteamNetworking003_GetP2PSessionState,
    ISteamNetworking_SteamNetworking003_CreateListenSocket,
    ISteamNetworking_SteamNetworking003_CreateP2PConnectionSocket,
    ISteamNetworking_SteamNetworking003_CreateConnectionSocket,
    ISteamNetworking_SteamNetworking003_DestroySocket,
    ISteamNetworking_SteamNetworking003_DestroyListenSocket,
    ISteamNetworking_SteamNetworking003_SendDataOnSocket,
    ISteamNetworking_SteamNetworking003_IsDataAvailableOnSocket,
    ISteamNetworking_SteamNetworking003_RetrieveDataFromSocket,
    ISteamNetworking_SteamNetworking003_IsDataAvailable,
    ISteamNetworking_SteamNetworking003_RetrieveData,
    ISteamNetworking_SteamNetworking003_GetSocketInfo,
    ISteamNetworking_SteamNetworking003_GetListenSocketInfo,
    ISteamNetworking_SteamNetworking003_GetSocketConnectionType,
    ISteamNetworking_SteamNetworking003_GetMaxPacketSize,
    ISteamNetworking_SteamNetworking004_SendP2PPacket,
    ISteamNetworking_SteamNetworking004_IsP2PPacketAvailable,
    ISteamNetworking_SteamNetworking004_ReadP2PPacket,
    ISteamNetworking_SteamNetworking004_AcceptP2PSessionWithUser,
    ISteamNetworking_SteamNetworking004_CloseP2PSessionWithUser,
    ISteamNetworking_SteamNetworking004_GetP2PSessionState,
    ISteamNetworking_SteamNetworking004_CreateListenSocket,
    ISteamNetworking_SteamNetworking004_CreateP2PConnectionSocket,
    ISteamNetworking_SteamNetworking004_CreateConnectionSocket,
    ISteamNetworking_SteamNetworking004_DestroySocket,
    ISteamNetworking_SteamNetworking004_DestroyListenSocket,
    ISteamNetworking_SteamNetworking004_SendDataOnSocket,
    ISteamNetworking_SteamNetworking004_IsDataAvailableOnSocket,
    ISteamNetworking_SteamNetworking004_RetrieveDataFromSocket,
    ISteamNetworking_SteamNetworking004_IsDataAvailable,
    ISteamNetworking_SteamNetworking004_RetrieveData,
    ISteamNetworking_SteamNetworking004_GetSocketInfo,
    ISteamNetworking_SteamNetworking004_GetListenSocketInfo,
    ISteamNetworking_SteamNetworking004_GetSocketConnectionType,
    ISteamNetworking_SteamNetworking004_GetMaxPacketSize,
    ISteamNetworking_SteamNetworking005_SendP2PPacket,
    ISteamNetworking_SteamNetworking005_IsP2PPacketAvailable,
    ISteamNetworking_SteamNetworking005_ReadP2PPacket,
    ISteamNetworking_SteamNetworking005_AcceptP2PSessionWithUser,
    ISteamNetworking_SteamNetworking005_CloseP2PSessionWithUser,
    ISteamNetworking_SteamNetworking005_CloseP2PChannelWithUser,
    ISteamNetworking_SteamNetworking005_GetP2PSessionState,
    ISteamNetworking_SteamNetworking005_AllowP2PPacketRelay,
    ISteamNetworking_SteamNetworking005_CreateListenSocket,
    ISteamNetworking_SteamNetworking005_CreateP2PConnectionSocket,
    ISteamNetworking_SteamNetworking005_CreateConnectionSocket,
    ISteamNetworking_SteamNetworking005_DestroySocket,
    ISteamNetworking_SteamNetworking005_DestroyListenSocket,
    ISteamNetworking_SteamNetworking005_SendDataOnSocket,
    ISteamNetworking_SteamNetworking005_IsDataAvailableOnSocket,
    ISteamNetworking_SteamNetworking005_RetrieveDataFromSocket,
    ISteamNetworking_SteamNetworking005_IsDataAvailable,
    ISteamNetworking_SteamNetworking005_RetrieveData,
    ISteamNetworking_SteamNetworking005_GetSocketInfo,
    ISteamNetworking_SteamNetworking005_GetListenSocketInfo,
    ISteamNetworking_SteamNetworking005_GetSocketConnectionType,
    ISteamNetworking_SteamNetworking005_GetMaxPacketSize,
    ISteamNetworking_SteamNetworking006_SendP2PPacket,
    ISteamNetworking_SteamNetworking006_IsP2PPacketAvailable,
    ISteamNetworking_SteamNetworking006_ReadP2PPacket,
    ISteamNetworking_SteamNetworking006_AcceptP2PSessionWithUser,
    ISteamNetworking_SteamNetworking006_CloseP2PSessionWithUser,
    ISteamNetworking_SteamNetworking006_CloseP2PChannelWithUser,
    ISteamNetworking_SteamNetworking006_GetP2PSessionState,
    ISteamNetworking_SteamNetworking006_AllowP2PPacketRelay,
    ISteamNetworking_SteamNetworking006_CreateListenSocket,
    ISteamNetworking_SteamNetworking006_CreateP2PConnectionSocket,
    ISteamNetworking_SteamNetworking006_CreateConnectionSocket,
    ISteamNetworking_SteamNetworking006_DestroySocket,
    ISteamNetworking_SteamNetworking006_DestroyListenSocket,
    ISteamNetworking_SteamNetworking006_SendDataOnSocket,
    ISteamNetworking_SteamNetworking006_IsDataAvailableOnSocket,
    ISteamNetworking_SteamNetworking006_RetrieveDataFromSocket,
    ISteamNetworking_SteamNetworking006_IsDataAvailable,
    ISteamNetworking_SteamNetworking006_RetrieveData,
    ISteamNetworking_SteamNetworking006_GetSocketInfo,
    ISteamNetworking_SteamNetworking006_GetListenSocketInfo,
    ISteamNetworking_SteamNetworking006_GetSocketConnectionType,
    ISteamNetworking_SteamNetworking006_GetMaxPacketSize,
    ISteamNetworkingFakeUDPPort_SteamNetworkingFakeUDPPort001_DestroyFakeUDPPort,
    ISteamNetworkingFakeUDPPort_SteamNetworkingFakeUDPPort001_SendMessageToFakeIP,
    ISteamNetworkingFakeUDPPort_SteamNetworkingFakeUDPPort001_ReceiveMessages,
    ISteamNetworkingFakeUDPPort_SteamNetworkingFakeUDPPort001_ScheduleCleanup,
    ISteamNetworkingMessages_SteamNetworkingMessages002_SendMessageToUser,
    ISteamNetworkingMessages_SteamNetworkingMessages002_ReceiveMessagesOnChannel,
    ISteamNetworkingMessages_SteamNetworkingMessages002_AcceptSessionWithUser,
    ISteamNetworkingMessages_SteamNetworkingMessages002_CloseSessionWithUser,
    ISteamNetworkingMessages_SteamNetworkingMessages002_CloseChannelWithUser,
    ISteamNetworkingMessages_SteamNetworkingMessages002_GetSessionConnectionInfo,
    ISteamNetworkingSockets_SteamNetworkingSockets002_CreateListenSocketIP,
    ISteamNetworkingSockets_SteamNetworkingSockets002_ConnectByIPAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets002_CreateListenSocketP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets002_ConnectP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets002_AcceptConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets002_CloseConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets002_CloseListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets002_SetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets002_SetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets002_SendMessageToConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets002_FlushMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets002_ReceiveMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets002_ReceiveMessagesOnListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetConnectionInfo,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetQuickConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetDetailedConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetListenSocketAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets002_CreateSocketPair,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetIdentity,
    ISteamNetworkingSockets_SteamNetworkingSockets002_ReceivedRelayAuthTicket,
    ISteamNetworkingSockets_SteamNetworkingSockets002_FindRelayAuthTicketForServer,
    ISteamNetworkingSockets_SteamNetworkingSockets002_ConnectToHostedDedicatedServer,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetHostedDedicatedServerPort,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetHostedDedicatedServerPOPID,
    ISteamNetworkingSockets_SteamNetworkingSockets002_GetHostedDedicatedServerAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets002_CreateHostedDedicatedServerListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets004_CreateListenSocketIP,
    ISteamNetworkingSockets_SteamNetworkingSockets004_ConnectByIPAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets004_CreateListenSocketP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets004_ConnectP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets004_AcceptConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets004_CloseConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets004_CloseListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets004_SetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets004_SetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets004_SendMessageToConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets004_FlushMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets004_ReceiveMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets004_ReceiveMessagesOnListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetConnectionInfo,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetQuickConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetDetailedConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetListenSocketAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets004_CreateSocketPair,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetIdentity,
    ISteamNetworkingSockets_SteamNetworkingSockets004_InitAuthentication,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetAuthenticationStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets004_ReceivedRelayAuthTicket,
    ISteamNetworkingSockets_SteamNetworkingSockets004_FindRelayAuthTicketForServer,
    ISteamNetworkingSockets_SteamNetworkingSockets004_ConnectToHostedDedicatedServer,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetHostedDedicatedServerPort,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetHostedDedicatedServerPOPID,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetHostedDedicatedServerAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets004_CreateHostedDedicatedServerListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets004_GetGameCoordinatorServerLogin,
    ISteamNetworkingSockets_SteamNetworkingSockets006_CreateListenSocketIP,
    ISteamNetworkingSockets_SteamNetworkingSockets006_ConnectByIPAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets006_CreateListenSocketP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets006_ConnectP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets006_AcceptConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets006_CloseConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets006_CloseListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets006_SetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets006_SetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets006_SendMessageToConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets006_SendMessages,
    ISteamNetworkingSockets_SteamNetworkingSockets006_FlushMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets006_ReceiveMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets006_ReceiveMessagesOnListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetConnectionInfo,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetQuickConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetDetailedConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetListenSocketAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets006_CreateSocketPair,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetIdentity,
    ISteamNetworkingSockets_SteamNetworkingSockets006_InitAuthentication,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetAuthenticationStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets006_ReceivedRelayAuthTicket,
    ISteamNetworkingSockets_SteamNetworkingSockets006_FindRelayAuthTicketForServer,
    ISteamNetworkingSockets_SteamNetworkingSockets006_ConnectToHostedDedicatedServer,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetHostedDedicatedServerPort,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetHostedDedicatedServerPOPID,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetHostedDedicatedServerAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets006_CreateHostedDedicatedServerListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets006_GetGameCoordinatorServerLogin,
    ISteamNetworkingSockets_SteamNetworkingSockets006_ConnectP2PCustomSignaling,
    ISteamNetworkingSockets_SteamNetworkingSockets006_ReceivedP2PCustomSignal,
    ISteamNetworkingSockets_SteamNetworkingSockets008_CreateListenSocketIP,
    ISteamNetworkingSockets_SteamNetworkingSockets008_ConnectByIPAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets008_CreateListenSocketP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets008_ConnectP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets008_AcceptConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets008_CloseConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets008_CloseListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets008_SetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets008_SetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets008_SendMessageToConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets008_SendMessages,
    ISteamNetworkingSockets_SteamNetworkingSockets008_FlushMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets008_ReceiveMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetConnectionInfo,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetQuickConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetDetailedConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetListenSocketAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets008_CreateSocketPair,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetIdentity,
    ISteamNetworkingSockets_SteamNetworkingSockets008_InitAuthentication,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetAuthenticationStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets008_CreatePollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets008_DestroyPollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets008_SetConnectionPollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets008_ReceiveMessagesOnPollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets008_ReceivedRelayAuthTicket,
    ISteamNetworkingSockets_SteamNetworkingSockets008_FindRelayAuthTicketForServer,
    ISteamNetworkingSockets_SteamNetworkingSockets008_ConnectToHostedDedicatedServer,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetHostedDedicatedServerPort,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetHostedDedicatedServerPOPID,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetHostedDedicatedServerAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets008_CreateHostedDedicatedServerListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetGameCoordinatorServerLogin,
    ISteamNetworkingSockets_SteamNetworkingSockets008_ConnectP2PCustomSignaling,
    ISteamNetworkingSockets_SteamNetworkingSockets008_ReceivedP2PCustomSignal,
    ISteamNetworkingSockets_SteamNetworkingSockets008_GetCertificateRequest,
    ISteamNetworkingSockets_SteamNetworkingSockets008_SetCertificate,
    ISteamNetworkingSockets_SteamNetworkingSockets009_CreateListenSocketIP,
    ISteamNetworkingSockets_SteamNetworkingSockets009_ConnectByIPAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets009_CreateListenSocketP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets009_ConnectP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets009_AcceptConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets009_CloseConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets009_CloseListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets009_SetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets009_SetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets009_SendMessageToConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets009_SendMessages,
    ISteamNetworkingSockets_SteamNetworkingSockets009_FlushMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets009_ReceiveMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetConnectionInfo,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetQuickConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetDetailedConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetListenSocketAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets009_CreateSocketPair,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetIdentity,
    ISteamNetworkingSockets_SteamNetworkingSockets009_InitAuthentication,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetAuthenticationStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets009_CreatePollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets009_DestroyPollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets009_SetConnectionPollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets009_ReceiveMessagesOnPollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets009_ReceivedRelayAuthTicket,
    ISteamNetworkingSockets_SteamNetworkingSockets009_FindRelayAuthTicketForServer,
    ISteamNetworkingSockets_SteamNetworkingSockets009_ConnectToHostedDedicatedServer,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetHostedDedicatedServerPort,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetHostedDedicatedServerPOPID,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetHostedDedicatedServerAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets009_CreateHostedDedicatedServerListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetGameCoordinatorServerLogin,
    ISteamNetworkingSockets_SteamNetworkingSockets009_ConnectP2PCustomSignaling,
    ISteamNetworkingSockets_SteamNetworkingSockets009_ReceivedP2PCustomSignal,
    ISteamNetworkingSockets_SteamNetworkingSockets009_GetCertificateRequest,
    ISteamNetworkingSockets_SteamNetworkingSockets009_SetCertificate,
    ISteamNetworkingSockets_SteamNetworkingSockets009_RunCallbacks,
    ISteamNetworkingSockets_SteamNetworkingSockets012_CreateListenSocketIP,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ConnectByIPAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets012_CreateListenSocketP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ConnectP2P,
    ISteamNetworkingSockets_SteamNetworkingSockets012_AcceptConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets012_CloseConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets012_CloseListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets012_SetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetConnectionUserData,
    ISteamNetworkingSockets_SteamNetworkingSockets012_SetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetConnectionName,
    ISteamNetworkingSockets_SteamNetworkingSockets012_SendMessageToConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets012_SendMessages,
    ISteamNetworkingSockets_SteamNetworkingSockets012_FlushMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ReceiveMessagesOnConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetConnectionInfo,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetConnectionRealTimeStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetDetailedConnectionStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetListenSocketAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets012_CreateSocketPair,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ConfigureConnectionLanes,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetIdentity,
    ISteamNetworkingSockets_SteamNetworkingSockets012_InitAuthentication,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetAuthenticationStatus,
    ISteamNetworkingSockets_SteamNetworkingSockets012_CreatePollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets012_DestroyPollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets012_SetConnectionPollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ReceiveMessagesOnPollGroup,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ReceivedRelayAuthTicket,
    ISteamNetworkingSockets_SteamNetworkingSockets012_FindRelayAuthTicketForServer,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ConnectToHostedDedicatedServer,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetHostedDedicatedServerPort,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetHostedDedicatedServerPOPID,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetHostedDedicatedServerAddress,
    ISteamNetworkingSockets_SteamNetworkingSockets012_CreateHostedDedicatedServerListenSocket,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetGameCoordinatorServerLogin,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ConnectP2PCustomSignaling,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ReceivedP2PCustomSignal,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetCertificateRequest,
    ISteamNetworkingSockets_SteamNetworkingSockets012_SetCertificate,
    ISteamNetworkingSockets_SteamNetworkingSockets012_ResetIdentity,
    ISteamNetworkingSockets_SteamNetworkingSockets012_RunCallbacks,
    ISteamNetworkingSockets_SteamNetworkingSockets012_BeginAsyncRequestFakeIP,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetFakeIP,
    ISteamNetworkingSockets_SteamNetworkingSockets012_CreateListenSocketP2PFakeIP,
    ISteamNetworkingSockets_SteamNetworkingSockets012_GetRemoteFakeIPForConnection,
    ISteamNetworkingSockets_SteamNetworkingSockets012_CreateFakeUDPPort,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized002_SendP2PRendezvous,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized002_SendP2PConnectionFailure,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized002_GetCertAsync,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized002_GetNetworkConfigJSON,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized002_CacheRelayTicket,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized002_GetCachedRelayTicketCount,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized002_GetCachedRelayTicket,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized002_PostConnectionStateMsg,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized003_SendP2PRendezvous,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized003_SendP2PConnectionFailure,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized003_GetCertAsync,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized003_GetNetworkConfigJSON,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized003_CacheRelayTicket,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized003_GetCachedRelayTicketCount,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized003_GetCachedRelayTicket,
    ISteamNetworkingSocketsSerialized_SteamNetworkingSocketsSerialized003_PostConnectionStateMsg,
    ISteamNetworkingUtils_SteamNetworkingUtils001_GetLocalPingLocation,
    ISteamNetworkingUtils_SteamNetworkingUtils001_EstimatePingTimeBetweenTwoLocations,
    ISteamNetworkingUtils_SteamNetworkingUtils001_EstimatePingTimeFromLocalHost,
    ISteamNetworkingUtils_SteamNetworkingUtils001_ConvertPingLocationToString,
    ISteamNetworkingUtils_SteamNetworkingUtils001_ParsePingLocationString,
    ISteamNetworkingUtils_SteamNetworkingUtils001_CheckPingDataUpToDate,
    ISteamNetworkingUtils_SteamNetworkingUtils001_IsPingMeasurementInProgress,
    ISteamNetworkingUtils_SteamNetworkingUtils001_GetPingToDataCenter,
    ISteamNetworkingUtils_SteamNetworkingUtils001_GetDirectPingToPOP,
    ISteamNetworkingUtils_SteamNetworkingUtils001_GetPOPCount,
    ISteamNetworkingUtils_SteamNetworkingUtils001_GetPOPList,
    ISteamNetworkingUtils_SteamNetworkingUtils001_GetLocalTimestamp,
    ISteamNetworkingUtils_SteamNetworkingUtils001_SetDebugOutputFunction,
    ISteamNetworkingUtils_SteamNetworkingUtils001_SetConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils001_GetConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils001_GetConfigValueInfo,
    ISteamNetworkingUtils_SteamNetworkingUtils001_GetFirstConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils001_SteamNetworkingIPAddr_ToString,
    ISteamNetworkingUtils_SteamNetworkingUtils001_SteamNetworkingIPAddr_ParseString,
    ISteamNetworkingUtils_SteamNetworkingUtils001_SteamNetworkingIdentity_ToString,
    ISteamNetworkingUtils_SteamNetworkingUtils001_SteamNetworkingIdentity_ParseString,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetRelayNetworkStatus,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetLocalPingLocation,
    ISteamNetworkingUtils_SteamNetworkingUtils002_EstimatePingTimeBetweenTwoLocations,
    ISteamNetworkingUtils_SteamNetworkingUtils002_EstimatePingTimeFromLocalHost,
    ISteamNetworkingUtils_SteamNetworkingUtils002_ConvertPingLocationToString,
    ISteamNetworkingUtils_SteamNetworkingUtils002_ParsePingLocationString,
    ISteamNetworkingUtils_SteamNetworkingUtils002_CheckPingDataUpToDate,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetPingToDataCenter,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetDirectPingToPOP,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetPOPCount,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetPOPList,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetLocalTimestamp,
    ISteamNetworkingUtils_SteamNetworkingUtils002_SetDebugOutputFunction,
    ISteamNetworkingUtils_SteamNetworkingUtils002_SetConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetConfigValueInfo,
    ISteamNetworkingUtils_SteamNetworkingUtils002_GetFirstConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils002_SteamNetworkingIPAddr_ToString,
    ISteamNetworkingUtils_SteamNetworkingUtils002_SteamNetworkingIPAddr_ParseString,
    ISteamNetworkingUtils_SteamNetworkingUtils002_SteamNetworkingIdentity_ToString,
    ISteamNetworkingUtils_SteamNetworkingUtils002_SteamNetworkingIdentity_ParseString,
    ISteamNetworkingUtils_SteamNetworkingUtils003_AllocateMessage,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetRelayNetworkStatus,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetLocalPingLocation,
    ISteamNetworkingUtils_SteamNetworkingUtils003_EstimatePingTimeBetweenTwoLocations,
    ISteamNetworkingUtils_SteamNetworkingUtils003_EstimatePingTimeFromLocalHost,
    ISteamNetworkingUtils_SteamNetworkingUtils003_ConvertPingLocationToString,
    ISteamNetworkingUtils_SteamNetworkingUtils003_ParsePingLocationString,
    ISteamNetworkingUtils_SteamNetworkingUtils003_CheckPingDataUpToDate,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetPingToDataCenter,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetDirectPingToPOP,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetPOPCount,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetPOPList,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetLocalTimestamp,
    ISteamNetworkingUtils_SteamNetworkingUtils003_SetDebugOutputFunction,
    ISteamNetworkingUtils_SteamNetworkingUtils003_SetConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetConfigValueInfo,
    ISteamNetworkingUtils_SteamNetworkingUtils003_GetFirstConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils003_SteamNetworkingIPAddr_ToString,
    ISteamNetworkingUtils_SteamNetworkingUtils003_SteamNetworkingIPAddr_ParseString,
    ISteamNetworkingUtils_SteamNetworkingUtils003_SteamNetworkingIdentity_ToString,
    ISteamNetworkingUtils_SteamNetworkingUtils003_SteamNetworkingIdentity_ParseString,
    ISteamNetworkingUtils_SteamNetworkingUtils004_AllocateMessage,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetRelayNetworkStatus,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetLocalPingLocation,
    ISteamNetworkingUtils_SteamNetworkingUtils004_EstimatePingTimeBetweenTwoLocations,
    ISteamNetworkingUtils_SteamNetworkingUtils004_EstimatePingTimeFromLocalHost,
    ISteamNetworkingUtils_SteamNetworkingUtils004_ConvertPingLocationToString,
    ISteamNetworkingUtils_SteamNetworkingUtils004_ParsePingLocationString,
    ISteamNetworkingUtils_SteamNetworkingUtils004_CheckPingDataUpToDate,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetPingToDataCenter,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetDirectPingToPOP,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetPOPCount,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetPOPList,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetLocalTimestamp,
    ISteamNetworkingUtils_SteamNetworkingUtils004_SetDebugOutputFunction,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetIPv4FakeIPType,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetRealIdentityForFakeIP,
    ISteamNetworkingUtils_SteamNetworkingUtils004_SetConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetConfigValue,
    ISteamNetworkingUtils_SteamNetworkingUtils004_GetConfigValueInfo,
    ISteamNetworkingUtils_SteamNetworkingUtils004_IterateGenericEditableConfigValues,
    ISteamNetworkingUtils_SteamNetworkingUtils004_SteamNetworkingIPAddr_ToString,
    ISteamNetworkingUtils_SteamNetworkingUtils004_SteamNetworkingIPAddr_ParseString,
    ISteamNetworkingUtils_SteamNetworkingUtils004_SteamNetworkingIPAddr_GetFakeIPType,
    ISteamNetworkingUtils_SteamNetworkingUtils004_SteamNetworkingIdentity_ToString,
    ISteamNetworkingUtils_SteamNetworkingUtils004_SteamNetworkingIdentity_ParseString,
    ISteamParties_SteamParties002_GetNumActiveBeacons,
    ISteamParties_SteamParties002_GetBeaconByIndex,
    ISteamParties_SteamParties002_GetBeaconDetails,
    ISteamParties_SteamParties002_JoinParty,
    ISteamParties_SteamParties002_GetNumAvailableBeaconLocations,
    ISteamParties_SteamParties002_GetAvailableBeaconLocations,
    ISteamParties_SteamParties002_CreateBeacon,
    ISteamParties_SteamParties002_OnReservationCompleted,
    ISteamParties_SteamParties002_CancelReservation,
    ISteamParties_SteamParties002_ChangeNumOpenSlots,
    ISteamParties_SteamParties002_DestroyBeacon,
    ISteamParties_SteamParties002_GetBeaconLocationData,
    ISteamUser_SteamUser004_GetHSteamUser,
    ISteamUser_SteamUser004_LogOn,
    ISteamUser_SteamUser004_LogOff,
    ISteamUser_SteamUser004_BLoggedOn,
    ISteamUser_SteamUser004_GetLogonState,
    ISteamUser_SteamUser004_BConnected,
    ISteamUser_SteamUser004_GetSteamID,
    ISteamUser_SteamUser004_IsVACBanned,
    ISteamUser_SteamUser004_RequireShowVACBannedMessage,
    ISteamUser_SteamUser004_AcknowledgeVACBanning,
    ISteamUser_SteamUser004_NClientGameIDAdd,
    ISteamUser_SteamUser004_RemoveClientGame,
    ISteamUser_SteamUser004_SetClientGameServer,
    ISteamUser_SteamUser004_SetSteam2Ticket,
    ISteamUser_SteamUser004_AddServerNetAddress,
    ISteamUser_SteamUser004_SetEmail,
    ISteamUser_SteamUser004_GetSteamGameConnectToken,
    ISteamUser_SteamUser004_SetRegistryString,
    ISteamUser_SteamUser004_GetRegistryString,
    ISteamUser_SteamUser004_SetRegistryInt,
    ISteamUser_SteamUser004_GetRegistryInt,
    ISteamUser_SteamUser004_InitiateGameConnection,
    ISteamUser_SteamUser004_TerminateGameConnection,
    ISteamUser_SteamUser004_SetSelfAsPrimaryChatDestination,
    ISteamUser_SteamUser004_IsPrimaryChatDestination,
    ISteamUser_SteamUser004_RequestLegacyCDKey,
    ISteamUser_SteamUser005_GetHSteamUser,
    ISteamUser_SteamUser005_LogOn,
    ISteamUser_SteamUser005_LogOff,
    ISteamUser_SteamUser005_BLoggedOn,
    ISteamUser_SteamUser005_GetLogonState,
    ISteamUser_SteamUser005_BConnected,
    ISteamUser_SteamUser005_GetSteamID,
    ISteamUser_SteamUser005_IsVACBanned,
    ISteamUser_SteamUser005_RequireShowVACBannedMessage,
    ISteamUser_SteamUser005_AcknowledgeVACBanning,
    ISteamUser_SteamUser005_SetSteam2Ticket,
    ISteamUser_SteamUser005_AddServerNetAddress,
    ISteamUser_SteamUser005_SetEmail,
    ISteamUser_SteamUser005_SetRegistryString,
    ISteamUser_SteamUser005_GetRegistryString,
    ISteamUser_SteamUser005_SetRegistryInt,
    ISteamUser_SteamUser005_GetRegistryInt,
    ISteamUser_SteamUser005_InitiateGameConnection,
    ISteamUser_SteamUser005_TerminateGameConnection,
    ISteamUser_SteamUser005_SetSelfAsPrimaryChatDestination,
    ISteamUser_SteamUser005_IsPrimaryChatDestination,
    ISteamUser_SteamUser005_RequestLegacyCDKey,
    ISteamUser_SteamUser005_SendGuestPassByEmail,
    ISteamUser_SteamUser005_SendGuestPassByAccountID,
    ISteamUser_SteamUser005_AckGuestPass,
    ISteamUser_SteamUser005_RedeemGuestPass,
    ISteamUser_SteamUser005_GetGuestPassToGiveCount,
    ISteamUser_SteamUser005_GetGuestPassToRedeemCount,
    ISteamUser_SteamUser005_GetGuestPassLastUpdateTime,
    ISteamUser_SteamUser005_GetGuestPassToGiveInfo,
    ISteamUser_SteamUser005_GetGuestPassToRedeemInfo,
    ISteamUser_SteamUser005_GetGuestPassToRedeemSenderAddress,
    ISteamUser_SteamUser005_GetGuestPassToRedeemSenderName,
    ISteamUser_SteamUser005_AcknowledgeMessageByGID,
    ISteamUser_SteamUser005_SetLanguage,
    ISteamUser_SteamUser005_TrackAppUsageEvent,
    ISteamUser_SteamUser005_SetAccountName,
    ISteamUser_SteamUser005_SetPassword,
    ISteamUser_SteamUser005_SetAccountCreationTime,
    ISteamUser_SteamUser006_GetHSteamUser,
    ISteamUser_SteamUser006_LogOn,
    ISteamUser_SteamUser006_LogOff,
    ISteamUser_SteamUser006_BLoggedOn,
    ISteamUser_SteamUser006_GetSteamID,
    ISteamUser_SteamUser006_SetRegistryString,
    ISteamUser_SteamUser006_GetRegistryString,
    ISteamUser_SteamUser006_SetRegistryInt,
    ISteamUser_SteamUser006_GetRegistryInt,
    ISteamUser_SteamUser006_InitiateGameConnection,
    ISteamUser_SteamUser006_TerminateGameConnection,
    ISteamUser_SteamUser006_TrackAppUsageEvent,
    ISteamUser_SteamUser007_GetHSteamUser,
    ISteamUser_SteamUser007_LogOn,
    ISteamUser_SteamUser007_LogOff,
    ISteamUser_SteamUser007_BLoggedOn,
    ISteamUser_SteamUser007_GetSteamID,
    ISteamUser_SteamUser007_SetRegistryString,
    ISteamUser_SteamUser007_GetRegistryString,
    ISteamUser_SteamUser007_SetRegistryInt,
    ISteamUser_SteamUser007_GetRegistryInt,
    ISteamUser_SteamUser007_InitiateGameConnection,
    ISteamUser_SteamUser007_TerminateGameConnection,
    ISteamUser_SteamUser007_TrackAppUsageEvent,
    ISteamUser_SteamUser007_RefreshSteam2Login,
    ISteamUser_SteamUser008_GetHSteamUser,
    ISteamUser_SteamUser008_BLoggedOn,
    ISteamUser_SteamUser008_GetSteamID,
    ISteamUser_SteamUser008_InitiateGameConnection,
    ISteamUser_SteamUser008_TerminateGameConnection,
    ISteamUser_SteamUser008_TrackAppUsageEvent,
    ISteamUser_SteamUser008_RefreshSteam2Login,
    ISteamUser_SteamUser009_GetHSteamUser,
    ISteamUser_SteamUser009_BLoggedOn,
    ISteamUser_SteamUser009_GetSteamID,
    ISteamUser_SteamUser009_InitiateGameConnection,
    ISteamUser_SteamUser009_TerminateGameConnection,
    ISteamUser_SteamUser009_TrackAppUsageEvent,
    ISteamUser_SteamUser009_RefreshSteam2Login,
    ISteamUser_SteamUser010_GetHSteamUser,
    ISteamUser_SteamUser010_BLoggedOn,
    ISteamUser_SteamUser010_GetSteamID,
    ISteamUser_SteamUser010_InitiateGameConnection,
    ISteamUser_SteamUser010_TerminateGameConnection,
    ISteamUser_SteamUser010_TrackAppUsageEvent,
    ISteamUser_SteamUser011_GetHSteamUser,
    ISteamUser_SteamUser011_BLoggedOn,
    ISteamUser_SteamUser011_GetSteamID,
    ISteamUser_SteamUser011_InitiateGameConnection,
    ISteamUser_SteamUser011_TerminateGameConnection,
    ISteamUser_SteamUser011_TrackAppUsageEvent,
    ISteamUser_SteamUser011_GetUserDataFolder,
    ISteamUser_SteamUser011_StartVoiceRecording,
    ISteamUser_SteamUser011_StopVoiceRecording,
    ISteamUser_SteamUser011_GetCompressedVoice,
    ISteamUser_SteamUser011_DecompressVoice,
    ISteamUser_SteamUser012_GetHSteamUser,
    ISteamUser_SteamUser012_BLoggedOn,
    ISteamUser_SteamUser012_GetSteamID,
    ISteamUser_SteamUser012_InitiateGameConnection,
    ISteamUser_SteamUser012_TerminateGameConnection,
    ISteamUser_SteamUser012_TrackAppUsageEvent,
    ISteamUser_SteamUser012_GetUserDataFolder,
    ISteamUser_SteamUser012_StartVoiceRecording,
    ISteamUser_SteamUser012_StopVoiceRecording,
    ISteamUser_SteamUser012_GetCompressedVoice,
    ISteamUser_SteamUser012_DecompressVoice,
    ISteamUser_SteamUser012_GetAuthSessionTicket,
    ISteamUser_SteamUser012_BeginAuthSession,
    ISteamUser_SteamUser012_EndAuthSession,
    ISteamUser_SteamUser012_CancelAuthTicket,
    ISteamUser_SteamUser012_UserHasLicenseForApp,
    ISteamUser_SteamUser013_GetHSteamUser,
    ISteamUser_SteamUser013_BLoggedOn,
    ISteamUser_SteamUser013_GetSteamID,
    ISteamUser_SteamUser013_InitiateGameConnection,
    ISteamUser_SteamUser013_TerminateGameConnection,
    ISteamUser_SteamUser013_TrackAppUsageEvent,
    ISteamUser_SteamUser013_GetUserDataFolder,
    ISteamUser_SteamUser013_StartVoiceRecording,
    ISteamUser_SteamUser013_StopVoiceRecording,
    ISteamUser_SteamUser013_GetAvailableVoice,
    ISteamUser_SteamUser013_GetVoice,
    ISteamUser_SteamUser013_DecompressVoice,
    ISteamUser_SteamUser013_GetAuthSessionTicket,
    ISteamUser_SteamUser013_BeginAuthSession,
    ISteamUser_SteamUser013_EndAuthSession,
    ISteamUser_SteamUser013_CancelAuthTicket,
    ISteamUser_SteamUser013_UserHasLicenseForApp,
    ISteamUser_SteamUser014_GetHSteamUser,
    ISteamUser_SteamUser014_BLoggedOn,
    ISteamUser_SteamUser014_GetSteamID,
    ISteamUser_SteamUser014_InitiateGameConnection,
    ISteamUser_SteamUser014_TerminateGameConnection,
    ISteamUser_SteamUser014_TrackAppUsageEvent,
    ISteamUser_SteamUser014_GetUserDataFolder,
    ISteamUser_SteamUser014_StartVoiceRecording,
    ISteamUser_SteamUser014_StopVoiceRecording,
    ISteamUser_SteamUser014_GetAvailableVoice,
    ISteamUser_SteamUser014_GetVoice,
    ISteamUser_SteamUser014_DecompressVoice,
    ISteamUser_SteamUser014_GetAuthSessionTicket,
    ISteamUser_SteamUser014_BeginAuthSession,
    ISteamUser_SteamUser014_EndAuthSession,
    ISteamUser_SteamUser014_CancelAuthTicket,
    ISteamUser_SteamUser014_UserHasLicenseForApp,
    ISteamUser_SteamUser014_BIsBehindNAT,
    ISteamUser_SteamUser014_AdvertiseGame,
    ISteamUser_SteamUser014_RequestEncryptedAppTicket,
    ISteamUser_SteamUser014_GetEncryptedAppTicket,
    ISteamUser_SteamUser015_GetHSteamUser,
    ISteamUser_SteamUser015_BLoggedOn,
    ISteamUser_SteamUser015_GetSteamID,
    ISteamUser_SteamUser015_InitiateGameConnection,
    ISteamUser_SteamUser015_TerminateGameConnection,
    ISteamUser_SteamUser015_TrackAppUsageEvent,
    ISteamUser_SteamUser015_GetUserDataFolder,
    ISteamUser_SteamUser015_StartVoiceRecording,
    ISteamUser_SteamUser015_StopVoiceRecording,
    ISteamUser_SteamUser015_GetAvailableVoice,
    ISteamUser_SteamUser015_GetVoice,
    ISteamUser_SteamUser015_DecompressVoice,
    ISteamUser_SteamUser015_GetVoiceOptimalSampleRate,
    ISteamUser_SteamUser015_GetAuthSessionTicket,
    ISteamUser_SteamUser015_BeginAuthSession,
    ISteamUser_SteamUser015_EndAuthSession,
    ISteamUser_SteamUser015_CancelAuthTicket,
    ISteamUser_SteamUser015_UserHasLicenseForApp,
    ISteamUser_SteamUser015_BIsBehindNAT,
    ISteamUser_SteamUser015_AdvertiseGame,
    ISteamUser_SteamUser015_RequestEncryptedAppTicket,
    ISteamUser_SteamUser015_GetEncryptedAppTicket,
    ISteamUser_SteamUser016_GetHSteamUser,
    ISteamUser_SteamUser016_BLoggedOn,
    ISteamUser_SteamUser016_GetSteamID,
    ISteamUser_SteamUser016_InitiateGameConnection,
    ISteamUser_SteamUser016_TerminateGameConnection,
    ISteamUser_SteamUser016_TrackAppUsageEvent,
    ISteamUser_SteamUser016_GetUserDataFolder,
    ISteamUser_SteamUser016_StartVoiceRecording,
    ISteamUser_SteamUser016_StopVoiceRecording,
    ISteamUser_SteamUser016_GetAvailableVoice,
    ISteamUser_SteamUser016_GetVoice,
    ISteamUser_SteamUser016_DecompressVoice,
    ISteamUser_SteamUser016_GetVoiceOptimalSampleRate,
    ISteamUser_SteamUser016_GetAuthSessionTicket,
    ISteamUser_SteamUser016_BeginAuthSession,
    ISteamUser_SteamUser016_EndAuthSession,
    ISteamUser_SteamUser016_CancelAuthTicket,
    ISteamUser_SteamUser016_UserHasLicenseForApp,
    ISteamUser_SteamUser016_BIsBehindNAT,
    ISteamUser_SteamUser016_AdvertiseGame,
    ISteamUser_SteamUser016_RequestEncryptedAppTicket,
    ISteamUser_SteamUser016_GetEncryptedAppTicket,
    ISteamUser_SteamUser017_GetHSteamUser,
    ISteamUser_SteamUser017_BLoggedOn,
    ISteamUser_SteamUser017_GetSteamID,
    ISteamUser_SteamUser017_InitiateGameConnection,
    ISteamUser_SteamUser017_TerminateGameConnection,
    ISteamUser_SteamUser017_TrackAppUsageEvent,
    ISteamUser_SteamUser017_GetUserDataFolder,
    ISteamUser_SteamUser017_StartVoiceRecording,
    ISteamUser_SteamUser017_StopVoiceRecording,
    ISteamUser_SteamUser017_GetAvailableVoice,
    ISteamUser_SteamUser017_GetVoice,
    ISteamUser_SteamUser017_DecompressVoice,
    ISteamUser_SteamUser017_GetVoiceOptimalSampleRate,
    ISteamUser_SteamUser017_GetAuthSessionTicket,
    ISteamUser_SteamUser017_BeginAuthSession,
    ISteamUser_SteamUser017_EndAuthSession,
    ISteamUser_SteamUser017_CancelAuthTicket,
    ISteamUser_SteamUser017_UserHasLicenseForApp,
    ISteamUser_SteamUser017_BIsBehindNAT,
    ISteamUser_SteamUser017_AdvertiseGame,
    ISteamUser_SteamUser017_RequestEncryptedAppTicket,
    ISteamUser_SteamUser017_GetEncryptedAppTicket,
    ISteamUser_SteamUser017_GetGameBadgeLevel,
    ISteamUser_SteamUser017_GetPlayerSteamLevel,
    ISteamUser_SteamUser018_GetHSteamUser,
    ISteamUser_SteamUser018_BLoggedOn,
    ISteamUser_SteamUser018_GetSteamID,
    ISteamUser_SteamUser018_InitiateGameConnection,
    ISteamUser_SteamUser018_TerminateGameConnection,
    ISteamUser_SteamUser018_TrackAppUsageEvent,
    ISteamUser_SteamUser018_GetUserDataFolder,
    ISteamUser_SteamUser018_StartVoiceRecording,
    ISteamUser_SteamUser018_StopVoiceRecording,
    ISteamUser_SteamUser018_GetAvailableVoice,
    ISteamUser_SteamUser018_GetVoice,
    ISteamUser_SteamUser018_DecompressVoice,
    ISteamUser_SteamUser018_GetVoiceOptimalSampleRate,
    ISteamUser_SteamUser018_GetAuthSessionTicket,
    ISteamUser_SteamUser018_BeginAuthSession,
    ISteamUser_SteamUser018_EndAuthSession,
    ISteamUser_SteamUser018_CancelAuthTicket,
    ISteamUser_SteamUser018_UserHasLicenseForApp,
    ISteamUser_SteamUser018_BIsBehindNAT,
    ISteamUser_SteamUser018_AdvertiseGame,
    ISteamUser_SteamUser018_RequestEncryptedAppTicket,
    ISteamUser_SteamUser018_GetEncryptedAppTicket,
    ISteamUser_SteamUser018_GetGameBadgeLevel,
    ISteamUser_SteamUser018_GetPlayerSteamLevel,
    ISteamUser_SteamUser018_RequestStoreAuthURL,
    ISteamUser_SteamUser019_GetHSteamUser,
    ISteamUser_SteamUser019_BLoggedOn,
    ISteamUser_SteamUser019_GetSteamID,
    ISteamUser_SteamUser019_InitiateGameConnection,
    ISteamUser_SteamUser019_TerminateGameConnection,
    ISteamUser_SteamUser019_TrackAppUsageEvent,
    ISteamUser_SteamUser019_GetUserDataFolder,
    ISteamUser_SteamUser019_StartVoiceRecording,
    ISteamUser_SteamUser019_StopVoiceRecording,
    ISteamUser_SteamUser019_GetAvailableVoice,
    ISteamUser_SteamUser019_GetVoice,
    ISteamUser_SteamUser019_DecompressVoice,
    ISteamUser_SteamUser019_GetVoiceOptimalSampleRate,
    ISteamUser_SteamUser019_GetAuthSessionTicket,
    ISteamUser_SteamUser019_BeginAuthSession,
    ISteamUser_SteamUser019_EndAuthSession,
    ISteamUser_SteamUser019_CancelAuthTicket,
    ISteamUser_SteamUser019_UserHasLicenseForApp,
    ISteamUser_SteamUser019_BIsBehindNAT,
    ISteamUser_SteamUser019_AdvertiseGame,
    ISteamUser_SteamUser019_RequestEncryptedAppTicket,
    ISteamUser_SteamUser019_GetEncryptedAppTicket,
    ISteamUser_SteamUser019_GetGameBadgeLevel,
    ISteamUser_SteamUser019_GetPlayerSteamLevel,
    ISteamUser_SteamUser019_RequestStoreAuthURL,
    ISteamUser_SteamUser019_BIsPhoneVerified,
    ISteamUser_SteamUser019_BIsTwoFactorEnabled,
    ISteamUser_SteamUser019_BIsPhoneIdentifying,
    ISteamUser_SteamUser019_BIsPhoneRequiringVerification,
    ISteamUser_SteamUser020_GetHSteamUser,
    ISteamUser_SteamUser020_BLoggedOn,
    ISteamUser_SteamUser020_GetSteamID,
    ISteamUser_SteamUser020_InitiateGameConnection,
    ISteamUser_SteamUser020_TerminateGameConnection,
    ISteamUser_SteamUser020_TrackAppUsageEvent,
    ISteamUser_SteamUser020_GetUserDataFolder,
    ISteamUser_SteamUser020_StartVoiceRecording,
    ISteamUser_SteamUser020_StopVoiceRecording,
    ISteamUser_SteamUser020_GetAvailableVoice,
    ISteamUser_SteamUser020_GetVoice,
    ISteamUser_SteamUser020_DecompressVoice,
    ISteamUser_SteamUser020_GetVoiceOptimalSampleRate,
    ISteamUser_SteamUser020_GetAuthSessionTicket,
    ISteamUser_SteamUser020_BeginAuthSession,
    ISteamUser_SteamUser020_EndAuthSession,
    ISteamUser_SteamUser020_CancelAuthTicket,
    ISteamUser_SteamUser020_UserHasLicenseForApp,
    ISteamUser_SteamUser020_BIsBehindNAT,
    ISteamUser_SteamUser020_AdvertiseGame,
    ISteamUser_SteamUser020_RequestEncryptedAppTicket,
    ISteamUser_SteamUser020_GetEncryptedAppTicket,
    ISteamUser_SteamUser020_GetGameBadgeLevel,
    ISteamUser_SteamUser020_GetPlayerSteamLevel,
    ISteamUser_SteamUser020_RequestStoreAuthURL,
    ISteamUser_SteamUser020_BIsPhoneVerified,
    ISteamUser_SteamUser020_BIsTwoFactorEnabled,
    ISteamUser_SteamUser020_BIsPhoneIdentifying,
    ISteamUser_SteamUser020_BIsPhoneRequiringVerification,
    ISteamUser_SteamUser020_GetMarketEligibility,
    ISteamUser_SteamUser020_GetDurationControl,
    ISteamUser_SteamUser021_GetHSteamUser,
    ISteamUser_SteamUser021_BLoggedOn,
    ISteamUser_SteamUser021_GetSteamID,
    ISteamUser_SteamUser021_InitiateGameConnection_DEPRECATED,
    ISteamUser_SteamUser021_TerminateGameConnection_DEPRECATED,
    ISteamUser_SteamUser021_TrackAppUsageEvent,
    ISteamUser_SteamUser021_GetUserDataFolder,
    ISteamUser_SteamUser021_StartVoiceRecording,
    ISteamUser_SteamUser021_StopVoiceRecording,
    ISteamUser_SteamUser021_GetAvailableVoice,
    ISteamUser_SteamUser021_GetVoice,
    ISteamUser_SteamUser021_DecompressVoice,
    ISteamUser_SteamUser021_GetVoiceOptimalSampleRate,
    ISteamUser_SteamUser021_GetAuthSessionTicket,
    ISteamUser_SteamUser021_BeginAuthSession,
    ISteamUser_SteamUser021_EndAuthSession,
    ISteamUser_SteamUser021_CancelAuthTicket,
    ISteamUser_SteamUser021_UserHasLicenseForApp,
    ISteamUser_SteamUser021_BIsBehindNAT,
    ISteamUser_SteamUser021_AdvertiseGame,
    ISteamUser_SteamUser021_RequestEncryptedAppTicket,
    ISteamUser_SteamUser021_GetEncryptedAppTicket,
    ISteamUser_SteamUser021_GetGameBadgeLevel,
    ISteamUser_SteamUser021_GetPlayerSteamLevel,
    ISteamUser_SteamUser021_RequestStoreAuthURL,
    ISteamUser_SteamUser021_BIsPhoneVerified,
    ISteamUser_SteamUser021_BIsTwoFactorEnabled,
    ISteamUser_SteamUser021_BIsPhoneIdentifying,
    ISteamUser_SteamUser021_BIsPhoneRequiringVerification,
    ISteamUser_SteamUser021_GetMarketEligibility,
    ISteamUser_SteamUser021_GetDurationControl,
    ISteamUser_SteamUser021_BSetDurationControlOnlineState,
    ISteamUser_SteamUser022_GetHSteamUser,
    ISteamUser_SteamUser022_BLoggedOn,
    ISteamUser_SteamUser022_GetSteamID,
    ISteamUser_SteamUser022_InitiateGameConnection_DEPRECATED,
    ISteamUser_SteamUser022_TerminateGameConnection_DEPRECATED,
    ISteamUser_SteamUser022_TrackAppUsageEvent,
    ISteamUser_SteamUser022_GetUserDataFolder,
    ISteamUser_SteamUser022_StartVoiceRecording,
    ISteamUser_SteamUser022_StopVoiceRecording,
    ISteamUser_SteamUser022_GetAvailableVoice,
    ISteamUser_SteamUser022_GetVoice,
    ISteamUser_SteamUser022_DecompressVoice,
    ISteamUser_SteamUser022_GetVoiceOptimalSampleRate,
    ISteamUser_SteamUser022_GetAuthSessionTicket,
    ISteamUser_SteamUser022_BeginAuthSession,
    ISteamUser_SteamUser022_EndAuthSession,
    ISteamUser_SteamUser022_CancelAuthTicket,
    ISteamUser_SteamUser022_UserHasLicenseForApp,
    ISteamUser_SteamUser022_BIsBehindNAT,
    ISteamUser_SteamUser022_AdvertiseGame,
    ISteamUser_SteamUser022_RequestEncryptedAppTicket,
    ISteamUser_SteamUser022_GetEncryptedAppTicket,
    ISteamUser_SteamUser022_GetGameBadgeLevel,
    ISteamUser_SteamUser022_GetPlayerSteamLevel,
    ISteamUser_SteamUser022_RequestStoreAuthURL,
    ISteamUser_SteamUser022_BIsPhoneVerified,
    ISteamUser_SteamUser022_BIsTwoFactorEnabled,
    ISteamUser_SteamUser022_BIsPhoneIdentifying,
    ISteamUser_SteamUser022_BIsPhoneRequiringVerification,
    ISteamUser_SteamUser022_GetMarketEligibility,
    ISteamUser_SteamUser022_GetDurationControl,
    ISteamUser_SteamUser022_BSetDurationControlOnlineState,
    ISteamUser_SteamUser023_GetHSteamUser,
    ISteamUser_SteamUser023_BLoggedOn,
    ISteamUser_SteamUser023_GetSteamID,
    ISteamUser_SteamUser023_InitiateGameConnection_DEPRECATED,
    ISteamUser_SteamUser023_TerminateGameConnection_DEPRECATED,
    ISteamUser_SteamUser023_TrackAppUsageEvent,
    ISteamUser_SteamUser023_GetUserDataFolder,
    ISteamUser_SteamUser023_StartVoiceRecording,
    ISteamUser_SteamUser023_StopVoiceRecording,
    ISteamUser_SteamUser023_GetAvailableVoice,
    ISteamUser_SteamUser023_GetVoice,
    ISteamUser_SteamUser023_DecompressVoice,
    ISteamUser_SteamUser023_GetVoiceOptimalSampleRate,
    ISteamUser_SteamUser023_GetAuthSessionTicket,
    ISteamUser_SteamUser023_GetAuthTicketForWebApi,
    ISteamUser_SteamUser023_BeginAuthSession,
    ISteamUser_SteamUser023_EndAuthSession,
    ISteamUser_SteamUser023_CancelAuthTicket,
    ISteamUser_SteamUser023_UserHasLicenseForApp,
    ISteamUser_SteamUser023_BIsBehindNAT,
    ISteamUser_SteamUser023_AdvertiseGame,
    ISteamUser_SteamUser023_RequestEncryptedAppTicket,
    ISteamUser_SteamUser023_GetEncryptedAppTicket,
    ISteamUser_SteamUser023_GetGameBadgeLevel,
    ISteamUser_SteamUser023_GetPlayerSteamLevel,
    ISteamUser_SteamUser023_RequestStoreAuthURL,
    ISteamUser_SteamUser023_BIsPhoneVerified,
    ISteamUser_SteamUser023_BIsTwoFactorEnabled,
    ISteamUser_SteamUser023_BIsPhoneIdentifying,
    ISteamUser_SteamUser023_BIsPhoneRequiringVerification,
    ISteamUser_SteamUser023_GetMarketEligibility,
    ISteamUser_SteamUser023_GetDurationControl,
    ISteamUser_SteamUser023_BSetDurationControlOnlineState,
    ISteamUtils_SteamUtils002_GetSecondsSinceAppActive,
    ISteamUtils_SteamUtils002_GetSecondsSinceComputerActive,
    ISteamUtils_SteamUtils002_GetConnectedUniverse,
    ISteamUtils_SteamUtils002_GetServerRealTime,
    ISteamUtils_SteamUtils002_GetIPCountry,
    ISteamUtils_SteamUtils002_GetImageSize,
    ISteamUtils_SteamUtils002_GetImageRGBA,
    ISteamUtils_SteamUtils002_GetCSERIPPort,
    ISteamUtils_SteamUtils002_GetCurrentBatteryPower,
    ISteamUtils_SteamUtils002_GetAppID,
    ISteamUtils_SteamUtils002_SetOverlayNotificationPosition,
    ISteamUtils_SteamUtils002_IsAPICallCompleted,
    ISteamUtils_SteamUtils002_GetAPICallFailureReason,
    ISteamUtils_SteamUtils002_GetAPICallResult,
    ISteamUtils_SteamUtils004_GetSecondsSinceAppActive,
    ISteamUtils_SteamUtils004_GetSecondsSinceComputerActive,
    ISteamUtils_SteamUtils004_GetConnectedUniverse,
    ISteamUtils_SteamUtils004_GetServerRealTime,
    ISteamUtils_SteamUtils004_GetIPCountry,
    ISteamUtils_SteamUtils004_GetImageSize,
    ISteamUtils_SteamUtils004_GetImageRGBA,
    ISteamUtils_SteamUtils004_GetCSERIPPort,
    ISteamUtils_SteamUtils004_GetCurrentBatteryPower,
    ISteamUtils_SteamUtils004_GetAppID,
    ISteamUtils_SteamUtils004_SetOverlayNotificationPosition,
    ISteamUtils_SteamUtils004_IsAPICallCompleted,
    ISteamUtils_SteamUtils004_GetAPICallFailureReason,
    ISteamUtils_SteamUtils004_GetAPICallResult,
    ISteamUtils_SteamUtils004_RunFrame,
    ISteamUtils_SteamUtils004_GetIPCCallCount,
    ISteamUtils_SteamUtils004_SetWarningMessageHook,
    ISteamUtils_SteamUtils004_IsOverlayEnabled,
    ISteamUtils_SteamUtils005_GetSecondsSinceAppActive,
    ISteamUtils_SteamUtils005_GetSecondsSinceComputerActive,
    ISteamUtils_SteamUtils005_GetConnectedUniverse,
    ISteamUtils_SteamUtils005_GetServerRealTime,
    ISteamUtils_SteamUtils005_GetIPCountry,
    ISteamUtils_SteamUtils005_GetImageSize,
    ISteamUtils_SteamUtils005_GetImageRGBA,
    ISteamUtils_SteamUtils005_GetCSERIPPort,
    ISteamUtils_SteamUtils005_GetCurrentBatteryPower,
    ISteamUtils_SteamUtils005_GetAppID,
    ISteamUtils_SteamUtils005_SetOverlayNotificationPosition,
    ISteamUtils_SteamUtils005_IsAPICallCompleted,
    ISteamUtils_SteamUtils005_GetAPICallFailureReason,
    ISteamUtils_SteamUtils005_GetAPICallResult,
    ISteamUtils_SteamUtils005_RunFrame,
    ISteamUtils_SteamUtils005_GetIPCCallCount,
    ISteamUtils_SteamUtils005_SetWarningMessageHook,
    ISteamUtils_SteamUtils005_IsOverlayEnabled,
    ISteamUtils_SteamUtils005_BOverlayNeedsPresent,
    ISteamUtils_SteamUtils005_CheckFileSignature,
    ISteamUtils_SteamUtils005_ShowGamepadTextInput,
    ISteamUtils_SteamUtils005_GetEnteredGamepadTextLength,
    ISteamUtils_SteamUtils005_GetEnteredGamepadTextInput,
    ISteamUtils_SteamUtils006_GetSecondsSinceAppActive,
    ISteamUtils_SteamUtils006_GetSecondsSinceComputerActive,
    ISteamUtils_SteamUtils006_GetConnectedUniverse,
    ISteamUtils_SteamUtils006_GetServerRealTime,
    ISteamUtils_SteamUtils006_GetIPCountry,
    ISteamUtils_SteamUtils006_GetImageSize,
    ISteamUtils_SteamUtils006_GetImageRGBA,
    ISteamUtils_SteamUtils006_GetCSERIPPort,
    ISteamUtils_SteamUtils006_GetCurrentBatteryPower,
    ISteamUtils_SteamUtils006_GetAppID,
    ISteamUtils_SteamUtils006_SetOverlayNotificationPosition,
    ISteamUtils_SteamUtils006_IsAPICallCompleted,
    ISteamUtils_SteamUtils006_GetAPICallFailureReason,
    ISteamUtils_SteamUtils006_GetAPICallResult,
    ISteamUtils_SteamUtils006_RunFrame,
    ISteamUtils_SteamUtils006_GetIPCCallCount,
    ISteamUtils_SteamUtils006_SetWarningMessageHook,
    ISteamUtils_SteamUtils006_IsOverlayEnabled,
    ISteamUtils_SteamUtils006_BOverlayNeedsPresent,
    ISteamUtils_SteamUtils006_CheckFileSignature,
    ISteamUtils_SteamUtils006_ShowGamepadTextInput,
    ISteamUtils_SteamUtils006_GetEnteredGamepadTextLength,
    ISteamUtils_SteamUtils006_GetEnteredGamepadTextInput,
    ISteamUtils_SteamUtils006_GetSteamUILanguage,
    ISteamUtils_SteamUtils006_IsSteamRunningInVR,
    ISteamUtils_SteamUtils007_GetSecondsSinceAppActive,
    ISteamUtils_SteamUtils007_GetSecondsSinceComputerActive,
    ISteamUtils_SteamUtils007_GetConnectedUniverse,
    ISteamUtils_SteamUtils007_GetServerRealTime,
    ISteamUtils_SteamUtils007_GetIPCountry,
    ISteamUtils_SteamUtils007_GetImageSize,
    ISteamUtils_SteamUtils007_GetImageRGBA,
    ISteamUtils_SteamUtils007_GetCSERIPPort,
    ISteamUtils_SteamUtils007_GetCurrentBatteryPower,
    ISteamUtils_SteamUtils007_GetAppID,
    ISteamUtils_SteamUtils007_SetOverlayNotificationPosition,
    ISteamUtils_SteamUtils007_IsAPICallCompleted,
    ISteamUtils_SteamUtils007_GetAPICallFailureReason,
    ISteamUtils_SteamUtils007_GetAPICallResult,
    ISteamUtils_SteamUtils007_RunFrame,
    ISteamUtils_SteamUtils007_GetIPCCallCount,
    ISteamUtils_SteamUtils007_SetWarningMessageHook,
    ISteamUtils_SteamUtils007_IsOverlayEnabled,
    ISteamUtils_SteamUtils007_BOverlayNeedsPresent,
    ISteamUtils_SteamUtils007_CheckFileSignature,
    ISteamUtils_SteamUtils007_ShowGamepadTextInput,
    ISteamUtils_SteamUtils007_GetEnteredGamepadTextLength,
    ISteamUtils_SteamUtils007_GetEnteredGamepadTextInput,
    ISteamUtils_SteamUtils007_GetSteamUILanguage,
    ISteamUtils_SteamUtils007_IsSteamRunningInVR,
    ISteamUtils_SteamUtils007_SetOverlayNotificationInset,
    ISteamUtils_SteamUtils008_GetSecondsSinceAppActive,
    ISteamUtils_SteamUtils008_GetSecondsSinceComputerActive,
    ISteamUtils_SteamUtils008_GetConnectedUniverse,
    ISteamUtils_SteamUtils008_GetServerRealTime,
    ISteamUtils_SteamUtils008_GetIPCountry,
    ISteamUtils_SteamUtils008_GetImageSize,
    ISteamUtils_SteamUtils008_GetImageRGBA,
    ISteamUtils_SteamUtils008_GetCSERIPPort,
    ISteamUtils_SteamUtils008_GetCurrentBatteryPower,
    ISteamUtils_SteamUtils008_GetAppID,
    ISteamUtils_SteamUtils008_SetOverlayNotificationPosition,
    ISteamUtils_SteamUtils008_IsAPICallCompleted,
    ISteamUtils_SteamUtils008_GetAPICallFailureReason,
    ISteamUtils_SteamUtils008_GetAPICallResult,
    ISteamUtils_SteamUtils008_RunFrame,
    ISteamUtils_SteamUtils008_GetIPCCallCount,
    ISteamUtils_SteamUtils008_SetWarningMessageHook,
    ISteamUtils_SteamUtils008_IsOverlayEnabled,
    ISteamUtils_SteamUtils008_BOverlayNeedsPresent,
    ISteamUtils_SteamUtils008_CheckFileSignature,
    ISteamUtils_SteamUtils008_ShowGamepadTextInput,
    ISteamUtils_SteamUtils008_GetEnteredGamepadTextLength,
    ISteamUtils_SteamUtils008_GetEnteredGamepadTextInput,
    ISteamUtils_SteamUtils008_GetSteamUILanguage,
    ISteamUtils_SteamUtils008_IsSteamRunningInVR,
    ISteamUtils_SteamUtils008_SetOverlayNotificationInset,
    ISteamUtils_SteamUtils008_IsSteamInBigPictureMode,
    ISteamUtils_SteamUtils008_StartVRDashboard,
    ISteamUtils_SteamUtils009_GetSecondsSinceAppActive,
    ISteamUtils_SteamUtils009_GetSecondsSinceComputerActive,
    ISteamUtils_SteamUtils009_GetConnectedUniverse,
    ISteamUtils_SteamUtils009_GetServerRealTime,
    ISteamUtils_SteamUtils009_GetIPCountry,
    ISteamUtils_SteamUtils009_GetImageSize,
    ISteamUtils_SteamUtils009_GetImageRGBA,
    ISteamUtils_SteamUtils009_GetCSERIPPort,
    ISteamUtils_SteamUtils009_GetCurrentBatteryPower,
    ISteamUtils_SteamUtils009_GetAppID,
    ISteamUtils_SteamUtils009_SetOverlayNotificationPosition,
    ISteamUtils_SteamUtils009_IsAPICallCompleted,
    ISteamUtils_SteamUtils009_GetAPICallFailureReason,
    ISteamUtils_SteamUtils009_GetAPICallResult,
    ISteamUtils_SteamUtils009_RunFrame,
    ISteamUtils_SteamUtils009_GetIPCCallCount,
    ISteamUtils_SteamUtils009_SetWarningMessageHook,
    ISteamUtils_SteamUtils009_IsOverlayEnabled,
    ISteamUtils_SteamUtils009_BOverlayNeedsPresent,
    ISteamUtils_SteamUtils009_CheckFileSignature,
    ISteamUtils_SteamUtils009_ShowGamepadTextInput,
    ISteamUtils_SteamUtils009_GetEnteredGamepadTextLength,
    ISteamUtils_SteamUtils009_GetEnteredGamepadTextInput,
    ISteamUtils_SteamUtils009_GetSteamUILanguage,
    ISteamUtils_SteamUtils009_IsSteamRunningInVR,
    ISteamUtils_SteamUtils009_SetOverlayNotificationInset,
    ISteamUtils_SteamUtils009_IsSteamInBigPictureMode,
    ISteamUtils_SteamUtils009_StartVRDashboard,
    ISteamUtils_SteamUtils009_IsVRHeadsetStreamingEnabled,
    ISteamUtils_SteamUtils009_SetVRHeadsetStreamingEnabled,
    ISteamUtils_SteamUtils009_IsSteamChinaLauncher,
    ISteamUtils_SteamUtils009_InitFilterText,
    ISteamUtils_SteamUtils009_FilterText,
    ISteamUtils_SteamUtils009_GetIPv6ConnectivityState,
    ISteamUtils_SteamUtils010_GetSecondsSinceAppActive,
    ISteamUtils_SteamUtils010_GetSecondsSinceComputerActive,
    ISteamUtils_SteamUtils010_GetConnectedUniverse,
    ISteamUtils_SteamUtils010_GetServerRealTime,
    ISteamUtils_SteamUtils010_GetIPCountry,
    ISteamUtils_SteamUtils010_GetImageSize,
    ISteamUtils_SteamUtils010_GetImageRGBA,
    ISteamUtils_SteamUtils010_GetCSERIPPort,
    ISteamUtils_SteamUtils010_GetCurrentBatteryPower,
    ISteamUtils_SteamUtils010_GetAppID,
    ISteamUtils_SteamUtils010_SetOverlayNotificationPosition,
    ISteamUtils_SteamUtils010_IsAPICallCompleted,
    ISteamUtils_SteamUtils010_GetAPICallFailureReason,
    ISteamUtils_SteamUtils010_GetAPICallResult,
    ISteamUtils_SteamUtils010_RunFrame,
    ISteamUtils_SteamUtils010_GetIPCCallCount,
    ISteamUtils_SteamUtils010_SetWarningMessageHook,
    ISteamUtils_SteamUtils010_IsOverlayEnabled,
    ISteamUtils_SteamUtils010_BOverlayNeedsPresent,
    ISteamUtils_SteamUtils010_CheckFileSignature,
    ISteamUtils_SteamUtils010_ShowGamepadTextInput,
    ISteamUtils_SteamUtils010_GetEnteredGamepadTextLength,
    ISteamUtils_SteamUtils010_GetEnteredGamepadTextInput,
    ISteamUtils_SteamUtils010_GetSteamUILanguage,
    ISteamUtils_SteamUtils010_IsSteamRunningInVR,
    ISteamUtils_SteamUtils010_SetOverlayNotificationInset,
    ISteamUtils_SteamUtils010_IsSteamInBigPictureMode,
    ISteamUtils_SteamUtils010_StartVRDashboard,
    ISteamUtils_SteamUtils010_IsVRHeadsetStreamingEnabled,
    ISteamUtils_SteamUtils010_SetVRHeadsetStreamingEnabled,
    ISteamUtils_SteamUtils010_IsSteamChinaLauncher,
    ISteamUtils_SteamUtils010_InitFilterText,
    ISteamUtils_SteamUtils010_FilterText,
    ISteamUtils_SteamUtils010_GetIPv6ConnectivityState,
    ISteamUtils_SteamUtils010_IsSteamRunningOnSteamDeck,
    ISteamUtils_SteamUtils010_ShowFloatingGamepadTextInput,
    ISteamUtils_SteamUtils010_SetGameLauncherMode,
    ISteamUtils_SteamUtils010_DismissFloatingGamepadTextInput,
    ISteamUtils_SteamUtils010_DismissGamepadTextInput,
};

C_ASSERT( sizeof(SteamNetworkingIPAddr) >= 18 );
C_ASSERT( offsetof(SteamNetworkingIPAddr, data) == 0 );
C_ASSERT( sizeof(SteamNetworkingIPAddr().data) >= 16 );
C_ASSERT( offsetof(SteamNetworkingIPAddr, m_port) == 16 );
C_ASSERT( sizeof(SteamNetworkingIPAddr().m_port) >= 2 );

C_ASSERT( sizeof(SteamNetworkingIdentity_144) >= 136 );
C_ASSERT( offsetof(SteamNetworkingIdentity_144, m_eType) == 0 );
C_ASSERT( sizeof(SteamNetworkingIdentity_144().m_eType) >= 4 );
C_ASSERT( offsetof(SteamNetworkingIdentity_144, m_cbSize) == 4 );
C_ASSERT( sizeof(SteamNetworkingIdentity_144().m_cbSize) >= 4 );
C_ASSERT( offsetof(SteamNetworkingIdentity_144, data) == 8 );
C_ASSERT( sizeof(SteamNetworkingIdentity_144().data) >= 128 );

C_ASSERT( sizeof(SteamNetworkingIdentity_151) >= 8 );
C_ASSERT( offsetof(SteamNetworkingIdentity_151, m_eType) == 0 );
C_ASSERT( sizeof(SteamNetworkingIdentity_151().m_eType) >= 4 );
C_ASSERT( offsetof(SteamNetworkingIdentity_151, m_cbSize) == 4 );
C_ASSERT( sizeof(SteamNetworkingIdentity_151().m_cbSize) >= 4 );

C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a) >= 696 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_identityRemote) == 0 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_identityRemote) >= 136 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_nUserData) == 136 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_nUserData) >= 8 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_hListenSocket) == 144 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_hListenSocket) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_addrRemote) == 148 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_addrRemote) >= 18 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m__pad1) == 166 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m__pad1) >= 2 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_idPOPRemote) == 168 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_idPOPRemote) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_idPOPRelay) == 172 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_idPOPRelay) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_eState) == 176 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_eState) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_eEndReason) == 180 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_eEndReason) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_szEndDebug) == 184 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_szEndDebug) >= 128 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_szConnectionDescription) == 312 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_szConnectionDescription) >= 128 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, m_nFlags) == 440 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().m_nFlags) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_153a, reserved) == 444 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_153a().reserved) >= 252 );

C_ASSERT( sizeof(SteamNetConnectionInfo_t_144) >= 696 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_identityRemote) == 0 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_identityRemote) >= 136 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_nUserData) == 136 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_nUserData) >= 8 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_hListenSocket) == 144 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_hListenSocket) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_addrRemote) == 148 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_addrRemote) >= 18 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m__pad1) == 166 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m__pad1) >= 2 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_idPOPRemote) == 168 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_idPOPRemote) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_idPOPRelay) == 172 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_idPOPRelay) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_eState) == 176 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_eState) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_eEndReason) == 180 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_eEndReason) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_szEndDebug) == 184 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_szEndDebug) >= 128 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, m_szConnectionDescription) == 312 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().m_szConnectionDescription) >= 128 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_144, reserved) == 440 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_144().reserved) >= 256 );

C_ASSERT( sizeof(SteamNetConnectionInfo_t_151) >= 568 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_identityRemote) == 0 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_identityRemote) >= 8 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_nUserData) == 8 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_nUserData) >= 8 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_hListenSocket) == 16 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_hListenSocket) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_addrRemote) == 20 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_addrRemote) >= 18 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m__pad1) == 38 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m__pad1) >= 2 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_idPOPRemote) == 40 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_idPOPRemote) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_idPOPRelay) == 44 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_idPOPRelay) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_eState) == 48 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_eState) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_eEndReason) == 52 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_eEndReason) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_szEndDebug) == 56 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_szEndDebug) >= 128 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, m_szConnectionDescription) == 184 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().m_szConnectionDescription) >= 128 );
C_ASSERT( offsetof(SteamNetConnectionInfo_t_151, reserved) == 312 );
C_ASSERT( sizeof(SteamNetConnectionInfo_t_151().reserved) >= 256 );

C_ASSERT( sizeof(servernetadr_t) >= 8 );
C_ASSERT( offsetof(servernetadr_t, m_usConnectionPort) == 0 );
C_ASSERT( sizeof(servernetadr_t().m_usConnectionPort) >= 2 );
C_ASSERT( offsetof(servernetadr_t, m_usQueryPort) == 2 );
C_ASSERT( sizeof(servernetadr_t().m_usQueryPort) >= 2 );
C_ASSERT( offsetof(servernetadr_t, m_unIP) == 4 );
C_ASSERT( sizeof(servernetadr_t().m_unIP) >= 4 );

C_ASSERT( sizeof(ActiveBeaconsUpdated_t) >= 1 );

C_ASSERT( sizeof(AppDataChanged_t) >= 8 );
C_ASSERT( offsetof(AppDataChanged_t, m_nAppID) == 0 );
C_ASSERT( sizeof(AppDataChanged_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(AppDataChanged_t, m_bBySteamUI) == 4 );
C_ASSERT( sizeof(AppDataChanged_t().m_bBySteamUI) >= 1 );
C_ASSERT( offsetof(AppDataChanged_t, m_bCDDBUpdate) == 5 );
C_ASSERT( sizeof(AppDataChanged_t().m_bCDDBUpdate) >= 1 );

C_ASSERT( sizeof(AppProofOfPurchaseKeyResponse_t_137) >= 252 );
C_ASSERT( offsetof(AppProofOfPurchaseKeyResponse_t_137, m_eResult) == 0 );
C_ASSERT( sizeof(AppProofOfPurchaseKeyResponse_t_137().m_eResult) >= 4 );
C_ASSERT( offsetof(AppProofOfPurchaseKeyResponse_t_137, m_nAppID) == 4 );
C_ASSERT( sizeof(AppProofOfPurchaseKeyResponse_t_137().m_nAppID) >= 4 );
C_ASSERT( offsetof(AppProofOfPurchaseKeyResponse_t_137, m_cchKeyLength) == 8 );
C_ASSERT( sizeof(AppProofOfPurchaseKeyResponse_t_137().m_cchKeyLength) >= 4 );
C_ASSERT( offsetof(AppProofOfPurchaseKeyResponse_t_137, m_rgchKey) == 12 );
C_ASSERT( sizeof(AppProofOfPurchaseKeyResponse_t_137().m_rgchKey) >= 240 );

C_ASSERT( sizeof(AppProofOfPurchaseKeyResponse_t_118) >= 72 );
C_ASSERT( offsetof(AppProofOfPurchaseKeyResponse_t_118, m_eResult) == 0 );
C_ASSERT( sizeof(AppProofOfPurchaseKeyResponse_t_118().m_eResult) >= 4 );
C_ASSERT( offsetof(AppProofOfPurchaseKeyResponse_t_118, m_nAppID) == 4 );
C_ASSERT( sizeof(AppProofOfPurchaseKeyResponse_t_118().m_nAppID) >= 4 );
C_ASSERT( offsetof(AppProofOfPurchaseKeyResponse_t_118, m_rgchKey) == 8 );
C_ASSERT( sizeof(AppProofOfPurchaseKeyResponse_t_118().m_rgchKey) >= 64 );

C_ASSERT( sizeof(AppResumingFromSuspend_t) >= 1 );

C_ASSERT( sizeof(AssociateWithClanResult_t) >= 4 );
C_ASSERT( offsetof(AssociateWithClanResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(AssociateWithClanResult_t().m_eResult) >= 4 );

C_ASSERT( sizeof(AvailableBeaconLocationsUpdated_t) >= 1 );

C_ASSERT( sizeof(AvatarImageLoaded_t) >= 20 );
C_ASSERT( offsetof(AvatarImageLoaded_t, m_steamID) == 0 );
C_ASSERT( sizeof(AvatarImageLoaded_t().m_steamID) >= 8 );
C_ASSERT( offsetof(AvatarImageLoaded_t, m_iImage) == 8 );
C_ASSERT( sizeof(AvatarImageLoaded_t().m_iImage) >= 4 );
C_ASSERT( offsetof(AvatarImageLoaded_t, m_iWide) == 12 );
C_ASSERT( sizeof(AvatarImageLoaded_t().m_iWide) >= 4 );
C_ASSERT( offsetof(AvatarImageLoaded_t, m_iTall) == 16 );
C_ASSERT( sizeof(AvatarImageLoaded_t().m_iTall) >= 4 );

C_ASSERT( sizeof(BroadcastUploadStart_t) >= 1 );

C_ASSERT( sizeof(BroadcastUploadStop_t) >= 4 );
C_ASSERT( offsetof(BroadcastUploadStop_t, m_eResult) == 0 );
C_ASSERT( sizeof(BroadcastUploadStop_t().m_eResult) >= 4 );

C_ASSERT( sizeof(CallbackPipeFailure_t) >= 1 );

C_ASSERT( sizeof(ChangeNumOpenSlotsCallback_t) >= 4 );
C_ASSERT( offsetof(ChangeNumOpenSlotsCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(ChangeNumOpenSlotsCallback_t().m_eResult) >= 4 );

C_ASSERT( sizeof(CheckFileSignature_t) >= 4 );
C_ASSERT( offsetof(CheckFileSignature_t, m_eCheckFileSignature) == 0 );
C_ASSERT( sizeof(CheckFileSignature_t().m_eCheckFileSignature) >= 4 );

C_ASSERT( sizeof(ClanOfficerListResponse_t) >= 16 );
C_ASSERT( offsetof(ClanOfficerListResponse_t, m_steamIDClan) == 0 );
C_ASSERT( sizeof(ClanOfficerListResponse_t().m_steamIDClan) >= 8 );
C_ASSERT( offsetof(ClanOfficerListResponse_t, m_cOfficers) == 8 );
C_ASSERT( sizeof(ClanOfficerListResponse_t().m_cOfficers) >= 4 );
C_ASSERT( offsetof(ClanOfficerListResponse_t, m_bSuccess) == 12 );
C_ASSERT( sizeof(ClanOfficerListResponse_t().m_bSuccess) >= 1 );

C_ASSERT( sizeof(ClientGameServerDeny_t) >= 16 );
C_ASSERT( offsetof(ClientGameServerDeny_t, m_uAppID) == 0 );
C_ASSERT( sizeof(ClientGameServerDeny_t().m_uAppID) >= 4 );
C_ASSERT( offsetof(ClientGameServerDeny_t, m_unGameServerIP) == 4 );
C_ASSERT( sizeof(ClientGameServerDeny_t().m_unGameServerIP) >= 4 );
C_ASSERT( offsetof(ClientGameServerDeny_t, m_usGameServerPort) == 8 );
C_ASSERT( sizeof(ClientGameServerDeny_t().m_usGameServerPort) >= 2 );
C_ASSERT( offsetof(ClientGameServerDeny_t, m_bSecure) == 10 );
C_ASSERT( sizeof(ClientGameServerDeny_t().m_bSecure) >= 2 );
C_ASSERT( offsetof(ClientGameServerDeny_t, m_uReason) == 12 );
C_ASSERT( sizeof(ClientGameServerDeny_t().m_uReason) >= 4 );

C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_119) >= 24 );
C_ASSERT( offsetof(ComputeNewPlayerCompatibilityResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(ComputeNewPlayerCompatibilityResult_t_119, m_cPlayersThatDontLikeCandidate) == 4 );
C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_119().m_cPlayersThatDontLikeCandidate) >= 4 );
C_ASSERT( offsetof(ComputeNewPlayerCompatibilityResult_t_119, m_cPlayersThatCandidateDoesntLike) == 8 );
C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_119().m_cPlayersThatCandidateDoesntLike) >= 4 );
C_ASSERT( offsetof(ComputeNewPlayerCompatibilityResult_t_119, m_cClanPlayersThatDontLikeCandidate) == 12 );
C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_119().m_cClanPlayersThatDontLikeCandidate) >= 4 );
C_ASSERT( offsetof(ComputeNewPlayerCompatibilityResult_t_119, m_SteamIDCandidate) == 16 );
C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_119().m_SteamIDCandidate) >= 8 );

C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_116x) >= 16 );
C_ASSERT( offsetof(ComputeNewPlayerCompatibilityResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(ComputeNewPlayerCompatibilityResult_t_116x, m_cPlayersThatDontLikeCandidate) == 4 );
C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_116x().m_cPlayersThatDontLikeCandidate) >= 4 );
C_ASSERT( offsetof(ComputeNewPlayerCompatibilityResult_t_116x, m_cPlayersThatCandidateDoesntLike) == 8 );
C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_116x().m_cPlayersThatCandidateDoesntLike) >= 4 );
C_ASSERT( offsetof(ComputeNewPlayerCompatibilityResult_t_116x, m_cClanPlayersThatDontLikeCandidate) == 12 );
C_ASSERT( sizeof(ComputeNewPlayerCompatibilityResult_t_116x().m_cClanPlayersThatDontLikeCandidate) >= 4 );

C_ASSERT( sizeof(ControllerAnalogActionData_t) >= 13 );
C_ASSERT( offsetof(ControllerAnalogActionData_t, eMode) == 0 );
C_ASSERT( sizeof(ControllerAnalogActionData_t().eMode) >= 4 );
C_ASSERT( offsetof(ControllerAnalogActionData_t, x) == 4 );
C_ASSERT( sizeof(ControllerAnalogActionData_t().x) >= 4 );
C_ASSERT( offsetof(ControllerAnalogActionData_t, y) == 8 );
C_ASSERT( sizeof(ControllerAnalogActionData_t().y) >= 4 );
C_ASSERT( offsetof(ControllerAnalogActionData_t, bActive) == 12 );
C_ASSERT( sizeof(ControllerAnalogActionData_t().bActive) >= 1 );

C_ASSERT( sizeof(ControllerDigitalActionData_t) >= 2 );
C_ASSERT( offsetof(ControllerDigitalActionData_t, bState) == 0 );
C_ASSERT( sizeof(ControllerDigitalActionData_t().bState) >= 1 );
C_ASSERT( offsetof(ControllerDigitalActionData_t, bActive) == 1 );
C_ASSERT( sizeof(ControllerDigitalActionData_t().bActive) >= 1 );

C_ASSERT( sizeof(ControllerMotionData_t) >= 40 );
C_ASSERT( offsetof(ControllerMotionData_t, rotQuatX) == 0 );
C_ASSERT( sizeof(ControllerMotionData_t().rotQuatX) >= 4 );
C_ASSERT( offsetof(ControllerMotionData_t, rotQuatY) == 4 );
C_ASSERT( sizeof(ControllerMotionData_t().rotQuatY) >= 4 );
C_ASSERT( offsetof(ControllerMotionData_t, rotQuatZ) == 8 );
C_ASSERT( sizeof(ControllerMotionData_t().rotQuatZ) >= 4 );
C_ASSERT( offsetof(ControllerMotionData_t, rotQuatW) == 12 );
C_ASSERT( sizeof(ControllerMotionData_t().rotQuatW) >= 4 );
C_ASSERT( offsetof(ControllerMotionData_t, posAccelX) == 16 );
C_ASSERT( sizeof(ControllerMotionData_t().posAccelX) >= 4 );
C_ASSERT( offsetof(ControllerMotionData_t, posAccelY) == 20 );
C_ASSERT( sizeof(ControllerMotionData_t().posAccelY) >= 4 );
C_ASSERT( offsetof(ControllerMotionData_t, posAccelZ) == 24 );
C_ASSERT( sizeof(ControllerMotionData_t().posAccelZ) >= 4 );
C_ASSERT( offsetof(ControllerMotionData_t, rotVelX) == 28 );
C_ASSERT( sizeof(ControllerMotionData_t().rotVelX) >= 4 );
C_ASSERT( offsetof(ControllerMotionData_t, rotVelY) == 32 );
C_ASSERT( sizeof(ControllerMotionData_t().rotVelY) >= 4 );
C_ASSERT( offsetof(ControllerMotionData_t, rotVelZ) == 36 );
C_ASSERT( sizeof(ControllerMotionData_t().rotVelZ) >= 4 );

C_ASSERT( sizeof(DlcInstalled_t) >= 4 );
C_ASSERT( offsetof(DlcInstalled_t, m_nAppID) == 0 );
C_ASSERT( sizeof(DlcInstalled_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(DownloadClanActivityCountsResult_t) >= 1 );
C_ASSERT( offsetof(DownloadClanActivityCountsResult_t, m_bSuccess) == 0 );
C_ASSERT( sizeof(DownloadClanActivityCountsResult_t().m_bSuccess) >= 1 );

C_ASSERT( sizeof(DurationControl_t_147) >= 32 );
C_ASSERT( offsetof(DurationControl_t_147, m_eResult) == 0 );
C_ASSERT( sizeof(DurationControl_t_147().m_eResult) >= 4 );
C_ASSERT( offsetof(DurationControl_t_147, m_appid) == 4 );
C_ASSERT( sizeof(DurationControl_t_147().m_appid) >= 4 );
C_ASSERT( offsetof(DurationControl_t_147, m_bApplicable) == 8 );
C_ASSERT( sizeof(DurationControl_t_147().m_bApplicable) >= 1 );
C_ASSERT( offsetof(DurationControl_t_147, m_csecsLast5h) == 12 );
C_ASSERT( sizeof(DurationControl_t_147().m_csecsLast5h) >= 4 );
C_ASSERT( offsetof(DurationControl_t_147, m_progress) == 16 );
C_ASSERT( sizeof(DurationControl_t_147().m_progress) >= 4 );
C_ASSERT( offsetof(DurationControl_t_147, m_notification) == 20 );
C_ASSERT( sizeof(DurationControl_t_147().m_notification) >= 4 );
C_ASSERT( offsetof(DurationControl_t_147, m_csecsToday) == 24 );
C_ASSERT( sizeof(DurationControl_t_147().m_csecsToday) >= 4 );
C_ASSERT( offsetof(DurationControl_t_147, m_csecsRemaining) == 28 );
C_ASSERT( sizeof(DurationControl_t_147().m_csecsRemaining) >= 4 );

C_ASSERT( sizeof(DurationControl_t_145) >= 24 );
C_ASSERT( offsetof(DurationControl_t_145, m_eResult) == 0 );
C_ASSERT( sizeof(DurationControl_t_145().m_eResult) >= 4 );
C_ASSERT( offsetof(DurationControl_t_145, m_appid) == 4 );
C_ASSERT( sizeof(DurationControl_t_145().m_appid) >= 4 );
C_ASSERT( offsetof(DurationControl_t_145, m_bApplicable) == 8 );
C_ASSERT( sizeof(DurationControl_t_145().m_bApplicable) >= 1 );
C_ASSERT( offsetof(DurationControl_t_145, m_csecsLast5h) == 12 );
C_ASSERT( sizeof(DurationControl_t_145().m_csecsLast5h) >= 4 );
C_ASSERT( offsetof(DurationControl_t_145, m_progress) == 16 );
C_ASSERT( sizeof(DurationControl_t_145().m_progress) >= 4 );
C_ASSERT( offsetof(DurationControl_t_145, m_notification) == 20 );
C_ASSERT( sizeof(DurationControl_t_145().m_notification) >= 4 );

C_ASSERT( sizeof(EncryptedAppTicketResponse_t) >= 4 );
C_ASSERT( offsetof(EncryptedAppTicketResponse_t, m_eResult) == 0 );
C_ASSERT( sizeof(EncryptedAppTicketResponse_t().m_eResult) >= 4 );

C_ASSERT( sizeof(EquippedProfileItemsChanged_t) >= 8 );
C_ASSERT( offsetof(EquippedProfileItemsChanged_t, m_steamID) == 0 );
C_ASSERT( sizeof(EquippedProfileItemsChanged_t().m_steamID) >= 8 );

C_ASSERT( sizeof(EquippedProfileItems_t) >= 20 );
C_ASSERT( offsetof(EquippedProfileItems_t, m_eResult) == 0 );
C_ASSERT( sizeof(EquippedProfileItems_t().m_eResult) >= 4 );
C_ASSERT( offsetof(EquippedProfileItems_t, m_steamID) == 4 );
C_ASSERT( sizeof(EquippedProfileItems_t().m_steamID) >= 8 );
C_ASSERT( offsetof(EquippedProfileItems_t, m_bHasAnimatedAvatar) == 12 );
C_ASSERT( sizeof(EquippedProfileItems_t().m_bHasAnimatedAvatar) >= 1 );
C_ASSERT( offsetof(EquippedProfileItems_t, m_bHasAvatarFrame) == 13 );
C_ASSERT( sizeof(EquippedProfileItems_t().m_bHasAvatarFrame) >= 1 );
C_ASSERT( offsetof(EquippedProfileItems_t, m_bHasProfileModifier) == 14 );
C_ASSERT( sizeof(EquippedProfileItems_t().m_bHasProfileModifier) >= 1 );
C_ASSERT( offsetof(EquippedProfileItems_t, m_bHasProfileBackground) == 15 );
C_ASSERT( sizeof(EquippedProfileItems_t().m_bHasProfileBackground) >= 1 );
C_ASSERT( offsetof(EquippedProfileItems_t, m_bHasMiniProfileBackground) == 16 );
C_ASSERT( sizeof(EquippedProfileItems_t().m_bHasMiniProfileBackground) >= 1 );

C_ASSERT( sizeof(FavoritesListAccountsUpdated_t) >= 4 );
C_ASSERT( offsetof(FavoritesListAccountsUpdated_t, m_eResult) == 0 );
C_ASSERT( sizeof(FavoritesListAccountsUpdated_t().m_eResult) >= 4 );

C_ASSERT( sizeof(FavoritesListChanged_t_128x) >= 28 );
C_ASSERT( offsetof(FavoritesListChanged_t_128x, m_nIP) == 0 );
C_ASSERT( sizeof(FavoritesListChanged_t_128x().m_nIP) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_128x, m_nQueryPort) == 4 );
C_ASSERT( sizeof(FavoritesListChanged_t_128x().m_nQueryPort) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_128x, m_nConnPort) == 8 );
C_ASSERT( sizeof(FavoritesListChanged_t_128x().m_nConnPort) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_128x, m_nAppID) == 12 );
C_ASSERT( sizeof(FavoritesListChanged_t_128x().m_nAppID) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_128x, m_nFlags) == 16 );
C_ASSERT( sizeof(FavoritesListChanged_t_128x().m_nFlags) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_128x, m_bAdd) == 20 );
C_ASSERT( sizeof(FavoritesListChanged_t_128x().m_bAdd) >= 1 );
C_ASSERT( offsetof(FavoritesListChanged_t_128x, m_unAccountId) == 24 );
C_ASSERT( sizeof(FavoritesListChanged_t_128x().m_unAccountId) >= 4 );

C_ASSERT( sizeof(FavoritesListChanged_t_099u) >= 24 );
C_ASSERT( offsetof(FavoritesListChanged_t_099u, m_nIP) == 0 );
C_ASSERT( sizeof(FavoritesListChanged_t_099u().m_nIP) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_099u, m_nQueryPort) == 4 );
C_ASSERT( sizeof(FavoritesListChanged_t_099u().m_nQueryPort) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_099u, m_nConnPort) == 8 );
C_ASSERT( sizeof(FavoritesListChanged_t_099u().m_nConnPort) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_099u, m_nAppID) == 12 );
C_ASSERT( sizeof(FavoritesListChanged_t_099u().m_nAppID) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_099u, m_nFlags) == 16 );
C_ASSERT( sizeof(FavoritesListChanged_t_099u().m_nFlags) >= 4 );
C_ASSERT( offsetof(FavoritesListChanged_t_099u, m_bAdd) == 20 );
C_ASSERT( sizeof(FavoritesListChanged_t_099u().m_bAdd) >= 1 );

C_ASSERT( sizeof(FilterTextDictionaryChanged_t) >= 4 );
C_ASSERT( offsetof(FilterTextDictionaryChanged_t, m_eLanguage) == 0 );
C_ASSERT( sizeof(FilterTextDictionaryChanged_t().m_eLanguage) >= 4 );

C_ASSERT( sizeof(FloatingGamepadTextInputDismissed_t) >= 1 );

C_ASSERT( sizeof(FriendGameInfo_t) >= 24 );
C_ASSERT( offsetof(FriendGameInfo_t, m_gameID) == 0 );
C_ASSERT( sizeof(FriendGameInfo_t().m_gameID) >= 8 );
C_ASSERT( offsetof(FriendGameInfo_t, m_unGameIP) == 8 );
C_ASSERT( sizeof(FriendGameInfo_t().m_unGameIP) >= 4 );
C_ASSERT( offsetof(FriendGameInfo_t, m_usGamePort) == 12 );
C_ASSERT( sizeof(FriendGameInfo_t().m_usGamePort) >= 2 );
C_ASSERT( offsetof(FriendGameInfo_t, m_usQueryPort) == 14 );
C_ASSERT( sizeof(FriendGameInfo_t().m_usQueryPort) >= 2 );
C_ASSERT( offsetof(FriendGameInfo_t, m_steamIDLobby) == 16 );
C_ASSERT( sizeof(FriendGameInfo_t().m_steamIDLobby) >= 8 );

C_ASSERT( sizeof(FriendRichPresenceUpdate_t) >= 12 );
C_ASSERT( offsetof(FriendRichPresenceUpdate_t, m_steamIDFriend) == 0 );
C_ASSERT( sizeof(FriendRichPresenceUpdate_t().m_steamIDFriend) >= 8 );
C_ASSERT( offsetof(FriendRichPresenceUpdate_t, m_nAppID) == 8 );
C_ASSERT( sizeof(FriendRichPresenceUpdate_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(FriendSessionStateInfo_t) >= 8 );
C_ASSERT( offsetof(FriendSessionStateInfo_t, m_uiOnlineSessionInstances) == 0 );
C_ASSERT( sizeof(FriendSessionStateInfo_t().m_uiOnlineSessionInstances) >= 4 );
C_ASSERT( offsetof(FriendSessionStateInfo_t, m_uiPublishedToFriendsSessionInstance) == 4 );
C_ASSERT( sizeof(FriendSessionStateInfo_t().m_uiPublishedToFriendsSessionInstance) >= 1 );

C_ASSERT( sizeof(FriendsEnumerateFollowingList_t) >= 412 );
C_ASSERT( offsetof(FriendsEnumerateFollowingList_t, m_eResult) == 0 );
C_ASSERT( sizeof(FriendsEnumerateFollowingList_t().m_eResult) >= 4 );
C_ASSERT( offsetof(FriendsEnumerateFollowingList_t, m_rgSteamID) == 4 );
C_ASSERT( sizeof(FriendsEnumerateFollowingList_t().m_rgSteamID) >= 400 );
C_ASSERT( offsetof(FriendsEnumerateFollowingList_t, m_nResultsReturned) == 404 );
C_ASSERT( sizeof(FriendsEnumerateFollowingList_t().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(FriendsEnumerateFollowingList_t, m_nTotalResultCount) == 408 );
C_ASSERT( sizeof(FriendsEnumerateFollowingList_t().m_nTotalResultCount) >= 4 );

C_ASSERT( sizeof(FriendsGetFollowerCount_t) >= 16 );
C_ASSERT( offsetof(FriendsGetFollowerCount_t, m_eResult) == 0 );
C_ASSERT( sizeof(FriendsGetFollowerCount_t().m_eResult) >= 4 );
C_ASSERT( offsetof(FriendsGetFollowerCount_t, m_steamID) == 4 );
C_ASSERT( sizeof(FriendsGetFollowerCount_t().m_steamID) >= 8 );
C_ASSERT( offsetof(FriendsGetFollowerCount_t, m_nCount) == 12 );
C_ASSERT( sizeof(FriendsGetFollowerCount_t().m_nCount) >= 4 );

C_ASSERT( sizeof(FriendsIsFollowing_t) >= 16 );
C_ASSERT( offsetof(FriendsIsFollowing_t, m_eResult) == 0 );
C_ASSERT( sizeof(FriendsIsFollowing_t().m_eResult) >= 4 );
C_ASSERT( offsetof(FriendsIsFollowing_t, m_steamID) == 4 );
C_ASSERT( sizeof(FriendsIsFollowing_t().m_steamID) >= 8 );
C_ASSERT( offsetof(FriendsIsFollowing_t, m_bIsFollowing) == 12 );
C_ASSERT( sizeof(FriendsIsFollowing_t().m_bIsFollowing) >= 1 );

C_ASSERT( sizeof(GCMessageAvailable_t) >= 4 );
C_ASSERT( offsetof(GCMessageAvailable_t, m_nMessageSize) == 0 );
C_ASSERT( sizeof(GCMessageAvailable_t().m_nMessageSize) >= 4 );

C_ASSERT( sizeof(GCMessageFailed_t) >= 1 );

C_ASSERT( sizeof(GSClientAchievementStatus_t) >= 144 );
C_ASSERT( offsetof(GSClientAchievementStatus_t, m_SteamID) == 0 );
C_ASSERT( sizeof(GSClientAchievementStatus_t().m_SteamID) >= 8 );
C_ASSERT( offsetof(GSClientAchievementStatus_t, m_pchAchievement) == 8 );
C_ASSERT( sizeof(GSClientAchievementStatus_t().m_pchAchievement) >= 128 );
C_ASSERT( offsetof(GSClientAchievementStatus_t, m_bUnlocked) == 136 );
C_ASSERT( sizeof(GSClientAchievementStatus_t().m_bUnlocked) >= 1 );

C_ASSERT( sizeof(GSClientApprove_t_126) >= 16 );
C_ASSERT( offsetof(GSClientApprove_t_126, m_SteamID) == 0 );
C_ASSERT( sizeof(GSClientApprove_t_126().m_SteamID) >= 8 );
C_ASSERT( offsetof(GSClientApprove_t_126, m_OwnerSteamID) == 8 );
C_ASSERT( sizeof(GSClientApprove_t_126().m_OwnerSteamID) >= 8 );

C_ASSERT( sizeof(GSClientApprove_t_099u) >= 8 );
C_ASSERT( offsetof(GSClientApprove_t_099u, m_SteamID) == 0 );
C_ASSERT( sizeof(GSClientApprove_t_099u().m_SteamID) >= 8 );

C_ASSERT( sizeof(GSClientDeny_t) >= 140 );
C_ASSERT( offsetof(GSClientDeny_t, m_SteamID) == 0 );
C_ASSERT( sizeof(GSClientDeny_t().m_SteamID) >= 8 );
C_ASSERT( offsetof(GSClientDeny_t, m_eDenyReason) == 8 );
C_ASSERT( sizeof(GSClientDeny_t().m_eDenyReason) >= 4 );
C_ASSERT( offsetof(GSClientDeny_t, m_rgchOptionalText) == 12 );
C_ASSERT( sizeof(GSClientDeny_t().m_rgchOptionalText) >= 128 );

C_ASSERT( sizeof(GSClientGroupStatus_t) >= 18 );
C_ASSERT( offsetof(GSClientGroupStatus_t, m_SteamIDUser) == 0 );
C_ASSERT( sizeof(GSClientGroupStatus_t().m_SteamIDUser) >= 8 );
C_ASSERT( offsetof(GSClientGroupStatus_t, m_SteamIDGroup) == 8 );
C_ASSERT( sizeof(GSClientGroupStatus_t().m_SteamIDGroup) >= 8 );
C_ASSERT( offsetof(GSClientGroupStatus_t, m_bMember) == 16 );
C_ASSERT( sizeof(GSClientGroupStatus_t().m_bMember) >= 1 );
C_ASSERT( offsetof(GSClientGroupStatus_t, m_bOfficer) == 17 );
C_ASSERT( sizeof(GSClientGroupStatus_t().m_bOfficer) >= 1 );

C_ASSERT( sizeof(GSClientKick_t) >= 12 );
C_ASSERT( offsetof(GSClientKick_t, m_SteamID) == 0 );
C_ASSERT( sizeof(GSClientKick_t().m_SteamID) >= 8 );
C_ASSERT( offsetof(GSClientKick_t, m_eDenyReason) == 8 );
C_ASSERT( sizeof(GSClientKick_t().m_eDenyReason) >= 4 );

C_ASSERT( sizeof(GSGameplayStats_t) >= 16 );
C_ASSERT( offsetof(GSGameplayStats_t, m_eResult) == 0 );
C_ASSERT( sizeof(GSGameplayStats_t().m_eResult) >= 4 );
C_ASSERT( offsetof(GSGameplayStats_t, m_nRank) == 4 );
C_ASSERT( sizeof(GSGameplayStats_t().m_nRank) >= 4 );
C_ASSERT( offsetof(GSGameplayStats_t, m_unTotalConnects) == 8 );
C_ASSERT( sizeof(GSGameplayStats_t().m_unTotalConnects) >= 4 );
C_ASSERT( offsetof(GSGameplayStats_t, m_unTotalMinutesPlayed) == 12 );
C_ASSERT( sizeof(GSGameplayStats_t().m_unTotalMinutesPlayed) >= 4 );

C_ASSERT( sizeof(GSPolicyResponse_t) >= 1 );
C_ASSERT( offsetof(GSPolicyResponse_t, m_bSecure) == 0 );
C_ASSERT( sizeof(GSPolicyResponse_t().m_bSecure) >= 1 );

C_ASSERT( sizeof(GSStatsReceived_t) >= 12 );
C_ASSERT( offsetof(GSStatsReceived_t, m_eResult) == 0 );
C_ASSERT( sizeof(GSStatsReceived_t().m_eResult) >= 4 );
C_ASSERT( offsetof(GSStatsReceived_t, m_steamIDUser) == 4 );
C_ASSERT( sizeof(GSStatsReceived_t().m_steamIDUser) >= 8 );

C_ASSERT( sizeof(GSStatsStored_t) >= 12 );
C_ASSERT( offsetof(GSStatsStored_t, m_eResult) == 0 );
C_ASSERT( sizeof(GSStatsStored_t().m_eResult) >= 4 );
C_ASSERT( offsetof(GSStatsStored_t, m_steamIDUser) == 4 );
C_ASSERT( sizeof(GSStatsStored_t().m_steamIDUser) >= 8 );

C_ASSERT( sizeof(GSStatsUnloaded_t) >= 8 );
C_ASSERT( offsetof(GSStatsUnloaded_t, m_steamIDUser) == 0 );
C_ASSERT( sizeof(GSStatsUnloaded_t().m_steamIDUser) >= 8 );

C_ASSERT( sizeof(GameConnectedChatJoin_t) >= 16 );
C_ASSERT( offsetof(GameConnectedChatJoin_t, m_steamIDClanChat) == 0 );
C_ASSERT( sizeof(GameConnectedChatJoin_t().m_steamIDClanChat) >= 8 );
C_ASSERT( offsetof(GameConnectedChatJoin_t, m_steamIDUser) == 8 );
C_ASSERT( sizeof(GameConnectedChatJoin_t().m_steamIDUser) >= 8 );

C_ASSERT( sizeof(GameConnectedChatLeave_t) >= 18 );
C_ASSERT( offsetof(GameConnectedChatLeave_t, m_steamIDClanChat) == 0 );
C_ASSERT( sizeof(GameConnectedChatLeave_t().m_steamIDClanChat) >= 8 );
C_ASSERT( offsetof(GameConnectedChatLeave_t, m_steamIDUser) == 8 );
C_ASSERT( sizeof(GameConnectedChatLeave_t().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(GameConnectedChatLeave_t, m_bKicked) == 16 );
C_ASSERT( sizeof(GameConnectedChatLeave_t().m_bKicked) >= 1 );
C_ASSERT( offsetof(GameConnectedChatLeave_t, m_bDropped) == 17 );
C_ASSERT( sizeof(GameConnectedChatLeave_t().m_bDropped) >= 1 );

C_ASSERT( sizeof(GameConnectedClanChatMsg_t) >= 20 );
C_ASSERT( offsetof(GameConnectedClanChatMsg_t, m_steamIDClanChat) == 0 );
C_ASSERT( sizeof(GameConnectedClanChatMsg_t().m_steamIDClanChat) >= 8 );
C_ASSERT( offsetof(GameConnectedClanChatMsg_t, m_steamIDUser) == 8 );
C_ASSERT( sizeof(GameConnectedClanChatMsg_t().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(GameConnectedClanChatMsg_t, m_iMessageID) == 16 );
C_ASSERT( sizeof(GameConnectedClanChatMsg_t().m_iMessageID) >= 4 );

C_ASSERT( sizeof(GameConnectedFriendChatMsg_t) >= 12 );
C_ASSERT( offsetof(GameConnectedFriendChatMsg_t, m_steamIDUser) == 0 );
C_ASSERT( sizeof(GameConnectedFriendChatMsg_t().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(GameConnectedFriendChatMsg_t, m_iMessageID) == 8 );
C_ASSERT( sizeof(GameConnectedFriendChatMsg_t().m_iMessageID) >= 4 );

C_ASSERT( sizeof(GameLobbyJoinRequested_t) >= 16 );
C_ASSERT( offsetof(GameLobbyJoinRequested_t, m_steamIDLobby) == 0 );
C_ASSERT( sizeof(GameLobbyJoinRequested_t().m_steamIDLobby) >= 8 );
C_ASSERT( offsetof(GameLobbyJoinRequested_t, m_steamIDFriend) == 8 );
C_ASSERT( sizeof(GameLobbyJoinRequested_t().m_steamIDFriend) >= 8 );

C_ASSERT( sizeof(GameOverlayActivated_t_158) >= 12 );
C_ASSERT( offsetof(GameOverlayActivated_t_158, m_bActive) == 0 );
C_ASSERT( sizeof(GameOverlayActivated_t_158().m_bActive) >= 1 );
C_ASSERT( offsetof(GameOverlayActivated_t_158, m_bUserInitiated) == 1 );
C_ASSERT( sizeof(GameOverlayActivated_t_158().m_bUserInitiated) >= 1 );
C_ASSERT( offsetof(GameOverlayActivated_t_158, m_nAppID) == 4 );
C_ASSERT( sizeof(GameOverlayActivated_t_158().m_nAppID) >= 4 );
C_ASSERT( offsetof(GameOverlayActivated_t_158, m_dwOverlayPID) == 8 );
C_ASSERT( sizeof(GameOverlayActivated_t_158().m_dwOverlayPID) >= 4 );

C_ASSERT( sizeof(GameOverlayActivated_t_156) >= 8 );
C_ASSERT( offsetof(GameOverlayActivated_t_156, m_bActive) == 0 );
C_ASSERT( sizeof(GameOverlayActivated_t_156().m_bActive) >= 1 );
C_ASSERT( offsetof(GameOverlayActivated_t_156, m_bUserInitiated) == 1 );
C_ASSERT( sizeof(GameOverlayActivated_t_156().m_bUserInitiated) >= 1 );
C_ASSERT( offsetof(GameOverlayActivated_t_156, m_nAppID) == 4 );
C_ASSERT( sizeof(GameOverlayActivated_t_156().m_nAppID) >= 4 );

C_ASSERT( sizeof(GameOverlayActivated_t_099u) >= 1 );
C_ASSERT( offsetof(GameOverlayActivated_t_099u, m_bActive) == 0 );
C_ASSERT( sizeof(GameOverlayActivated_t_099u().m_bActive) >= 1 );

C_ASSERT( sizeof(GameRichPresenceJoinRequested_t) >= 264 );
C_ASSERT( offsetof(GameRichPresenceJoinRequested_t, m_steamIDFriend) == 0 );
C_ASSERT( sizeof(GameRichPresenceJoinRequested_t().m_steamIDFriend) >= 8 );
C_ASSERT( offsetof(GameRichPresenceJoinRequested_t, m_rgchConnect) == 8 );
C_ASSERT( sizeof(GameRichPresenceJoinRequested_t().m_rgchConnect) >= 256 );

C_ASSERT( sizeof(GameServerChangeRequested_t) >= 128 );
C_ASSERT( offsetof(GameServerChangeRequested_t, m_rgchServer) == 0 );
C_ASSERT( sizeof(GameServerChangeRequested_t().m_rgchServer) >= 64 );
C_ASSERT( offsetof(GameServerChangeRequested_t, m_rgchPassword) == 64 );
C_ASSERT( sizeof(GameServerChangeRequested_t().m_rgchPassword) >= 64 );

C_ASSERT( sizeof(GameStatsSessionClosed_t) >= 16 );
C_ASSERT( offsetof(GameStatsSessionClosed_t, m_ulSessionID) == 0 );
C_ASSERT( sizeof(GameStatsSessionClosed_t().m_ulSessionID) >= 8 );
C_ASSERT( offsetof(GameStatsSessionClosed_t, m_eResult) == 8 );
C_ASSERT( sizeof(GameStatsSessionClosed_t().m_eResult) >= 4 );

C_ASSERT( sizeof(GameStatsSessionIssued_t) >= 16 );
C_ASSERT( offsetof(GameStatsSessionIssued_t, m_ulSessionID) == 0 );
C_ASSERT( sizeof(GameStatsSessionIssued_t().m_ulSessionID) >= 8 );
C_ASSERT( offsetof(GameStatsSessionIssued_t, m_eResult) == 8 );
C_ASSERT( sizeof(GameStatsSessionIssued_t().m_eResult) >= 4 );
C_ASSERT( offsetof(GameStatsSessionIssued_t, m_bCollectingAny) == 12 );
C_ASSERT( sizeof(GameStatsSessionIssued_t().m_bCollectingAny) >= 1 );
C_ASSERT( offsetof(GameStatsSessionIssued_t, m_bCollectingDetails) == 13 );
C_ASSERT( sizeof(GameStatsSessionIssued_t().m_bCollectingDetails) >= 1 );

C_ASSERT( sizeof(GameWebCallback_t) >= 256 );
C_ASSERT( offsetof(GameWebCallback_t, m_szURL) == 0 );
C_ASSERT( sizeof(GameWebCallback_t().m_szURL) >= 256 );

C_ASSERT( sizeof(GamepadTextInputDismissed_t_156) >= 12 );
C_ASSERT( offsetof(GamepadTextInputDismissed_t_156, m_bSubmitted) == 0 );
C_ASSERT( sizeof(GamepadTextInputDismissed_t_156().m_bSubmitted) >= 1 );
C_ASSERT( offsetof(GamepadTextInputDismissed_t_156, m_unSubmittedText) == 4 );
C_ASSERT( sizeof(GamepadTextInputDismissed_t_156().m_unSubmittedText) >= 4 );
C_ASSERT( offsetof(GamepadTextInputDismissed_t_156, m_unAppID) == 8 );
C_ASSERT( sizeof(GamepadTextInputDismissed_t_156().m_unAppID) >= 4 );

C_ASSERT( sizeof(GamepadTextInputDismissed_t_121) >= 8 );
C_ASSERT( offsetof(GamepadTextInputDismissed_t_121, m_bSubmitted) == 0 );
C_ASSERT( sizeof(GamepadTextInputDismissed_t_121().m_bSubmitted) >= 1 );
C_ASSERT( offsetof(GamepadTextInputDismissed_t_121, m_unSubmittedText) == 4 );
C_ASSERT( sizeof(GamepadTextInputDismissed_t_121().m_unSubmittedText) >= 4 );

C_ASSERT( sizeof(GetAuthSessionTicketResponse_t) >= 8 );
C_ASSERT( offsetof(GetAuthSessionTicketResponse_t, m_hAuthTicket) == 0 );
C_ASSERT( sizeof(GetAuthSessionTicketResponse_t().m_hAuthTicket) >= 4 );
C_ASSERT( offsetof(GetAuthSessionTicketResponse_t, m_eResult) == 4 );
C_ASSERT( sizeof(GetAuthSessionTicketResponse_t().m_eResult) >= 4 );

C_ASSERT( sizeof(GetOPFSettingsResult_t) >= 8 );
C_ASSERT( offsetof(GetOPFSettingsResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(GetOPFSettingsResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(GetOPFSettingsResult_t, m_unVideoAppID) == 4 );
C_ASSERT( sizeof(GetOPFSettingsResult_t().m_unVideoAppID) >= 4 );

C_ASSERT( sizeof(GetTicketForWebApiResponse_t) >= 2572 );
C_ASSERT( offsetof(GetTicketForWebApiResponse_t, m_hAuthTicket) == 0 );
C_ASSERT( sizeof(GetTicketForWebApiResponse_t().m_hAuthTicket) >= 4 );
C_ASSERT( offsetof(GetTicketForWebApiResponse_t, m_eResult) == 4 );
C_ASSERT( sizeof(GetTicketForWebApiResponse_t().m_eResult) >= 4 );
C_ASSERT( offsetof(GetTicketForWebApiResponse_t, m_cubTicket) == 8 );
C_ASSERT( sizeof(GetTicketForWebApiResponse_t().m_cubTicket) >= 4 );
C_ASSERT( offsetof(GetTicketForWebApiResponse_t, m_rgubTicket) == 12 );
C_ASSERT( sizeof(GetTicketForWebApiResponse_t().m_rgubTicket) >= 2560 );

C_ASSERT( sizeof(GetUserItemVoteResult_t) >= 16 );
C_ASSERT( offsetof(GetUserItemVoteResult_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(GetUserItemVoteResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(GetUserItemVoteResult_t, m_eResult) == 8 );
C_ASSERT( sizeof(GetUserItemVoteResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(GetUserItemVoteResult_t, m_bVotedUp) == 12 );
C_ASSERT( sizeof(GetUserItemVoteResult_t().m_bVotedUp) >= 1 );
C_ASSERT( offsetof(GetUserItemVoteResult_t, m_bVotedDown) == 13 );
C_ASSERT( sizeof(GetUserItemVoteResult_t().m_bVotedDown) >= 1 );
C_ASSERT( offsetof(GetUserItemVoteResult_t, m_bVoteSkipped) == 14 );
C_ASSERT( sizeof(GetUserItemVoteResult_t().m_bVoteSkipped) >= 1 );

C_ASSERT( sizeof(GetVideoURLResult_t) >= 264 );
C_ASSERT( offsetof(GetVideoURLResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(GetVideoURLResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(GetVideoURLResult_t, m_unVideoAppID) == 4 );
C_ASSERT( sizeof(GetVideoURLResult_t().m_unVideoAppID) >= 4 );
C_ASSERT( offsetof(GetVideoURLResult_t, m_rgchURL) == 8 );
C_ASSERT( sizeof(GetVideoURLResult_t().m_rgchURL) >= 256 );

C_ASSERT( sizeof(GlobalAchievementPercentagesReady_t) >= 16 );
C_ASSERT( offsetof(GlobalAchievementPercentagesReady_t, m_nGameID) == 0 );
C_ASSERT( sizeof(GlobalAchievementPercentagesReady_t().m_nGameID) >= 8 );
C_ASSERT( offsetof(GlobalAchievementPercentagesReady_t, m_eResult) == 8 );
C_ASSERT( sizeof(GlobalAchievementPercentagesReady_t().m_eResult) >= 4 );

C_ASSERT( sizeof(GlobalStatsReceived_t) >= 16 );
C_ASSERT( offsetof(GlobalStatsReceived_t, m_nGameID) == 0 );
C_ASSERT( sizeof(GlobalStatsReceived_t().m_nGameID) >= 8 );
C_ASSERT( offsetof(GlobalStatsReceived_t, m_eResult) == 8 );
C_ASSERT( sizeof(GlobalStatsReceived_t().m_eResult) >= 4 );

C_ASSERT( sizeof(HTML_BrowserReady_t) >= 4 );
C_ASSERT( offsetof(HTML_BrowserReady_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_BrowserReady_t().unBrowserHandle) >= 4 );

C_ASSERT( sizeof(HTML_BrowserRestarted_t) >= 8 );
C_ASSERT( offsetof(HTML_BrowserRestarted_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_BrowserRestarted_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(HTML_BrowserRestarted_t, unOldBrowserHandle) == 4 );
C_ASSERT( sizeof(HTML_BrowserRestarted_t().unOldBrowserHandle) >= 4 );

C_ASSERT( sizeof(HTML_CanGoBackAndForward_t) >= 8 );
C_ASSERT( offsetof(HTML_CanGoBackAndForward_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_CanGoBackAndForward_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(HTML_CanGoBackAndForward_t, bCanGoBack) == 4 );
C_ASSERT( sizeof(HTML_CanGoBackAndForward_t().bCanGoBack) >= 1 );
C_ASSERT( offsetof(HTML_CanGoBackAndForward_t, bCanGoForward) == 5 );
C_ASSERT( sizeof(HTML_CanGoBackAndForward_t().bCanGoForward) >= 1 );

C_ASSERT( sizeof(HTML_CloseBrowser_t) >= 4 );
C_ASSERT( offsetof(HTML_CloseBrowser_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_CloseBrowser_t().unBrowserHandle) >= 4 );

C_ASSERT( sizeof(HTML_HidePopup_t) >= 4 );
C_ASSERT( offsetof(HTML_HidePopup_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_HidePopup_t().unBrowserHandle) >= 4 );

C_ASSERT( sizeof(HTML_HideToolTip_t) >= 4 );
C_ASSERT( offsetof(HTML_HideToolTip_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_HideToolTip_t().unBrowserHandle) >= 4 );

C_ASSERT( sizeof(HTML_HorizontalScroll_t) >= 24 );
C_ASSERT( offsetof(HTML_HorizontalScroll_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_HorizontalScroll_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(HTML_HorizontalScroll_t, unScrollMax) == 4 );
C_ASSERT( sizeof(HTML_HorizontalScroll_t().unScrollMax) >= 4 );
C_ASSERT( offsetof(HTML_HorizontalScroll_t, unScrollCurrent) == 8 );
C_ASSERT( sizeof(HTML_HorizontalScroll_t().unScrollCurrent) >= 4 );
C_ASSERT( offsetof(HTML_HorizontalScroll_t, flPageScale) == 12 );
C_ASSERT( sizeof(HTML_HorizontalScroll_t().flPageScale) >= 4 );
C_ASSERT( offsetof(HTML_HorizontalScroll_t, bVisible) == 16 );
C_ASSERT( sizeof(HTML_HorizontalScroll_t().bVisible) >= 1 );
C_ASSERT( offsetof(HTML_HorizontalScroll_t, unPageSize) == 20 );
C_ASSERT( sizeof(HTML_HorizontalScroll_t().unPageSize) >= 4 );

C_ASSERT( sizeof(HTML_SearchResults_t) >= 12 );
C_ASSERT( offsetof(HTML_SearchResults_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_SearchResults_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(HTML_SearchResults_t, unResults) == 4 );
C_ASSERT( sizeof(HTML_SearchResults_t().unResults) >= 4 );
C_ASSERT( offsetof(HTML_SearchResults_t, unCurrentMatch) == 8 );
C_ASSERT( sizeof(HTML_SearchResults_t().unCurrentMatch) >= 4 );

C_ASSERT( sizeof(HTML_SetCursor_t) >= 8 );
C_ASSERT( offsetof(HTML_SetCursor_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_SetCursor_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(HTML_SetCursor_t, eMouseCursor) == 4 );
C_ASSERT( sizeof(HTML_SetCursor_t().eMouseCursor) >= 4 );

C_ASSERT( sizeof(HTML_ShowPopup_t) >= 4 );
C_ASSERT( offsetof(HTML_ShowPopup_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_ShowPopup_t().unBrowserHandle) >= 4 );

C_ASSERT( sizeof(HTML_SizePopup_t) >= 20 );
C_ASSERT( offsetof(HTML_SizePopup_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_SizePopup_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(HTML_SizePopup_t, unX) == 4 );
C_ASSERT( sizeof(HTML_SizePopup_t().unX) >= 4 );
C_ASSERT( offsetof(HTML_SizePopup_t, unY) == 8 );
C_ASSERT( sizeof(HTML_SizePopup_t().unY) >= 4 );
C_ASSERT( offsetof(HTML_SizePopup_t, unWide) == 12 );
C_ASSERT( sizeof(HTML_SizePopup_t().unWide) >= 4 );
C_ASSERT( offsetof(HTML_SizePopup_t, unTall) == 16 );
C_ASSERT( sizeof(HTML_SizePopup_t().unTall) >= 4 );

C_ASSERT( sizeof(HTML_VerticalScroll_t) >= 24 );
C_ASSERT( offsetof(HTML_VerticalScroll_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(HTML_VerticalScroll_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(HTML_VerticalScroll_t, unScrollMax) == 4 );
C_ASSERT( sizeof(HTML_VerticalScroll_t().unScrollMax) >= 4 );
C_ASSERT( offsetof(HTML_VerticalScroll_t, unScrollCurrent) == 8 );
C_ASSERT( sizeof(HTML_VerticalScroll_t().unScrollCurrent) >= 4 );
C_ASSERT( offsetof(HTML_VerticalScroll_t, flPageScale) == 12 );
C_ASSERT( sizeof(HTML_VerticalScroll_t().flPageScale) >= 4 );
C_ASSERT( offsetof(HTML_VerticalScroll_t, bVisible) == 16 );
C_ASSERT( sizeof(HTML_VerticalScroll_t().bVisible) >= 1 );
C_ASSERT( offsetof(HTML_VerticalScroll_t, unPageSize) == 20 );
C_ASSERT( sizeof(HTML_VerticalScroll_t().unPageSize) >= 4 );

C_ASSERT( sizeof(IPCFailure_t) >= 1 );
C_ASSERT( offsetof(IPCFailure_t, m_eFailureType) == 0 );
C_ASSERT( sizeof(IPCFailure_t().m_eFailureType) >= 1 );

C_ASSERT( sizeof(IPCountry_t) >= 1 );

C_ASSERT( sizeof(InputAnalogActionData_t) >= 13 );
C_ASSERT( offsetof(InputAnalogActionData_t, eMode) == 0 );
C_ASSERT( sizeof(InputAnalogActionData_t().eMode) >= 4 );
C_ASSERT( offsetof(InputAnalogActionData_t, x) == 4 );
C_ASSERT( sizeof(InputAnalogActionData_t().x) >= 4 );
C_ASSERT( offsetof(InputAnalogActionData_t, y) == 8 );
C_ASSERT( sizeof(InputAnalogActionData_t().y) >= 4 );
C_ASSERT( offsetof(InputAnalogActionData_t, bActive) == 12 );
C_ASSERT( sizeof(InputAnalogActionData_t().bActive) >= 1 );

C_ASSERT( sizeof(InputDigitalActionData_t) >= 2 );
C_ASSERT( offsetof(InputDigitalActionData_t, bState) == 0 );
C_ASSERT( sizeof(InputDigitalActionData_t().bState) >= 1 );
C_ASSERT( offsetof(InputDigitalActionData_t, bActive) == 1 );
C_ASSERT( sizeof(InputDigitalActionData_t().bActive) >= 1 );

C_ASSERT( sizeof(InputMotionDataV2_t) >= 72 );
C_ASSERT( offsetof(InputMotionDataV2_t, driftCorrectedQuatX) == 0 );
C_ASSERT( sizeof(InputMotionDataV2_t().driftCorrectedQuatX) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, driftCorrectedQuatY) == 4 );
C_ASSERT( sizeof(InputMotionDataV2_t().driftCorrectedQuatY) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, driftCorrectedQuatZ) == 8 );
C_ASSERT( sizeof(InputMotionDataV2_t().driftCorrectedQuatZ) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, driftCorrectedQuatW) == 12 );
C_ASSERT( sizeof(InputMotionDataV2_t().driftCorrectedQuatW) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, sensorFusionQuatX) == 16 );
C_ASSERT( sizeof(InputMotionDataV2_t().sensorFusionQuatX) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, sensorFusionQuatY) == 20 );
C_ASSERT( sizeof(InputMotionDataV2_t().sensorFusionQuatY) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, sensorFusionQuatZ) == 24 );
C_ASSERT( sizeof(InputMotionDataV2_t().sensorFusionQuatZ) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, sensorFusionQuatW) == 28 );
C_ASSERT( sizeof(InputMotionDataV2_t().sensorFusionQuatW) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, deferredSensorFusionQuatX) == 32 );
C_ASSERT( sizeof(InputMotionDataV2_t().deferredSensorFusionQuatX) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, deferredSensorFusionQuatY) == 36 );
C_ASSERT( sizeof(InputMotionDataV2_t().deferredSensorFusionQuatY) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, deferredSensorFusionQuatZ) == 40 );
C_ASSERT( sizeof(InputMotionDataV2_t().deferredSensorFusionQuatZ) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, deferredSensorFusionQuatW) == 44 );
C_ASSERT( sizeof(InputMotionDataV2_t().deferredSensorFusionQuatW) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, gravityX) == 48 );
C_ASSERT( sizeof(InputMotionDataV2_t().gravityX) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, gravityY) == 52 );
C_ASSERT( sizeof(InputMotionDataV2_t().gravityY) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, gravityZ) == 56 );
C_ASSERT( sizeof(InputMotionDataV2_t().gravityZ) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, degreesPerSecondX) == 60 );
C_ASSERT( sizeof(InputMotionDataV2_t().degreesPerSecondX) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, degreesPerSecondY) == 64 );
C_ASSERT( sizeof(InputMotionDataV2_t().degreesPerSecondY) >= 4 );
C_ASSERT( offsetof(InputMotionDataV2_t, degreesPerSecondZ) == 68 );
C_ASSERT( sizeof(InputMotionDataV2_t().degreesPerSecondZ) >= 4 );

C_ASSERT( sizeof(InputMotionData_t) >= 40 );
C_ASSERT( offsetof(InputMotionData_t, rotQuatX) == 0 );
C_ASSERT( sizeof(InputMotionData_t().rotQuatX) >= 4 );
C_ASSERT( offsetof(InputMotionData_t, rotQuatY) == 4 );
C_ASSERT( sizeof(InputMotionData_t().rotQuatY) >= 4 );
C_ASSERT( offsetof(InputMotionData_t, rotQuatZ) == 8 );
C_ASSERT( sizeof(InputMotionData_t().rotQuatZ) >= 4 );
C_ASSERT( offsetof(InputMotionData_t, rotQuatW) == 12 );
C_ASSERT( sizeof(InputMotionData_t().rotQuatW) >= 4 );
C_ASSERT( offsetof(InputMotionData_t, posAccelX) == 16 );
C_ASSERT( sizeof(InputMotionData_t().posAccelX) >= 4 );
C_ASSERT( offsetof(InputMotionData_t, posAccelY) == 20 );
C_ASSERT( sizeof(InputMotionData_t().posAccelY) >= 4 );
C_ASSERT( offsetof(InputMotionData_t, posAccelZ) == 24 );
C_ASSERT( sizeof(InputMotionData_t().posAccelZ) >= 4 );
C_ASSERT( offsetof(InputMotionData_t, rotVelX) == 28 );
C_ASSERT( sizeof(InputMotionData_t().rotVelX) >= 4 );
C_ASSERT( offsetof(InputMotionData_t, rotVelY) == 32 );
C_ASSERT( sizeof(InputMotionData_t().rotVelY) >= 4 );
C_ASSERT( offsetof(InputMotionData_t, rotVelZ) == 36 );
C_ASSERT( sizeof(InputMotionData_t().rotVelZ) >= 4 );

C_ASSERT( sizeof(JoinClanChatRoomCompletionResult_t) >= 12 );
C_ASSERT( offsetof(JoinClanChatRoomCompletionResult_t, m_steamIDClanChat) == 0 );
C_ASSERT( sizeof(JoinClanChatRoomCompletionResult_t().m_steamIDClanChat) >= 8 );
C_ASSERT( offsetof(JoinClanChatRoomCompletionResult_t, m_eChatRoomEnterResponse) == 8 );
C_ASSERT( sizeof(JoinClanChatRoomCompletionResult_t().m_eChatRoomEnterResponse) >= 4 );

C_ASSERT( sizeof(LeaderboardFindResult_t) >= 16 );
C_ASSERT( offsetof(LeaderboardFindResult_t, m_hSteamLeaderboard) == 0 );
C_ASSERT( sizeof(LeaderboardFindResult_t().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(LeaderboardFindResult_t, m_bLeaderboardFound) == 8 );
C_ASSERT( sizeof(LeaderboardFindResult_t().m_bLeaderboardFound) >= 1 );

C_ASSERT( sizeof(LeaderboardScoresDownloaded_t) >= 24 );
C_ASSERT( offsetof(LeaderboardScoresDownloaded_t, m_hSteamLeaderboard) == 0 );
C_ASSERT( sizeof(LeaderboardScoresDownloaded_t().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(LeaderboardScoresDownloaded_t, m_hSteamLeaderboardEntries) == 8 );
C_ASSERT( sizeof(LeaderboardScoresDownloaded_t().m_hSteamLeaderboardEntries) >= 8 );
C_ASSERT( offsetof(LeaderboardScoresDownloaded_t, m_cEntryCount) == 16 );
C_ASSERT( sizeof(LeaderboardScoresDownloaded_t().m_cEntryCount) >= 4 );

C_ASSERT( sizeof(LicensesUpdated_t) >= 1 );

C_ASSERT( sizeof(LobbyChatMsg_t) >= 24 );
C_ASSERT( offsetof(LobbyChatMsg_t, m_ulSteamIDLobby) == 0 );
C_ASSERT( sizeof(LobbyChatMsg_t().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(LobbyChatMsg_t, m_ulSteamIDUser) == 8 );
C_ASSERT( sizeof(LobbyChatMsg_t().m_ulSteamIDUser) >= 8 );
C_ASSERT( offsetof(LobbyChatMsg_t, m_eChatEntryType) == 16 );
C_ASSERT( sizeof(LobbyChatMsg_t().m_eChatEntryType) >= 1 );
C_ASSERT( offsetof(LobbyChatMsg_t, m_iChatID) == 20 );
C_ASSERT( sizeof(LobbyChatMsg_t().m_iChatID) >= 4 );

C_ASSERT( sizeof(LobbyChatUpdate_t) >= 32 );
C_ASSERT( offsetof(LobbyChatUpdate_t, m_ulSteamIDLobby) == 0 );
C_ASSERT( sizeof(LobbyChatUpdate_t().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(LobbyChatUpdate_t, m_ulSteamIDUserChanged) == 8 );
C_ASSERT( sizeof(LobbyChatUpdate_t().m_ulSteamIDUserChanged) >= 8 );
C_ASSERT( offsetof(LobbyChatUpdate_t, m_ulSteamIDMakingChange) == 16 );
C_ASSERT( sizeof(LobbyChatUpdate_t().m_ulSteamIDMakingChange) >= 8 );
C_ASSERT( offsetof(LobbyChatUpdate_t, m_rgfChatMemberStateChange) == 24 );
C_ASSERT( sizeof(LobbyChatUpdate_t().m_rgfChatMemberStateChange) >= 4 );

C_ASSERT( sizeof(LobbyClosing_t) >= 8 );
C_ASSERT( offsetof(LobbyClosing_t, m_ulSteamIDLobby) == 0 );
C_ASSERT( sizeof(LobbyClosing_t().m_ulSteamIDLobby) >= 8 );

C_ASSERT( sizeof(LobbyDataUpdate_t_111x) >= 24 );
C_ASSERT( offsetof(LobbyDataUpdate_t_111x, m_ulSteamIDLobby) == 0 );
C_ASSERT( sizeof(LobbyDataUpdate_t_111x().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(LobbyDataUpdate_t_111x, m_ulSteamIDMember) == 8 );
C_ASSERT( sizeof(LobbyDataUpdate_t_111x().m_ulSteamIDMember) >= 8 );
C_ASSERT( offsetof(LobbyDataUpdate_t_111x, m_bSuccess) == 16 );
C_ASSERT( sizeof(LobbyDataUpdate_t_111x().m_bSuccess) >= 1 );

C_ASSERT( sizeof(LobbyDataUpdate_t_099u) >= 16 );
C_ASSERT( offsetof(LobbyDataUpdate_t_099u, m_ulSteamIDLobby) == 0 );
C_ASSERT( sizeof(LobbyDataUpdate_t_099u().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(LobbyDataUpdate_t_099u, m_ulSteamIDMember) == 8 );
C_ASSERT( sizeof(LobbyDataUpdate_t_099u().m_ulSteamIDMember) >= 8 );

C_ASSERT( sizeof(LobbyEnter_t) >= 24 );
C_ASSERT( offsetof(LobbyEnter_t, m_ulSteamIDLobby) == 0 );
C_ASSERT( sizeof(LobbyEnter_t().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(LobbyEnter_t, m_rgfChatPermissions) == 8 );
C_ASSERT( sizeof(LobbyEnter_t().m_rgfChatPermissions) >= 4 );
C_ASSERT( offsetof(LobbyEnter_t, m_bLocked) == 12 );
C_ASSERT( sizeof(LobbyEnter_t().m_bLocked) >= 1 );
C_ASSERT( offsetof(LobbyEnter_t, m_EChatRoomEnterResponse) == 16 );
C_ASSERT( sizeof(LobbyEnter_t().m_EChatRoomEnterResponse) >= 4 );

C_ASSERT( sizeof(LobbyGameCreated_t) >= 24 );
C_ASSERT( offsetof(LobbyGameCreated_t, m_ulSteamIDLobby) == 0 );
C_ASSERT( sizeof(LobbyGameCreated_t().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(LobbyGameCreated_t, m_ulSteamIDGameServer) == 8 );
C_ASSERT( sizeof(LobbyGameCreated_t().m_ulSteamIDGameServer) >= 8 );
C_ASSERT( offsetof(LobbyGameCreated_t, m_unIP) == 16 );
C_ASSERT( sizeof(LobbyGameCreated_t().m_unIP) >= 4 );
C_ASSERT( offsetof(LobbyGameCreated_t, m_usPort) == 20 );
C_ASSERT( sizeof(LobbyGameCreated_t().m_usPort) >= 2 );

C_ASSERT( sizeof(LobbyInvite_t_112x) >= 24 );
C_ASSERT( offsetof(LobbyInvite_t_112x, m_ulSteamIDUser) == 0 );
C_ASSERT( sizeof(LobbyInvite_t_112x().m_ulSteamIDUser) >= 8 );
C_ASSERT( offsetof(LobbyInvite_t_112x, m_ulSteamIDLobby) == 8 );
C_ASSERT( sizeof(LobbyInvite_t_112x().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(LobbyInvite_t_112x, m_ulGameID) == 16 );
C_ASSERT( sizeof(LobbyInvite_t_112x().m_ulGameID) >= 8 );

C_ASSERT( sizeof(LobbyInvite_t_099u) >= 16 );
C_ASSERT( offsetof(LobbyInvite_t_099u, m_ulSteamIDUser) == 0 );
C_ASSERT( sizeof(LobbyInvite_t_099u().m_ulSteamIDUser) >= 8 );
C_ASSERT( offsetof(LobbyInvite_t_099u, m_ulSteamIDLobby) == 8 );
C_ASSERT( sizeof(LobbyInvite_t_099u().m_ulSteamIDLobby) >= 8 );

C_ASSERT( sizeof(LobbyKicked_t_106) >= 24 );
C_ASSERT( offsetof(LobbyKicked_t_106, m_ulSteamIDLobby) == 0 );
C_ASSERT( sizeof(LobbyKicked_t_106().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(LobbyKicked_t_106, m_ulSteamIDAdmin) == 8 );
C_ASSERT( sizeof(LobbyKicked_t_106().m_ulSteamIDAdmin) >= 8 );
C_ASSERT( offsetof(LobbyKicked_t_106, m_bKickedDueToDisconnect) == 16 );
C_ASSERT( sizeof(LobbyKicked_t_106().m_bKickedDueToDisconnect) >= 1 );

C_ASSERT( sizeof(LobbyKicked_t_099u) >= 16 );
C_ASSERT( offsetof(LobbyKicked_t_099u, m_ulSteamIDLobby) == 0 );
C_ASSERT( sizeof(LobbyKicked_t_099u().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(LobbyKicked_t_099u, m_ulSteamIDAdmin) == 8 );
C_ASSERT( sizeof(LobbyKicked_t_099u().m_ulSteamIDAdmin) >= 8 );

C_ASSERT( sizeof(LobbyMatchList_t) >= 4 );
C_ASSERT( offsetof(LobbyMatchList_t, m_nLobbiesMatching) == 0 );
C_ASSERT( sizeof(LobbyMatchList_t().m_nLobbiesMatching) >= 4 );

C_ASSERT( sizeof(LowBatteryPower_t) >= 1 );
C_ASSERT( offsetof(LowBatteryPower_t, m_nMinutesBatteryLeft) == 0 );
C_ASSERT( sizeof(LowBatteryPower_t().m_nMinutesBatteryLeft) >= 1 );

C_ASSERT( sizeof(MarketEligibilityResponse_t) >= 20 );
C_ASSERT( offsetof(MarketEligibilityResponse_t, m_bAllowed) == 0 );
C_ASSERT( sizeof(MarketEligibilityResponse_t().m_bAllowed) >= 1 );
C_ASSERT( offsetof(MarketEligibilityResponse_t, m_eNotAllowedReason) == 4 );
C_ASSERT( sizeof(MarketEligibilityResponse_t().m_eNotAllowedReason) >= 4 );
C_ASSERT( offsetof(MarketEligibilityResponse_t, m_rtAllowedAtTime) == 8 );
C_ASSERT( sizeof(MarketEligibilityResponse_t().m_rtAllowedAtTime) >= 4 );
C_ASSERT( offsetof(MarketEligibilityResponse_t, m_cdaySteamGuardRequiredDays) == 12 );
C_ASSERT( sizeof(MarketEligibilityResponse_t().m_cdaySteamGuardRequiredDays) >= 4 );
C_ASSERT( offsetof(MarketEligibilityResponse_t, m_cdayNewDeviceCooldown) == 16 );
C_ASSERT( sizeof(MarketEligibilityResponse_t().m_cdayNewDeviceCooldown) >= 4 );

C_ASSERT( sizeof(MatchMakingKeyValuePair_t) >= 512 );
C_ASSERT( offsetof(MatchMakingKeyValuePair_t, m_szKey) == 0 );
C_ASSERT( sizeof(MatchMakingKeyValuePair_t().m_szKey) >= 256 );
C_ASSERT( offsetof(MatchMakingKeyValuePair_t, m_szValue) == 256 );
C_ASSERT( sizeof(MatchMakingKeyValuePair_t().m_szValue) >= 256 );

C_ASSERT( sizeof(MusicPlayerRemoteToFront_t) >= 1 );

C_ASSERT( sizeof(MusicPlayerRemoteWillActivate_t) >= 1 );

C_ASSERT( sizeof(MusicPlayerRemoteWillDeactivate_t) >= 1 );

C_ASSERT( sizeof(MusicPlayerSelectsPlaylistEntry_t) >= 4 );
C_ASSERT( offsetof(MusicPlayerSelectsPlaylistEntry_t, nID) == 0 );
C_ASSERT( sizeof(MusicPlayerSelectsPlaylistEntry_t().nID) >= 4 );

C_ASSERT( sizeof(MusicPlayerSelectsQueueEntry_t) >= 4 );
C_ASSERT( offsetof(MusicPlayerSelectsQueueEntry_t, nID) == 0 );
C_ASSERT( sizeof(MusicPlayerSelectsQueueEntry_t().nID) >= 4 );

C_ASSERT( sizeof(MusicPlayerWantsLooped_t) >= 1 );
C_ASSERT( offsetof(MusicPlayerWantsLooped_t, m_bLooped) == 0 );
C_ASSERT( sizeof(MusicPlayerWantsLooped_t().m_bLooped) >= 1 );

C_ASSERT( sizeof(MusicPlayerWantsPause_t) >= 1 );

C_ASSERT( sizeof(MusicPlayerWantsPlayNext_t) >= 1 );

C_ASSERT( sizeof(MusicPlayerWantsPlayPrevious_t) >= 1 );

C_ASSERT( sizeof(MusicPlayerWantsPlay_t) >= 1 );

C_ASSERT( sizeof(MusicPlayerWantsPlayingRepeatStatus_t) >= 4 );
C_ASSERT( offsetof(MusicPlayerWantsPlayingRepeatStatus_t, m_nPlayingRepeatStatus) == 0 );
C_ASSERT( sizeof(MusicPlayerWantsPlayingRepeatStatus_t().m_nPlayingRepeatStatus) >= 4 );

C_ASSERT( sizeof(MusicPlayerWantsShuffled_t) >= 1 );
C_ASSERT( offsetof(MusicPlayerWantsShuffled_t, m_bShuffled) == 0 );
C_ASSERT( sizeof(MusicPlayerWantsShuffled_t().m_bShuffled) >= 1 );

C_ASSERT( sizeof(MusicPlayerWantsVolume_t) >= 4 );
C_ASSERT( offsetof(MusicPlayerWantsVolume_t, m_flNewVolume) == 0 );
C_ASSERT( sizeof(MusicPlayerWantsVolume_t().m_flNewVolume) >= 4 );

C_ASSERT( sizeof(MusicPlayerWillQuit_t) >= 1 );

C_ASSERT( sizeof(NameHistoryResponse_t) >= 8 );
C_ASSERT( offsetof(NameHistoryResponse_t, m_cSuccessfulLookups) == 0 );
C_ASSERT( sizeof(NameHistoryResponse_t().m_cSuccessfulLookups) >= 4 );
C_ASSERT( offsetof(NameHistoryResponse_t, m_cFailedLookups) == 4 );
C_ASSERT( sizeof(NameHistoryResponse_t().m_cFailedLookups) >= 4 );

C_ASSERT( sizeof(NewLaunchQueryParameters_t) >= 1 );

C_ASSERT( sizeof(NewUrlLaunchParameters_t) >= 1 );

C_ASSERT( sizeof(NumberOfCurrentPlayers_t) >= 8 );
C_ASSERT( offsetof(NumberOfCurrentPlayers_t, m_bSuccess) == 0 );
C_ASSERT( sizeof(NumberOfCurrentPlayers_t().m_bSuccess) >= 1 );
C_ASSERT( offsetof(NumberOfCurrentPlayers_t, m_cPlayers) == 4 );
C_ASSERT( sizeof(NumberOfCurrentPlayers_t().m_cPlayers) >= 4 );

C_ASSERT( sizeof(OverlayBrowserProtocolNavigation_t) >= 1024 );
C_ASSERT( offsetof(OverlayBrowserProtocolNavigation_t, rgchURI) == 0 );
C_ASSERT( sizeof(OverlayBrowserProtocolNavigation_t().rgchURI) >= 1024 );

C_ASSERT( sizeof(P2PSessionConnectFail_t) >= 9 );
C_ASSERT( offsetof(P2PSessionConnectFail_t, m_steamIDRemote) == 0 );
C_ASSERT( sizeof(P2PSessionConnectFail_t().m_steamIDRemote) >= 8 );
C_ASSERT( offsetof(P2PSessionConnectFail_t, m_eP2PSessionError) == 8 );
C_ASSERT( sizeof(P2PSessionConnectFail_t().m_eP2PSessionError) >= 1 );

C_ASSERT( sizeof(P2PSessionRequest_t) >= 8 );
C_ASSERT( offsetof(P2PSessionRequest_t, m_steamIDRemote) == 0 );
C_ASSERT( sizeof(P2PSessionRequest_t().m_steamIDRemote) >= 8 );

C_ASSERT( sizeof(P2PSessionState_t) >= 20 );
C_ASSERT( offsetof(P2PSessionState_t, m_bConnectionActive) == 0 );
C_ASSERT( sizeof(P2PSessionState_t().m_bConnectionActive) >= 1 );
C_ASSERT( offsetof(P2PSessionState_t, m_bConnecting) == 1 );
C_ASSERT( sizeof(P2PSessionState_t().m_bConnecting) >= 1 );
C_ASSERT( offsetof(P2PSessionState_t, m_eP2PSessionError) == 2 );
C_ASSERT( sizeof(P2PSessionState_t().m_eP2PSessionError) >= 1 );
C_ASSERT( offsetof(P2PSessionState_t, m_bUsingRelay) == 3 );
C_ASSERT( sizeof(P2PSessionState_t().m_bUsingRelay) >= 1 );
C_ASSERT( offsetof(P2PSessionState_t, m_nBytesQueuedForSend) == 4 );
C_ASSERT( sizeof(P2PSessionState_t().m_nBytesQueuedForSend) >= 4 );
C_ASSERT( offsetof(P2PSessionState_t, m_nPacketsQueuedForSend) == 8 );
C_ASSERT( sizeof(P2PSessionState_t().m_nPacketsQueuedForSend) >= 4 );
C_ASSERT( offsetof(P2PSessionState_t, m_nRemoteIP) == 12 );
C_ASSERT( sizeof(P2PSessionState_t().m_nRemoteIP) >= 4 );
C_ASSERT( offsetof(P2PSessionState_t, m_nRemotePort) == 16 );
C_ASSERT( sizeof(P2PSessionState_t().m_nRemotePort) >= 2 );

C_ASSERT( sizeof(PSNGameBootInviteResult_t) >= 9 );
C_ASSERT( offsetof(PSNGameBootInviteResult_t, m_bGameBootInviteExists) == 0 );
C_ASSERT( sizeof(PSNGameBootInviteResult_t().m_bGameBootInviteExists) >= 1 );
C_ASSERT( offsetof(PSNGameBootInviteResult_t, m_steamIDLobby) == 1 );
C_ASSERT( sizeof(PSNGameBootInviteResult_t().m_steamIDLobby) >= 8 );

C_ASSERT( sizeof(PersonaStateChange_t) >= 16 );
C_ASSERT( offsetof(PersonaStateChange_t, m_ulSteamID) == 0 );
C_ASSERT( sizeof(PersonaStateChange_t().m_ulSteamID) >= 8 );
C_ASSERT( offsetof(PersonaStateChange_t, m_nChangeFlags) == 8 );
C_ASSERT( sizeof(PersonaStateChange_t().m_nChangeFlags) >= 4 );

C_ASSERT( sizeof(PlaybackStatusHasChanged_t) >= 1 );

C_ASSERT( sizeof(RegisterActivationCodeResponse_t) >= 8 );
C_ASSERT( offsetof(RegisterActivationCodeResponse_t, m_eResult) == 0 );
C_ASSERT( sizeof(RegisterActivationCodeResponse_t().m_eResult) >= 4 );
C_ASSERT( offsetof(RegisterActivationCodeResponse_t, m_unPackageRegistered) == 4 );
C_ASSERT( sizeof(RegisterActivationCodeResponse_t().m_unPackageRegistered) >= 4 );

C_ASSERT( sizeof(RemoteStorageAppSyncStatusCheck_t) >= 8 );
C_ASSERT( offsetof(RemoteStorageAppSyncStatusCheck_t, m_nAppID) == 0 );
C_ASSERT( sizeof(RemoteStorageAppSyncStatusCheck_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(RemoteStorageAppSyncStatusCheck_t, m_eResult) == 4 );
C_ASSERT( sizeof(RemoteStorageAppSyncStatusCheck_t().m_eResult) >= 4 );

C_ASSERT( sizeof(RemoteStorageAppSyncedClient_t) >= 12 );
C_ASSERT( offsetof(RemoteStorageAppSyncedClient_t, m_nAppID) == 0 );
C_ASSERT( sizeof(RemoteStorageAppSyncedClient_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(RemoteStorageAppSyncedClient_t, m_eResult) == 4 );
C_ASSERT( sizeof(RemoteStorageAppSyncedClient_t().m_eResult) >= 4 );
C_ASSERT( offsetof(RemoteStorageAppSyncedClient_t, m_unNumDownloads) == 8 );
C_ASSERT( sizeof(RemoteStorageAppSyncedClient_t().m_unNumDownloads) >= 4 );

C_ASSERT( sizeof(RemoteStorageAppSyncedServer_t) >= 12 );
C_ASSERT( offsetof(RemoteStorageAppSyncedServer_t, m_nAppID) == 0 );
C_ASSERT( sizeof(RemoteStorageAppSyncedServer_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(RemoteStorageAppSyncedServer_t, m_eResult) == 4 );
C_ASSERT( sizeof(RemoteStorageAppSyncedServer_t().m_eResult) >= 4 );
C_ASSERT( offsetof(RemoteStorageAppSyncedServer_t, m_unNumUploads) == 8 );
C_ASSERT( sizeof(RemoteStorageAppSyncedServer_t().m_unNumUploads) >= 4 );

C_ASSERT( sizeof(RemoteStorageConflictResolution_t) >= 8 );
C_ASSERT( offsetof(RemoteStorageConflictResolution_t, m_nAppID) == 0 );
C_ASSERT( sizeof(RemoteStorageConflictResolution_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(RemoteStorageConflictResolution_t, m_eResult) == 4 );
C_ASSERT( sizeof(RemoteStorageConflictResolution_t().m_eResult) >= 4 );

C_ASSERT( sizeof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t) >= 616 );
C_ASSERT( offsetof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t, m_eAction) == 4 );
C_ASSERT( sizeof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t().m_eAction) >= 4 );
C_ASSERT( offsetof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t, m_nResultsReturned) == 8 );
C_ASSERT( sizeof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t, m_nTotalResultCount) == 12 );
C_ASSERT( sizeof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t, m_rgRTimeUpdated) == 416 );
C_ASSERT( sizeof(RemoteStorageEnumeratePublishedFilesByUserActionResult_t().m_rgRTimeUpdated) >= 200 );

C_ASSERT( sizeof(RemoteStorageFileReadAsyncComplete_t) >= 24 );
C_ASSERT( offsetof(RemoteStorageFileReadAsyncComplete_t, m_hFileReadAsync) == 0 );
C_ASSERT( sizeof(RemoteStorageFileReadAsyncComplete_t().m_hFileReadAsync) >= 8 );
C_ASSERT( offsetof(RemoteStorageFileReadAsyncComplete_t, m_eResult) == 8 );
C_ASSERT( sizeof(RemoteStorageFileReadAsyncComplete_t().m_eResult) >= 4 );
C_ASSERT( offsetof(RemoteStorageFileReadAsyncComplete_t, m_nOffset) == 12 );
C_ASSERT( sizeof(RemoteStorageFileReadAsyncComplete_t().m_nOffset) >= 4 );
C_ASSERT( offsetof(RemoteStorageFileReadAsyncComplete_t, m_cubRead) == 16 );
C_ASSERT( sizeof(RemoteStorageFileReadAsyncComplete_t().m_cubRead) >= 4 );

C_ASSERT( sizeof(RemoteStorageFileWriteAsyncComplete_t) >= 4 );
C_ASSERT( offsetof(RemoteStorageFileWriteAsyncComplete_t, m_eResult) == 0 );
C_ASSERT( sizeof(RemoteStorageFileWriteAsyncComplete_t().m_eResult) >= 4 );

C_ASSERT( sizeof(RemoteStorageLocalFileChange_t) >= 1 );

C_ASSERT( sizeof(RemoteStoragePublishFileProgress_t) >= 16 );
C_ASSERT( offsetof(RemoteStoragePublishFileProgress_t, m_dPercentFile) == 0 );
C_ASSERT( sizeof(RemoteStoragePublishFileProgress_t().m_dPercentFile) >= 8 );
C_ASSERT( offsetof(RemoteStoragePublishFileProgress_t, m_bPreview) == 8 );
C_ASSERT( sizeof(RemoteStoragePublishFileProgress_t().m_bPreview) >= 1 );

C_ASSERT( sizeof(RemoteStoragePublishedFileDeleted_t) >= 16 );
C_ASSERT( offsetof(RemoteStoragePublishedFileDeleted_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(RemoteStoragePublishedFileDeleted_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(RemoteStoragePublishedFileDeleted_t, m_nAppID) == 8 );
C_ASSERT( sizeof(RemoteStoragePublishedFileDeleted_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(RemoteStoragePublishedFileSubscribed_t) >= 16 );
C_ASSERT( offsetof(RemoteStoragePublishedFileSubscribed_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(RemoteStoragePublishedFileSubscribed_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(RemoteStoragePublishedFileSubscribed_t, m_nAppID) == 8 );
C_ASSERT( sizeof(RemoteStoragePublishedFileSubscribed_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(RemoteStoragePublishedFileUnsubscribed_t) >= 16 );
C_ASSERT( offsetof(RemoteStoragePublishedFileUnsubscribed_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(RemoteStoragePublishedFileUnsubscribed_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(RemoteStoragePublishedFileUnsubscribed_t, m_nAppID) == 8 );
C_ASSERT( sizeof(RemoteStoragePublishedFileUnsubscribed_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(RequestFriendsLobbiesResponse_t) >= 24 );
C_ASSERT( offsetof(RequestFriendsLobbiesResponse_t, m_ulSteamIDFriend) == 0 );
C_ASSERT( sizeof(RequestFriendsLobbiesResponse_t().m_ulSteamIDFriend) >= 8 );
C_ASSERT( offsetof(RequestFriendsLobbiesResponse_t, m_ulSteamIDLobby) == 8 );
C_ASSERT( sizeof(RequestFriendsLobbiesResponse_t().m_ulSteamIDLobby) >= 8 );
C_ASSERT( offsetof(RequestFriendsLobbiesResponse_t, m_cResultIndex) == 16 );
C_ASSERT( sizeof(RequestFriendsLobbiesResponse_t().m_cResultIndex) >= 4 );
C_ASSERT( offsetof(RequestFriendsLobbiesResponse_t, m_cResultsTotal) == 20 );
C_ASSERT( sizeof(RequestFriendsLobbiesResponse_t().m_cResultsTotal) >= 4 );

C_ASSERT( sizeof(ReservationNotificationCallback_t) >= 16 );
C_ASSERT( offsetof(ReservationNotificationCallback_t, m_ulBeaconID) == 0 );
C_ASSERT( sizeof(ReservationNotificationCallback_t().m_ulBeaconID) >= 8 );
C_ASSERT( offsetof(ReservationNotificationCallback_t, m_steamIDJoiner) == 8 );
C_ASSERT( sizeof(ReservationNotificationCallback_t().m_steamIDJoiner) >= 8 );

C_ASSERT( sizeof(ScreenshotReady_t) >= 8 );
C_ASSERT( offsetof(ScreenshotReady_t, m_hLocal) == 0 );
C_ASSERT( sizeof(ScreenshotReady_t().m_hLocal) >= 4 );
C_ASSERT( offsetof(ScreenshotReady_t, m_eResult) == 4 );
C_ASSERT( sizeof(ScreenshotReady_t().m_eResult) >= 4 );

C_ASSERT( sizeof(ScreenshotRequested_t) >= 1 );

C_ASSERT( sizeof(SearchForGameProgressCallback_t) >= 40 );
C_ASSERT( offsetof(SearchForGameProgressCallback_t, m_ullSearchID) == 0 );
C_ASSERT( sizeof(SearchForGameProgressCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(SearchForGameProgressCallback_t, m_eResult) == 8 );
C_ASSERT( sizeof(SearchForGameProgressCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(SearchForGameProgressCallback_t, m_lobbyID) == 12 );
C_ASSERT( sizeof(SearchForGameProgressCallback_t().m_lobbyID) >= 8 );
C_ASSERT( offsetof(SearchForGameProgressCallback_t, m_steamIDEndedSearch) == 20 );
C_ASSERT( sizeof(SearchForGameProgressCallback_t().m_steamIDEndedSearch) >= 8 );
C_ASSERT( offsetof(SearchForGameProgressCallback_t, m_nSecondsRemainingEstimate) == 28 );
C_ASSERT( sizeof(SearchForGameProgressCallback_t().m_nSecondsRemainingEstimate) >= 4 );
C_ASSERT( offsetof(SearchForGameProgressCallback_t, m_cPlayersSearching) == 32 );
C_ASSERT( sizeof(SearchForGameProgressCallback_t().m_cPlayersSearching) >= 4 );

C_ASSERT( sizeof(SearchForGameResultCallback_t) >= 32 );
C_ASSERT( offsetof(SearchForGameResultCallback_t, m_ullSearchID) == 0 );
C_ASSERT( sizeof(SearchForGameResultCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(SearchForGameResultCallback_t, m_eResult) == 8 );
C_ASSERT( sizeof(SearchForGameResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(SearchForGameResultCallback_t, m_nCountPlayersInGame) == 12 );
C_ASSERT( sizeof(SearchForGameResultCallback_t().m_nCountPlayersInGame) >= 4 );
C_ASSERT( offsetof(SearchForGameResultCallback_t, m_nCountAcceptedGame) == 16 );
C_ASSERT( sizeof(SearchForGameResultCallback_t().m_nCountAcceptedGame) >= 4 );
C_ASSERT( offsetof(SearchForGameResultCallback_t, m_steamIDHost) == 20 );
C_ASSERT( sizeof(SearchForGameResultCallback_t().m_steamIDHost) >= 8 );
C_ASSERT( offsetof(SearchForGameResultCallback_t, m_bFinalCallback) == 28 );
C_ASSERT( sizeof(SearchForGameResultCallback_t().m_bFinalCallback) >= 1 );

C_ASSERT( sizeof(SetPersonaNameResponse_t) >= 8 );
C_ASSERT( offsetof(SetPersonaNameResponse_t, m_bSuccess) == 0 );
C_ASSERT( sizeof(SetPersonaNameResponse_t().m_bSuccess) >= 1 );
C_ASSERT( offsetof(SetPersonaNameResponse_t, m_bLocalSuccess) == 1 );
C_ASSERT( sizeof(SetPersonaNameResponse_t().m_bLocalSuccess) >= 1 );
C_ASSERT( offsetof(SetPersonaNameResponse_t, m_result) == 4 );
C_ASSERT( sizeof(SetPersonaNameResponse_t().m_result) >= 4 );

C_ASSERT( sizeof(SetUserItemVoteResult_t) >= 16 );
C_ASSERT( offsetof(SetUserItemVoteResult_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(SetUserItemVoteResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(SetUserItemVoteResult_t, m_eResult) == 8 );
C_ASSERT( sizeof(SetUserItemVoteResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(SetUserItemVoteResult_t, m_bVoteUp) == 12 );
C_ASSERT( sizeof(SetUserItemVoteResult_t().m_bVoteUp) >= 1 );

C_ASSERT( sizeof(SocketStatusCallback_t) >= 20 );
C_ASSERT( offsetof(SocketStatusCallback_t, m_hSocket) == 0 );
C_ASSERT( sizeof(SocketStatusCallback_t().m_hSocket) >= 4 );
C_ASSERT( offsetof(SocketStatusCallback_t, m_hListenSocket) == 4 );
C_ASSERT( sizeof(SocketStatusCallback_t().m_hListenSocket) >= 4 );
C_ASSERT( offsetof(SocketStatusCallback_t, m_steamIDRemote) == 8 );
C_ASSERT( sizeof(SocketStatusCallback_t().m_steamIDRemote) >= 8 );
C_ASSERT( offsetof(SocketStatusCallback_t, m_eSNetSocketState) == 16 );
C_ASSERT( sizeof(SocketStatusCallback_t().m_eSNetSocketState) >= 4 );

C_ASSERT( sizeof(StartPlaytimeTrackingResult_t) >= 4 );
C_ASSERT( offsetof(StartPlaytimeTrackingResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(StartPlaytimeTrackingResult_t().m_eResult) >= 4 );

C_ASSERT( sizeof(SteamAPICallCompleted_t_137) >= 16 );
C_ASSERT( offsetof(SteamAPICallCompleted_t_137, m_hAsyncCall) == 0 );
C_ASSERT( sizeof(SteamAPICallCompleted_t_137().m_hAsyncCall) >= 8 );
C_ASSERT( offsetof(SteamAPICallCompleted_t_137, m_iCallback) == 8 );
C_ASSERT( sizeof(SteamAPICallCompleted_t_137().m_iCallback) >= 4 );
C_ASSERT( offsetof(SteamAPICallCompleted_t_137, m_cubParam) == 12 );
C_ASSERT( sizeof(SteamAPICallCompleted_t_137().m_cubParam) >= 4 );

C_ASSERT( sizeof(SteamAPICallCompleted_t_102x) >= 8 );
C_ASSERT( offsetof(SteamAPICallCompleted_t_102x, m_hAsyncCall) == 0 );
C_ASSERT( sizeof(SteamAPICallCompleted_t_102x().m_hAsyncCall) >= 8 );

C_ASSERT( sizeof(SteamAppInstalled_t_152) >= 8 );
C_ASSERT( offsetof(SteamAppInstalled_t_152, m_nAppID) == 0 );
C_ASSERT( sizeof(SteamAppInstalled_t_152().m_nAppID) >= 4 );
C_ASSERT( offsetof(SteamAppInstalled_t_152, m_iInstallFolderIndex) == 4 );
C_ASSERT( sizeof(SteamAppInstalled_t_152().m_iInstallFolderIndex) >= 4 );

C_ASSERT( sizeof(SteamAppInstalled_t_128x) >= 4 );
C_ASSERT( offsetof(SteamAppInstalled_t_128x, m_nAppID) == 0 );
C_ASSERT( sizeof(SteamAppInstalled_t_128x().m_nAppID) >= 4 );

C_ASSERT( sizeof(SteamAppUninstalled_t_152) >= 8 );
C_ASSERT( offsetof(SteamAppUninstalled_t_152, m_nAppID) == 0 );
C_ASSERT( sizeof(SteamAppUninstalled_t_152().m_nAppID) >= 4 );
C_ASSERT( offsetof(SteamAppUninstalled_t_152, m_iInstallFolderIndex) == 4 );
C_ASSERT( sizeof(SteamAppUninstalled_t_152().m_iInstallFolderIndex) >= 4 );

C_ASSERT( sizeof(SteamAppUninstalled_t_128x) >= 4 );
C_ASSERT( offsetof(SteamAppUninstalled_t_128x, m_nAppID) == 0 );
C_ASSERT( sizeof(SteamAppUninstalled_t_128x().m_nAppID) >= 4 );

C_ASSERT( sizeof(SteamCallback_t) >= 1 );

C_ASSERT( sizeof(SteamControllerState001_t) >= 20 );
C_ASSERT( offsetof(SteamControllerState001_t, unPacketNum) == 0 );
C_ASSERT( sizeof(SteamControllerState001_t().unPacketNum) >= 4 );
C_ASSERT( offsetof(SteamControllerState001_t, ulButtons) == 4 );
C_ASSERT( sizeof(SteamControllerState001_t().ulButtons) >= 8 );
C_ASSERT( offsetof(SteamControllerState001_t, sLeftPadX) == 12 );
C_ASSERT( sizeof(SteamControllerState001_t().sLeftPadX) >= 2 );
C_ASSERT( offsetof(SteamControllerState001_t, sLeftPadY) == 14 );
C_ASSERT( sizeof(SteamControllerState001_t().sLeftPadY) >= 2 );
C_ASSERT( offsetof(SteamControllerState001_t, sRightPadX) == 16 );
C_ASSERT( sizeof(SteamControllerState001_t().sRightPadX) >= 2 );
C_ASSERT( offsetof(SteamControllerState001_t, sRightPadY) == 18 );
C_ASSERT( sizeof(SteamControllerState001_t().sRightPadY) >= 2 );

C_ASSERT( sizeof(SteamControllerState_t) >= 20 );
C_ASSERT( offsetof(SteamControllerState_t, unPacketNum) == 0 );
C_ASSERT( sizeof(SteamControllerState_t().unPacketNum) >= 4 );
C_ASSERT( offsetof(SteamControllerState_t, ulButtons) == 4 );
C_ASSERT( sizeof(SteamControllerState_t().ulButtons) >= 8 );
C_ASSERT( offsetof(SteamControllerState_t, sLeftPadX) == 12 );
C_ASSERT( sizeof(SteamControllerState_t().sLeftPadX) >= 2 );
C_ASSERT( offsetof(SteamControllerState_t, sLeftPadY) == 14 );
C_ASSERT( sizeof(SteamControllerState_t().sLeftPadY) >= 2 );
C_ASSERT( offsetof(SteamControllerState_t, sRightPadX) == 16 );
C_ASSERT( sizeof(SteamControllerState_t().sRightPadX) >= 2 );
C_ASSERT( offsetof(SteamControllerState_t, sRightPadY) == 18 );
C_ASSERT( sizeof(SteamControllerState_t().sRightPadY) >= 2 );

C_ASSERT( sizeof(SteamInputActionEvent_t) >= 33 );
C_ASSERT( offsetof(SteamInputActionEvent_t, controllerHandle) == 0 );
C_ASSERT( sizeof(SteamInputActionEvent_t().controllerHandle) >= 8 );
C_ASSERT( offsetof(SteamInputActionEvent_t, eEventType) == 8 );
C_ASSERT( sizeof(SteamInputActionEvent_t().eEventType) >= 4 );
C_ASSERT( offsetof(SteamInputActionEvent_t, x) == 12 );
C_ASSERT( sizeof(SteamInputActionEvent_t().x) >= 21 );

C_ASSERT( sizeof(SteamInputDeviceConnected_t) >= 8 );
C_ASSERT( offsetof(SteamInputDeviceConnected_t, m_ulConnectedDeviceHandle) == 0 );
C_ASSERT( sizeof(SteamInputDeviceConnected_t().m_ulConnectedDeviceHandle) >= 8 );

C_ASSERT( sizeof(SteamInputDeviceDisconnected_t) >= 8 );
C_ASSERT( offsetof(SteamInputDeviceDisconnected_t, m_ulDisconnectedDeviceHandle) == 0 );
C_ASSERT( sizeof(SteamInputDeviceDisconnected_t().m_ulDisconnectedDeviceHandle) >= 8 );

C_ASSERT( sizeof(SteamInventoryDefinitionUpdate_t) >= 1 );

C_ASSERT( sizeof(SteamInventoryEligiblePromoItemDefIDs_t) >= 20 );
C_ASSERT( offsetof(SteamInventoryEligiblePromoItemDefIDs_t, m_result) == 0 );
C_ASSERT( sizeof(SteamInventoryEligiblePromoItemDefIDs_t().m_result) >= 4 );
C_ASSERT( offsetof(SteamInventoryEligiblePromoItemDefIDs_t, m_steamID) == 4 );
C_ASSERT( sizeof(SteamInventoryEligiblePromoItemDefIDs_t().m_steamID) >= 8 );
C_ASSERT( offsetof(SteamInventoryEligiblePromoItemDefIDs_t, m_numEligiblePromoItemDefs) == 12 );
C_ASSERT( sizeof(SteamInventoryEligiblePromoItemDefIDs_t().m_numEligiblePromoItemDefs) >= 4 );
C_ASSERT( offsetof(SteamInventoryEligiblePromoItemDefIDs_t, m_bCachedData) == 16 );
C_ASSERT( sizeof(SteamInventoryEligiblePromoItemDefIDs_t().m_bCachedData) >= 1 );

C_ASSERT( sizeof(SteamInventoryFullUpdate_t) >= 4 );
C_ASSERT( offsetof(SteamInventoryFullUpdate_t, m_handle) == 0 );
C_ASSERT( sizeof(SteamInventoryFullUpdate_t().m_handle) >= 4 );

C_ASSERT( sizeof(SteamInventoryRequestPricesResult_t) >= 8 );
C_ASSERT( offsetof(SteamInventoryRequestPricesResult_t, m_result) == 0 );
C_ASSERT( sizeof(SteamInventoryRequestPricesResult_t().m_result) >= 4 );
C_ASSERT( offsetof(SteamInventoryRequestPricesResult_t, m_rgchCurrency) == 4 );
C_ASSERT( sizeof(SteamInventoryRequestPricesResult_t().m_rgchCurrency) >= 4 );

C_ASSERT( sizeof(SteamInventoryResultReady_t) >= 8 );
C_ASSERT( offsetof(SteamInventoryResultReady_t, m_handle) == 0 );
C_ASSERT( sizeof(SteamInventoryResultReady_t().m_handle) >= 4 );
C_ASSERT( offsetof(SteamInventoryResultReady_t, m_result) == 4 );
C_ASSERT( sizeof(SteamInventoryResultReady_t().m_result) >= 4 );

C_ASSERT( sizeof(SteamItemDetails_t) >= 16 );
C_ASSERT( offsetof(SteamItemDetails_t, m_itemId) == 0 );
C_ASSERT( sizeof(SteamItemDetails_t().m_itemId) >= 8 );
C_ASSERT( offsetof(SteamItemDetails_t, m_iDefinition) == 8 );
C_ASSERT( sizeof(SteamItemDetails_t().m_iDefinition) >= 4 );
C_ASSERT( offsetof(SteamItemDetails_t, m_unQuantity) == 12 );
C_ASSERT( sizeof(SteamItemDetails_t().m_unQuantity) >= 2 );
C_ASSERT( offsetof(SteamItemDetails_t, m_unFlags) == 14 );
C_ASSERT( sizeof(SteamItemDetails_t().m_unFlags) >= 2 );

C_ASSERT( sizeof(SteamNetAuthenticationStatus_t) >= 260 );
C_ASSERT( offsetof(SteamNetAuthenticationStatus_t, m_eAvail) == 0 );
C_ASSERT( sizeof(SteamNetAuthenticationStatus_t().m_eAvail) >= 4 );
C_ASSERT( offsetof(SteamNetAuthenticationStatus_t, m_debugMsg) == 4 );
C_ASSERT( sizeof(SteamNetAuthenticationStatus_t().m_debugMsg) >= 256 );

C_ASSERT( sizeof(SteamNetConnectionRealTimeLaneStatus_t) >= 64 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeLaneStatus_t, m_cbPendingUnreliable) == 0 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeLaneStatus_t().m_cbPendingUnreliable) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeLaneStatus_t, m_cbPendingReliable) == 4 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeLaneStatus_t().m_cbPendingReliable) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeLaneStatus_t, m_cbSentUnackedReliable) == 8 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeLaneStatus_t().m_cbSentUnackedReliable) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeLaneStatus_t, _reservePad1) == 12 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeLaneStatus_t()._reservePad1) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeLaneStatus_t, m_usecQueueTime) == 16 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeLaneStatus_t().m_usecQueueTime) >= 8 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeLaneStatus_t, reserved) == 24 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeLaneStatus_t().reserved) >= 40 );

C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t) >= 120 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_eState) == 0 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_eState) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_nPing) == 4 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_nPing) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_flConnectionQualityLocal) == 8 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_flConnectionQualityLocal) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_flConnectionQualityRemote) == 12 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_flConnectionQualityRemote) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_flOutPacketsPerSec) == 16 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_flOutPacketsPerSec) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_flOutBytesPerSec) == 20 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_flOutBytesPerSec) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_flInPacketsPerSec) == 24 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_flInPacketsPerSec) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_flInBytesPerSec) == 28 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_flInBytesPerSec) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_nSendRateBytesPerSecond) == 32 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_nSendRateBytesPerSecond) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_cbPendingUnreliable) == 36 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_cbPendingUnreliable) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_cbPendingReliable) == 40 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_cbPendingReliable) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_cbSentUnackedReliable) == 44 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_cbSentUnackedReliable) >= 4 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, m_usecQueueTime) == 48 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().m_usecQueueTime) >= 8 );
C_ASSERT( offsetof(SteamNetConnectionRealTimeStatus_t, reserved) == 56 );
C_ASSERT( sizeof(SteamNetConnectionRealTimeStatus_t().reserved) >= 64 );

C_ASSERT( sizeof(SteamNetworkPingLocation_t) >= 512 );
C_ASSERT( offsetof(SteamNetworkPingLocation_t, m_data) == 0 );
C_ASSERT( sizeof(SteamNetworkPingLocation_t().m_data) >= 512 );

C_ASSERT( sizeof(SteamNetworkingConfigValue_t) >= 16 );
C_ASSERT( offsetof(SteamNetworkingConfigValue_t, m_eValue) == 0 );
C_ASSERT( sizeof(SteamNetworkingConfigValue_t().m_eValue) >= 4 );
C_ASSERT( offsetof(SteamNetworkingConfigValue_t, m_eDataType) == 4 );
C_ASSERT( sizeof(SteamNetworkingConfigValue_t().m_eDataType) >= 4 );
C_ASSERT( offsetof(SteamNetworkingConfigValue_t, m_val) == 8 );
C_ASSERT( sizeof(SteamNetworkingConfigValue_t().m_val) >= 8 );

C_ASSERT( sizeof(SteamNetworkingFakeIPResult_t) >= 160 );
C_ASSERT( offsetof(SteamNetworkingFakeIPResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(SteamNetworkingFakeIPResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(SteamNetworkingFakeIPResult_t, m_identity) == 4 );
C_ASSERT( sizeof(SteamNetworkingFakeIPResult_t().m_identity) >= 136 );
C_ASSERT( offsetof(SteamNetworkingFakeIPResult_t, m_unIP) == 140 );
C_ASSERT( sizeof(SteamNetworkingFakeIPResult_t().m_unIP) >= 4 );
C_ASSERT( offsetof(SteamNetworkingFakeIPResult_t, m_unPorts) == 144 );
C_ASSERT( sizeof(SteamNetworkingFakeIPResult_t().m_unPorts) >= 16 );

C_ASSERT( sizeof(SteamNetworkingMessagesSessionFailed_t_153a) >= 696 );
C_ASSERT( offsetof(SteamNetworkingMessagesSessionFailed_t_153a, m_info) == 0 );
C_ASSERT( sizeof(SteamNetworkingMessagesSessionFailed_t_153a().m_info) >= 696 );

C_ASSERT( sizeof(SteamNetworkingMessagesSessionFailed_t_150) >= 696 );
C_ASSERT( offsetof(SteamNetworkingMessagesSessionFailed_t_150, m_info) == 0 );
C_ASSERT( sizeof(SteamNetworkingMessagesSessionFailed_t_150().m_info) >= 696 );

C_ASSERT( sizeof(SteamNetworkingMessagesSessionFailed_t_151) >= 568 );
C_ASSERT( offsetof(SteamNetworkingMessagesSessionFailed_t_151, m_info) == 0 );
C_ASSERT( sizeof(SteamNetworkingMessagesSessionFailed_t_151().m_info) >= 568 );

C_ASSERT( sizeof(SteamNetworkingMessagesSessionRequest_t_150) >= 136 );
C_ASSERT( offsetof(SteamNetworkingMessagesSessionRequest_t_150, m_identityRemote) == 0 );
C_ASSERT( sizeof(SteamNetworkingMessagesSessionRequest_t_150().m_identityRemote) >= 136 );

C_ASSERT( sizeof(SteamNetworkingMessagesSessionRequest_t_151) >= 8 );
C_ASSERT( offsetof(SteamNetworkingMessagesSessionRequest_t_151, m_identityRemote) == 0 );
C_ASSERT( sizeof(SteamNetworkingMessagesSessionRequest_t_151().m_identityRemote) >= 8 );

C_ASSERT( sizeof(SteamNetworkingPOPIDRender) >= 8 );
C_ASSERT( offsetof(SteamNetworkingPOPIDRender, buf) == 0 );
C_ASSERT( sizeof(SteamNetworkingPOPIDRender().buf) >= 8 );

C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus) >= 120 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_eState) == 0 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_eState) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_nPing) == 4 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_nPing) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_flConnectionQualityLocal) == 8 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_flConnectionQualityLocal) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_flConnectionQualityRemote) == 12 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_flConnectionQualityRemote) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_flOutPacketsPerSec) == 16 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_flOutPacketsPerSec) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_flOutBytesPerSec) == 20 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_flOutBytesPerSec) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_flInPacketsPerSec) == 24 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_flInPacketsPerSec) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_flInBytesPerSec) == 28 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_flInBytesPerSec) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_nSendRateBytesPerSecond) == 32 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_nSendRateBytesPerSecond) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_cbPendingUnreliable) == 36 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_cbPendingUnreliable) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_cbPendingReliable) == 40 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_cbPendingReliable) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_cbSentUnackedReliable) == 44 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_cbSentUnackedReliable) >= 4 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, m_usecQueueTime) == 48 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().m_usecQueueTime) >= 8 );
C_ASSERT( offsetof(SteamNetworkingQuickConnectionStatus, reserved) == 56 );
C_ASSERT( sizeof(SteamNetworkingQuickConnectionStatus().reserved) >= 64 );

C_ASSERT( sizeof(SteamParentalSettingsChanged_t) >= 1 );

C_ASSERT( sizeof(SteamRelayNetworkStatus_t) >= 272 );
C_ASSERT( offsetof(SteamRelayNetworkStatus_t, m_eAvail) == 0 );
C_ASSERT( sizeof(SteamRelayNetworkStatus_t().m_eAvail) >= 4 );
C_ASSERT( offsetof(SteamRelayNetworkStatus_t, m_bPingMeasurementInProgress) == 4 );
C_ASSERT( sizeof(SteamRelayNetworkStatus_t().m_bPingMeasurementInProgress) >= 4 );
C_ASSERT( offsetof(SteamRelayNetworkStatus_t, m_eAvailNetworkConfig) == 8 );
C_ASSERT( sizeof(SteamRelayNetworkStatus_t().m_eAvailNetworkConfig) >= 4 );
C_ASSERT( offsetof(SteamRelayNetworkStatus_t, m_eAvailAnyRelay) == 12 );
C_ASSERT( sizeof(SteamRelayNetworkStatus_t().m_eAvailAnyRelay) >= 4 );
C_ASSERT( offsetof(SteamRelayNetworkStatus_t, m_debugMsg) == 16 );
C_ASSERT( sizeof(SteamRelayNetworkStatus_t().m_debugMsg) >= 256 );

C_ASSERT( sizeof(SteamRemotePlaySessionConnected_t) >= 4 );
C_ASSERT( offsetof(SteamRemotePlaySessionConnected_t, m_unSessionID) == 0 );
C_ASSERT( sizeof(SteamRemotePlaySessionConnected_t().m_unSessionID) >= 4 );

C_ASSERT( sizeof(SteamRemotePlaySessionDisconnected_t) >= 4 );
C_ASSERT( offsetof(SteamRemotePlaySessionDisconnected_t, m_unSessionID) == 0 );
C_ASSERT( sizeof(SteamRemotePlaySessionDisconnected_t().m_unSessionID) >= 4 );

C_ASSERT( sizeof(SteamRemotePlayTogetherGuestInvite_t) >= 1024 );
C_ASSERT( offsetof(SteamRemotePlayTogetherGuestInvite_t, m_szConnectURL) == 0 );
C_ASSERT( sizeof(SteamRemotePlayTogetherGuestInvite_t().m_szConnectURL) >= 1024 );

C_ASSERT( sizeof(SteamServerConnectFailure_t_135) >= 8 );
C_ASSERT( offsetof(SteamServerConnectFailure_t_135, m_eResult) == 0 );
C_ASSERT( sizeof(SteamServerConnectFailure_t_135().m_eResult) >= 4 );
C_ASSERT( offsetof(SteamServerConnectFailure_t_135, m_bStillRetrying) == 4 );
C_ASSERT( sizeof(SteamServerConnectFailure_t_135().m_bStillRetrying) >= 1 );

C_ASSERT( sizeof(SteamServerConnectFailure_t_099u) >= 4 );
C_ASSERT( offsetof(SteamServerConnectFailure_t_099u, m_eResult) == 0 );
C_ASSERT( sizeof(SteamServerConnectFailure_t_099u().m_eResult) >= 4 );

C_ASSERT( sizeof(SteamServersConnected_t) >= 1 );

C_ASSERT( sizeof(SteamServersDisconnected_t) >= 4 );
C_ASSERT( offsetof(SteamServersDisconnected_t, m_eResult) == 0 );
C_ASSERT( sizeof(SteamServersDisconnected_t().m_eResult) >= 4 );

C_ASSERT( sizeof(SteamShutdown_t) >= 1 );

C_ASSERT( sizeof(SteamUGCQueryCompleted_t_143) >= 280 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_143, m_handle) == 0 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_143().m_handle) >= 8 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_143, m_eResult) == 8 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_143().m_eResult) >= 4 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_143, m_unNumResultsReturned) == 12 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_143().m_unNumResultsReturned) >= 4 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_143, m_unTotalMatchingResults) == 16 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_143().m_unTotalMatchingResults) >= 4 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_143, m_bCachedData) == 20 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_143().m_bCachedData) >= 1 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_143, m_rgchNextCursor) == 21 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_143().m_rgchNextCursor) >= 256 );

C_ASSERT( sizeof(SteamUGCQueryCompleted_t_128x) >= 24 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_128x, m_handle) == 0 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_128x().m_handle) >= 8 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_128x, m_eResult) == 8 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_128x().m_eResult) >= 4 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_128x, m_unNumResultsReturned) == 12 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_128x().m_unNumResultsReturned) >= 4 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_128x, m_unTotalMatchingResults) == 16 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_128x().m_unTotalMatchingResults) >= 4 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_128x, m_bCachedData) == 20 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_128x().m_bCachedData) >= 1 );

C_ASSERT( sizeof(SteamUGCQueryCompleted_t_126) >= 24 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_126, m_handle) == 0 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_126().m_handle) >= 8 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_126, m_eResult) == 8 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_126().m_eResult) >= 4 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_126, m_unNumResultsReturned) == 12 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_126().m_unNumResultsReturned) >= 4 );
C_ASSERT( offsetof(SteamUGCQueryCompleted_t_126, m_unTotalMatchingResults) == 16 );
C_ASSERT( sizeof(SteamUGCQueryCompleted_t_126().m_unTotalMatchingResults) >= 4 );

C_ASSERT( sizeof(SteamUnifiedMessagesSendMethodResult_t) >= 24 );
C_ASSERT( offsetof(SteamUnifiedMessagesSendMethodResult_t, m_hHandle) == 0 );
C_ASSERT( sizeof(SteamUnifiedMessagesSendMethodResult_t().m_hHandle) >= 8 );
C_ASSERT( offsetof(SteamUnifiedMessagesSendMethodResult_t, m_unContext) == 8 );
C_ASSERT( sizeof(SteamUnifiedMessagesSendMethodResult_t().m_unContext) >= 8 );
C_ASSERT( offsetof(SteamUnifiedMessagesSendMethodResult_t, m_eResult) == 16 );
C_ASSERT( sizeof(SteamUnifiedMessagesSendMethodResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(SteamUnifiedMessagesSendMethodResult_t, m_unResponseSize) == 20 );
C_ASSERT( sizeof(SteamUnifiedMessagesSendMethodResult_t().m_unResponseSize) >= 4 );

C_ASSERT( sizeof(StopPlaytimeTrackingResult_t) >= 4 );
C_ASSERT( offsetof(StopPlaytimeTrackingResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(StopPlaytimeTrackingResult_t().m_eResult) >= 4 );

C_ASSERT( sizeof(StoreAuthURLResponse_t) >= 512 );
C_ASSERT( offsetof(StoreAuthURLResponse_t, m_szURL) == 0 );
C_ASSERT( sizeof(StoreAuthURLResponse_t().m_szURL) >= 512 );

C_ASSERT( sizeof(SubmitItemUpdateResult_t_141) >= 16 );
C_ASSERT( offsetof(SubmitItemUpdateResult_t_141, m_eResult) == 0 );
C_ASSERT( sizeof(SubmitItemUpdateResult_t_141().m_eResult) >= 4 );
C_ASSERT( offsetof(SubmitItemUpdateResult_t_141, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 4 );
C_ASSERT( sizeof(SubmitItemUpdateResult_t_141().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );
C_ASSERT( offsetof(SubmitItemUpdateResult_t_141, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(SubmitItemUpdateResult_t_141().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(SubmitItemUpdateResult_t_130) >= 8 );
C_ASSERT( offsetof(SubmitItemUpdateResult_t_130, m_eResult) == 0 );
C_ASSERT( sizeof(SubmitItemUpdateResult_t_130().m_eResult) >= 4 );
C_ASSERT( offsetof(SubmitItemUpdateResult_t_130, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 4 );
C_ASSERT( sizeof(SubmitItemUpdateResult_t_130().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(TimedTrialStatus_t) >= 16 );
C_ASSERT( offsetof(TimedTrialStatus_t, m_unAppID) == 0 );
C_ASSERT( sizeof(TimedTrialStatus_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(TimedTrialStatus_t, m_bIsOffline) == 4 );
C_ASSERT( sizeof(TimedTrialStatus_t().m_bIsOffline) >= 1 );
C_ASSERT( offsetof(TimedTrialStatus_t, m_unSecondsAllowed) == 8 );
C_ASSERT( sizeof(TimedTrialStatus_t().m_unSecondsAllowed) >= 4 );
C_ASSERT( offsetof(TimedTrialStatus_t, m_unSecondsPlayed) == 12 );
C_ASSERT( sizeof(TimedTrialStatus_t().m_unSecondsPlayed) >= 4 );

C_ASSERT( sizeof(UnreadChatMessagesChanged_t) >= 1 );

C_ASSERT( sizeof(UserAchievementIconFetched_t) >= 144 );
C_ASSERT( offsetof(UserAchievementIconFetched_t, m_nGameID) == 0 );
C_ASSERT( sizeof(UserAchievementIconFetched_t().m_nGameID) >= 8 );
C_ASSERT( offsetof(UserAchievementIconFetched_t, m_rgchAchievementName) == 8 );
C_ASSERT( sizeof(UserAchievementIconFetched_t().m_rgchAchievementName) >= 128 );
C_ASSERT( offsetof(UserAchievementIconFetched_t, m_bAchieved) == 136 );
C_ASSERT( sizeof(UserAchievementIconFetched_t().m_bAchieved) >= 1 );
C_ASSERT( offsetof(UserAchievementIconFetched_t, m_nIconHandle) == 140 );
C_ASSERT( sizeof(UserAchievementIconFetched_t().m_nIconHandle) >= 4 );

C_ASSERT( sizeof(UserAchievementStored_t) >= 152 );
C_ASSERT( offsetof(UserAchievementStored_t, m_nGameID) == 0 );
C_ASSERT( sizeof(UserAchievementStored_t().m_nGameID) >= 8 );
C_ASSERT( offsetof(UserAchievementStored_t, m_bGroupAchievement) == 8 );
C_ASSERT( sizeof(UserAchievementStored_t().m_bGroupAchievement) >= 1 );
C_ASSERT( offsetof(UserAchievementStored_t, m_rgchAchievementName) == 9 );
C_ASSERT( sizeof(UserAchievementStored_t().m_rgchAchievementName) >= 128 );
C_ASSERT( offsetof(UserAchievementStored_t, m_nCurProgress) == 140 );
C_ASSERT( sizeof(UserAchievementStored_t().m_nCurProgress) >= 4 );
C_ASSERT( offsetof(UserAchievementStored_t, m_nMaxProgress) == 144 );
C_ASSERT( sizeof(UserAchievementStored_t().m_nMaxProgress) >= 4 );

C_ASSERT( sizeof(UserFavoriteItemsListChanged_t) >= 16 );
C_ASSERT( offsetof(UserFavoriteItemsListChanged_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(UserFavoriteItemsListChanged_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(UserFavoriteItemsListChanged_t, m_eResult) == 8 );
C_ASSERT( sizeof(UserFavoriteItemsListChanged_t().m_eResult) >= 4 );
C_ASSERT( offsetof(UserFavoriteItemsListChanged_t, m_bWasAddRequest) == 12 );
C_ASSERT( sizeof(UserFavoriteItemsListChanged_t().m_bWasAddRequest) >= 1 );

C_ASSERT( sizeof(UserStatsReceived_t_102x) >= 24 );
C_ASSERT( offsetof(UserStatsReceived_t_102x, m_nGameID) == 0 );
C_ASSERT( sizeof(UserStatsReceived_t_102x().m_nGameID) >= 8 );
C_ASSERT( offsetof(UserStatsReceived_t_102x, m_eResult) == 8 );
C_ASSERT( sizeof(UserStatsReceived_t_102x().m_eResult) >= 4 );
C_ASSERT( offsetof(UserStatsReceived_t_102x, m_steamIDUser) == 12 );
C_ASSERT( sizeof(UserStatsReceived_t_102x().m_steamIDUser) >= 8 );

C_ASSERT( sizeof(UserStatsReceived_t_099u) >= 16 );
C_ASSERT( offsetof(UserStatsReceived_t_099u, m_nGameID) == 0 );
C_ASSERT( sizeof(UserStatsReceived_t_099u().m_nGameID) >= 8 );
C_ASSERT( offsetof(UserStatsReceived_t_099u, m_eResult) == 8 );
C_ASSERT( sizeof(UserStatsReceived_t_099u().m_eResult) >= 4 );

C_ASSERT( sizeof(UserStatsStored_t) >= 16 );
C_ASSERT( offsetof(UserStatsStored_t, m_nGameID) == 0 );
C_ASSERT( sizeof(UserStatsStored_t().m_nGameID) >= 8 );
C_ASSERT( offsetof(UserStatsStored_t, m_eResult) == 8 );
C_ASSERT( sizeof(UserStatsStored_t().m_eResult) >= 4 );

C_ASSERT( sizeof(UserStatsUnloaded_t) >= 8 );
C_ASSERT( offsetof(UserStatsUnloaded_t, m_steamIDUser) == 0 );
C_ASSERT( sizeof(UserStatsUnloaded_t().m_steamIDUser) >= 8 );

C_ASSERT( sizeof(UserSubscribedItemsListChanged_t) >= 4 );
C_ASSERT( offsetof(UserSubscribedItemsListChanged_t, m_nAppID) == 0 );
C_ASSERT( sizeof(UserSubscribedItemsListChanged_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(ValidateAuthTicketResponse_t_126) >= 20 );
C_ASSERT( offsetof(ValidateAuthTicketResponse_t_126, m_SteamID) == 0 );
C_ASSERT( sizeof(ValidateAuthTicketResponse_t_126().m_SteamID) >= 8 );
C_ASSERT( offsetof(ValidateAuthTicketResponse_t_126, m_eAuthSessionResponse) == 8 );
C_ASSERT( sizeof(ValidateAuthTicketResponse_t_126().m_eAuthSessionResponse) >= 4 );
C_ASSERT( offsetof(ValidateAuthTicketResponse_t_126, m_OwnerSteamID) == 12 );
C_ASSERT( sizeof(ValidateAuthTicketResponse_t_126().m_OwnerSteamID) >= 8 );

C_ASSERT( sizeof(ValidateAuthTicketResponse_t_104) >= 12 );
C_ASSERT( offsetof(ValidateAuthTicketResponse_t_104, m_SteamID) == 0 );
C_ASSERT( sizeof(ValidateAuthTicketResponse_t_104().m_SteamID) >= 8 );
C_ASSERT( offsetof(ValidateAuthTicketResponse_t_104, m_eAuthSessionResponse) == 8 );
C_ASSERT( sizeof(ValidateAuthTicketResponse_t_104().m_eAuthSessionResponse) >= 4 );

C_ASSERT( sizeof(VolumeHasChanged_t) >= 4 );
C_ASSERT( offsetof(VolumeHasChanged_t, m_flNewVolume) == 0 );
C_ASSERT( sizeof(VolumeHasChanged_t().m_flNewVolume) >= 4 );

C_ASSERT( sizeof(WorkshopEULAStatus_t) >= 20 );
C_ASSERT( offsetof(WorkshopEULAStatus_t, m_eResult) == 0 );
C_ASSERT( sizeof(WorkshopEULAStatus_t().m_eResult) >= 4 );
C_ASSERT( offsetof(WorkshopEULAStatus_t, m_nAppID) == 4 );
C_ASSERT( sizeof(WorkshopEULAStatus_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(WorkshopEULAStatus_t, m_unVersion) == 8 );
C_ASSERT( sizeof(WorkshopEULAStatus_t().m_unVersion) >= 4 );
C_ASSERT( offsetof(WorkshopEULAStatus_t, m_rtAction) == 12 );
C_ASSERT( sizeof(WorkshopEULAStatus_t().m_rtAction) >= 4 );
C_ASSERT( offsetof(WorkshopEULAStatus_t, m_bAccepted) == 16 );
C_ASSERT( sizeof(WorkshopEULAStatus_t().m_bAccepted) >= 1 );
C_ASSERT( offsetof(WorkshopEULAStatus_t, m_bNeedsAction) == 17 );
C_ASSERT( sizeof(WorkshopEULAStatus_t().m_bNeedsAction) >= 1 );

C_ASSERT( sizeof(gameserveritem_t_105) >= 372 );
C_ASSERT( offsetof(gameserveritem_t_105, m_NetAdr) == 0 );
C_ASSERT( sizeof(gameserveritem_t_105().m_NetAdr) >= 8 );
C_ASSERT( offsetof(gameserveritem_t_105, m_nPing) == 8 );
C_ASSERT( sizeof(gameserveritem_t_105().m_nPing) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_105, m_bHadSuccessfulResponse) == 12 );
C_ASSERT( sizeof(gameserveritem_t_105().m_bHadSuccessfulResponse) >= 1 );
C_ASSERT( offsetof(gameserveritem_t_105, m_bDoNotRefresh) == 13 );
C_ASSERT( sizeof(gameserveritem_t_105().m_bDoNotRefresh) >= 1 );
C_ASSERT( offsetof(gameserveritem_t_105, m_szGameDir) == 14 );
C_ASSERT( sizeof(gameserveritem_t_105().m_szGameDir) >= 32 );
C_ASSERT( offsetof(gameserveritem_t_105, m_szMap) == 46 );
C_ASSERT( sizeof(gameserveritem_t_105().m_szMap) >= 32 );
C_ASSERT( offsetof(gameserveritem_t_105, m_szGameDescription) == 78 );
C_ASSERT( sizeof(gameserveritem_t_105().m_szGameDescription) >= 64 );
C_ASSERT( offsetof(gameserveritem_t_105, m_nAppID) == 144 );
C_ASSERT( sizeof(gameserveritem_t_105().m_nAppID) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_105, m_nPlayers) == 148 );
C_ASSERT( sizeof(gameserveritem_t_105().m_nPlayers) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_105, m_nMaxPlayers) == 152 );
C_ASSERT( sizeof(gameserveritem_t_105().m_nMaxPlayers) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_105, m_nBotPlayers) == 156 );
C_ASSERT( sizeof(gameserveritem_t_105().m_nBotPlayers) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_105, m_bPassword) == 160 );
C_ASSERT( sizeof(gameserveritem_t_105().m_bPassword) >= 1 );
C_ASSERT( offsetof(gameserveritem_t_105, m_bSecure) == 161 );
C_ASSERT( sizeof(gameserveritem_t_105().m_bSecure) >= 1 );
C_ASSERT( offsetof(gameserveritem_t_105, m_ulTimeLastPlayed) == 164 );
C_ASSERT( sizeof(gameserveritem_t_105().m_ulTimeLastPlayed) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_105, m_nServerVersion) == 168 );
C_ASSERT( sizeof(gameserveritem_t_105().m_nServerVersion) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_105, m_szServerName) == 172 );
C_ASSERT( sizeof(gameserveritem_t_105().m_szServerName) >= 64 );
C_ASSERT( offsetof(gameserveritem_t_105, m_szGameTags) == 236 );
C_ASSERT( sizeof(gameserveritem_t_105().m_szGameTags) >= 128 );
C_ASSERT( offsetof(gameserveritem_t_105, m_steamID) == 364 );
C_ASSERT( sizeof(gameserveritem_t_105().m_steamID) >= 8 );

C_ASSERT( sizeof(gameserveritem_t_099u) >= 364 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_NetAdr) == 0 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_NetAdr) >= 8 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_nPing) == 8 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_nPing) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_bHadSuccessfulResponse) == 12 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_bHadSuccessfulResponse) >= 1 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_bDoNotRefresh) == 13 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_bDoNotRefresh) >= 1 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_szGameDir) == 14 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_szGameDir) >= 32 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_szMap) == 46 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_szMap) >= 32 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_szGameDescription) == 78 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_szGameDescription) >= 64 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_nAppID) == 144 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_nAppID) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_nPlayers) == 148 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_nPlayers) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_nMaxPlayers) == 152 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_nMaxPlayers) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_nBotPlayers) == 156 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_nBotPlayers) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_bPassword) == 160 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_bPassword) >= 1 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_bSecure) == 161 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_bSecure) >= 1 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_ulTimeLastPlayed) == 164 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_ulTimeLastPlayed) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_nServerVersion) == 168 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_nServerVersion) >= 4 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_szServerName) == 172 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_szServerName) >= 64 );
C_ASSERT( offsetof(gameserveritem_t_099u, m_szGameTags) == 236 );
C_ASSERT( sizeof(gameserveritem_t_099u().m_szGameTags) >= 128 );

C_ASSERT( sizeof(w64_SteamUGCDetails_t_160) >= 9784 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_eResult) == 8 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_eFileType) == 12 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_eFileType) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_ulSteamIDOwner) == 8160 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_rtimeCreated) == 8168 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_rtimeUpdated) == 8172 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_rtimeAddedToUserList) == 8176 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_eVisibility) == 8180 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_bBanned) == 8184 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_bAcceptedForUse) == 8185 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_bTagsTruncated) == 8186 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_rgchTags) == 8187 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_hFile) == 9216 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_hPreviewFile) == 9224 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_pchFileName) == 9232 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_nFileSize) == 9492 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_nPreviewFileSize) == 9496 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_rgchURL) == 9500 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_unVotesUp) == 9756 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_unVotesDown) == 9760 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_flScore) == 9764 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_flScore) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_unNumChildren) == 9768 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_unNumChildren) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_160, m_ulTotalFilesSize) == 9776 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_160().m_ulTotalFilesSize) >= 8 );

C_ASSERT( sizeof(u64_SteamUGCDetails_t_160) >= 9772 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_eResult) == 8 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_eFileType) == 12 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_eFileType) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_ulSteamIDOwner) == 8156 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_rtimeCreated) == 8164 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_rtimeUpdated) == 8168 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_rtimeAddedToUserList) == 8172 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_eVisibility) == 8176 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_bBanned) == 8180 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_bAcceptedForUse) == 8181 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_bTagsTruncated) == 8182 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_rgchTags) == 8183 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_hFile) == 9208 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_hPreviewFile) == 9216 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_pchFileName) == 9224 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_nFileSize) == 9484 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_rgchURL) == 9492 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_unVotesUp) == 9748 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_unVotesDown) == 9752 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_flScore) == 9756 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_flScore) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_unNumChildren) == 9760 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_unNumChildren) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_160, m_ulTotalFilesSize) == 9764 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_160().m_ulTotalFilesSize) >= 8 );

C_ASSERT( sizeof(w32_SteamUGCDetails_t_160) >= 9784 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_eResult) == 8 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_eFileType) == 12 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_eFileType) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_ulSteamIDOwner) == 8160 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_rtimeCreated) == 8168 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_rtimeUpdated) == 8172 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_rtimeAddedToUserList) == 8176 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_eVisibility) == 8180 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_bBanned) == 8184 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_bAcceptedForUse) == 8185 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_bTagsTruncated) == 8186 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_rgchTags) == 8187 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_hFile) == 9216 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_hPreviewFile) == 9224 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_pchFileName) == 9232 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_nFileSize) == 9492 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_nPreviewFileSize) == 9496 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_rgchURL) == 9500 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_unVotesUp) == 9756 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_unVotesDown) == 9760 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_flScore) == 9764 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_flScore) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_unNumChildren) == 9768 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_unNumChildren) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_160, m_ulTotalFilesSize) == 9776 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_160().m_ulTotalFilesSize) >= 8 );

C_ASSERT( sizeof(u32_SteamUGCDetails_t_160) >= 9772 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_eResult) == 8 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_eFileType) == 12 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_eFileType) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_ulSteamIDOwner) == 8156 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_rtimeCreated) == 8164 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_rtimeUpdated) == 8168 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_rtimeAddedToUserList) == 8172 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_eVisibility) == 8176 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_bBanned) == 8180 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_bAcceptedForUse) == 8181 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_bTagsTruncated) == 8182 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_rgchTags) == 8183 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_hFile) == 9208 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_hPreviewFile) == 9216 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_pchFileName) == 9224 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_nFileSize) == 9484 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_rgchURL) == 9492 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_unVotesUp) == 9748 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_unVotesDown) == 9752 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_flScore) == 9756 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_flScore) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_unNumChildren) == 9760 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_unNumChildren) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_160, m_ulTotalFilesSize) == 9764 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_160().m_ulTotalFilesSize) >= 8 );

C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x) >= 9776 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_eResult) == 8 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_eFileType) == 12 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_eFileType) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_ulSteamIDOwner) == 8160 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_rtimeCreated) == 8168 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_rtimeUpdated) == 8172 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_rtimeAddedToUserList) == 8176 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_eVisibility) == 8180 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_bBanned) == 8184 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_bAcceptedForUse) == 8185 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_bTagsTruncated) == 8186 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_rgchTags) == 8187 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_hFile) == 9216 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_hPreviewFile) == 9224 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_pchFileName) == 9232 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_nFileSize) == 9492 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_nPreviewFileSize) == 9496 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_rgchURL) == 9500 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_unVotesUp) == 9756 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_unVotesDown) == 9760 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_flScore) == 9764 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_flScore) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_128x, m_unNumChildren) == 9768 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_128x().m_unNumChildren) >= 4 );

C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x) >= 9764 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_eResult) == 8 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_eFileType) == 12 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_eFileType) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_ulSteamIDOwner) == 8156 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_rtimeCreated) == 8164 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_rtimeUpdated) == 8168 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_rtimeAddedToUserList) == 8172 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_eVisibility) == 8176 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_bBanned) == 8180 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_bAcceptedForUse) == 8181 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_bTagsTruncated) == 8182 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_rgchTags) == 8183 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_hFile) == 9208 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_hPreviewFile) == 9216 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_pchFileName) == 9224 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_nFileSize) == 9484 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_rgchURL) == 9492 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_unVotesUp) == 9748 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_unVotesDown) == 9752 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_flScore) == 9756 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_flScore) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_128x, m_unNumChildren) == 9760 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_128x().m_unNumChildren) >= 4 );

C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x) >= 9776 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_eResult) == 8 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_eFileType) == 12 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_eFileType) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_ulSteamIDOwner) == 8160 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_rtimeCreated) == 8168 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_rtimeUpdated) == 8172 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_rtimeAddedToUserList) == 8176 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_eVisibility) == 8180 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_bBanned) == 8184 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_bAcceptedForUse) == 8185 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_bTagsTruncated) == 8186 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_rgchTags) == 8187 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_hFile) == 9216 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_hPreviewFile) == 9224 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_pchFileName) == 9232 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_nFileSize) == 9492 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_nPreviewFileSize) == 9496 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_rgchURL) == 9500 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_unVotesUp) == 9756 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_unVotesDown) == 9760 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_flScore) == 9764 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_flScore) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_128x, m_unNumChildren) == 9768 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_128x().m_unNumChildren) >= 4 );

C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x) >= 9764 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_eResult) == 8 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_eFileType) == 12 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_eFileType) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_ulSteamIDOwner) == 8156 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_rtimeCreated) == 8164 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_rtimeUpdated) == 8168 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_rtimeAddedToUserList) == 8172 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_eVisibility) == 8176 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_bBanned) == 8180 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_bAcceptedForUse) == 8181 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_bTagsTruncated) == 8182 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_rgchTags) == 8183 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_hFile) == 9208 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_hPreviewFile) == 9216 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_pchFileName) == 9224 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_nFileSize) == 9484 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_rgchURL) == 9492 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_unVotesUp) == 9748 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_unVotesDown) == 9752 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_flScore) == 9756 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_flScore) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_128x, m_unNumChildren) == 9760 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_128x().m_unNumChildren) >= 4 );

C_ASSERT( sizeof(w64_SteamUGCDetails_t_126) >= 9768 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_eResult) == 8 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_eFileType) == 12 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_eFileType) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_ulSteamIDOwner) == 8160 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_rtimeCreated) == 8168 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_rtimeUpdated) == 8172 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_rtimeAddedToUserList) == 8176 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_eVisibility) == 8180 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_bBanned) == 8184 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_bAcceptedForUse) == 8185 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_bTagsTruncated) == 8186 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_rgchTags) == 8187 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_hFile) == 9216 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_hPreviewFile) == 9224 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_pchFileName) == 9232 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_nFileSize) == 9492 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_nPreviewFileSize) == 9496 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_rgchURL) == 9500 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_unVotesUp) == 9756 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_unVotesDown) == 9760 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(w64_SteamUGCDetails_t_126, m_flScore) == 9764 );
C_ASSERT( sizeof(w64_SteamUGCDetails_t_126().m_flScore) >= 4 );

C_ASSERT( sizeof(u64_SteamUGCDetails_t_126) >= 9760 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_eResult) == 8 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_eFileType) == 12 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_eFileType) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_ulSteamIDOwner) == 8156 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_rtimeCreated) == 8164 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_rtimeUpdated) == 8168 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_rtimeAddedToUserList) == 8172 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_eVisibility) == 8176 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_bBanned) == 8180 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_bAcceptedForUse) == 8181 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_bTagsTruncated) == 8182 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_rgchTags) == 8183 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_hFile) == 9208 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_hPreviewFile) == 9216 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_pchFileName) == 9224 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_nFileSize) == 9484 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_rgchURL) == 9492 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_unVotesUp) == 9748 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_unVotesDown) == 9752 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(u64_SteamUGCDetails_t_126, m_flScore) == 9756 );
C_ASSERT( sizeof(u64_SteamUGCDetails_t_126().m_flScore) >= 4 );

C_ASSERT( sizeof(w32_SteamUGCDetails_t_126) >= 9768 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_eResult) == 8 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_eFileType) == 12 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_eFileType) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_ulSteamIDOwner) == 8160 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_rtimeCreated) == 8168 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_rtimeUpdated) == 8172 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_rtimeAddedToUserList) == 8176 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_eVisibility) == 8180 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_bBanned) == 8184 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_bAcceptedForUse) == 8185 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_bTagsTruncated) == 8186 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_rgchTags) == 8187 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_hFile) == 9216 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_hPreviewFile) == 9224 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_pchFileName) == 9232 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_nFileSize) == 9492 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_nPreviewFileSize) == 9496 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_rgchURL) == 9500 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_unVotesUp) == 9756 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_unVotesDown) == 9760 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(w32_SteamUGCDetails_t_126, m_flScore) == 9764 );
C_ASSERT( sizeof(w32_SteamUGCDetails_t_126().m_flScore) >= 4 );

C_ASSERT( sizeof(u32_SteamUGCDetails_t_126) >= 9760 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_eResult) == 8 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_eFileType) == 12 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_eFileType) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_ulSteamIDOwner) == 8156 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_rtimeCreated) == 8164 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_rtimeUpdated) == 8168 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_rtimeAddedToUserList) == 8172 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_rtimeAddedToUserList) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_eVisibility) == 8176 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_bBanned) == 8180 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_bAcceptedForUse) == 8181 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_bAcceptedForUse) >= 1 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_bTagsTruncated) == 8182 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_rgchTags) == 8183 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_hFile) == 9208 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_hPreviewFile) == 9216 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_pchFileName) == 9224 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_nFileSize) == 9484 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_rgchURL) == 9492 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_unVotesUp) == 9748 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_unVotesUp) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_unVotesDown) == 9752 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_unVotesDown) >= 4 );
C_ASSERT( offsetof(u32_SteamUGCDetails_t_126, m_flScore) == 9756 );
C_ASSERT( sizeof(u32_SteamUGCDetails_t_126().m_flScore) >= 4 );

static void SteamUGCDetails_t_160_u_from_w(void *dst, const void *src)
{
    u_SteamUGCDetails_t_160 *d = (u_SteamUGCDetails_t_160 *)dst;
    const w_SteamUGCDetails_t_160 *s = (const w_SteamUGCDetails_t_160 *)src;

    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eResult = s->m_eResult;
    d->m_eFileType = s->m_eFileType;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_rtimeAddedToUserList = s->m_rtimeAddedToUserList;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_bAcceptedForUse = s->m_bAcceptedForUse;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_rgchTags = s->m_rgchTags;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_unVotesUp = s->m_unVotesUp;
    d->m_unVotesDown = s->m_unVotesDown;
    d->m_flScore = s->m_flScore;
    d->m_unNumChildren = s->m_unNumChildren;
    d->m_ulTotalFilesSize = s->m_ulTotalFilesSize;
}
#ifdef __x86_64__
w64_SteamUGCDetails_t_160::operator u64_SteamUGCDetails_t_160() const
{
    u64_SteamUGCDetails_t_160 ret;
    SteamUGCDetails_t_160_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamUGCDetails_t_160_w_from_u(void *dst, const void *src)
{
    w_SteamUGCDetails_t_160 *d = (w_SteamUGCDetails_t_160 *)dst;
    const u_SteamUGCDetails_t_160 *s = (const u_SteamUGCDetails_t_160 *)src;

    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eResult = s->m_eResult;
    d->m_eFileType = s->m_eFileType;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_rtimeAddedToUserList = s->m_rtimeAddedToUserList;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_bAcceptedForUse = s->m_bAcceptedForUse;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_rgchTags = s->m_rgchTags;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_unVotesUp = s->m_unVotesUp;
    d->m_unVotesDown = s->m_unVotesDown;
    d->m_flScore = s->m_flScore;
    d->m_unNumChildren = s->m_unNumChildren;
    d->m_ulTotalFilesSize = s->m_ulTotalFilesSize;
}
#ifdef __x86_64__
u64_SteamUGCDetails_t_160::operator w64_SteamUGCDetails_t_160() const
{
    w64_SteamUGCDetails_t_160 ret;
    SteamUGCDetails_t_160_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamUGCDetails_t_160::operator u32_SteamUGCDetails_t_160() const
{
    u32_SteamUGCDetails_t_160 ret;
    SteamUGCDetails_t_160_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamUGCDetails_t_160::operator w32_SteamUGCDetails_t_160() const
{
    w32_SteamUGCDetails_t_160 ret;
    SteamUGCDetails_t_160_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void SteamUGCDetails_t_128x_u_from_w(void *dst, const void *src)
{
    u_SteamUGCDetails_t_128x *d = (u_SteamUGCDetails_t_128x *)dst;
    const w_SteamUGCDetails_t_128x *s = (const w_SteamUGCDetails_t_128x *)src;

    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eResult = s->m_eResult;
    d->m_eFileType = s->m_eFileType;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_rtimeAddedToUserList = s->m_rtimeAddedToUserList;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_bAcceptedForUse = s->m_bAcceptedForUse;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_rgchTags = s->m_rgchTags;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_unVotesUp = s->m_unVotesUp;
    d->m_unVotesDown = s->m_unVotesDown;
    d->m_flScore = s->m_flScore;
    d->m_unNumChildren = s->m_unNumChildren;
}
#ifdef __x86_64__
w64_SteamUGCDetails_t_128x::operator u64_SteamUGCDetails_t_128x() const
{
    u64_SteamUGCDetails_t_128x ret;
    SteamUGCDetails_t_128x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamUGCDetails_t_128x_w_from_u(void *dst, const void *src)
{
    w_SteamUGCDetails_t_128x *d = (w_SteamUGCDetails_t_128x *)dst;
    const u_SteamUGCDetails_t_128x *s = (const u_SteamUGCDetails_t_128x *)src;

    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eResult = s->m_eResult;
    d->m_eFileType = s->m_eFileType;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_rtimeAddedToUserList = s->m_rtimeAddedToUserList;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_bAcceptedForUse = s->m_bAcceptedForUse;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_rgchTags = s->m_rgchTags;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_unVotesUp = s->m_unVotesUp;
    d->m_unVotesDown = s->m_unVotesDown;
    d->m_flScore = s->m_flScore;
    d->m_unNumChildren = s->m_unNumChildren;
}
#ifdef __x86_64__
u64_SteamUGCDetails_t_128x::operator w64_SteamUGCDetails_t_128x() const
{
    w64_SteamUGCDetails_t_128x ret;
    SteamUGCDetails_t_128x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamUGCDetails_t_128x::operator u32_SteamUGCDetails_t_128x() const
{
    u32_SteamUGCDetails_t_128x ret;
    SteamUGCDetails_t_128x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamUGCDetails_t_128x::operator w32_SteamUGCDetails_t_128x() const
{
    w32_SteamUGCDetails_t_128x ret;
    SteamUGCDetails_t_128x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void SteamUGCDetails_t_126_u_from_w(void *dst, const void *src)
{
    u_SteamUGCDetails_t_126 *d = (u_SteamUGCDetails_t_126 *)dst;
    const w_SteamUGCDetails_t_126 *s = (const w_SteamUGCDetails_t_126 *)src;

    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eResult = s->m_eResult;
    d->m_eFileType = s->m_eFileType;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_rtimeAddedToUserList = s->m_rtimeAddedToUserList;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_bAcceptedForUse = s->m_bAcceptedForUse;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_rgchTags = s->m_rgchTags;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_unVotesUp = s->m_unVotesUp;
    d->m_unVotesDown = s->m_unVotesDown;
    d->m_flScore = s->m_flScore;
}
#ifdef __x86_64__
w64_SteamUGCDetails_t_126::operator u64_SteamUGCDetails_t_126() const
{
    u64_SteamUGCDetails_t_126 ret;
    SteamUGCDetails_t_126_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamUGCDetails_t_126_w_from_u(void *dst, const void *src)
{
    w_SteamUGCDetails_t_126 *d = (w_SteamUGCDetails_t_126 *)dst;
    const u_SteamUGCDetails_t_126 *s = (const u_SteamUGCDetails_t_126 *)src;

    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eResult = s->m_eResult;
    d->m_eFileType = s->m_eFileType;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_rtimeAddedToUserList = s->m_rtimeAddedToUserList;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_bAcceptedForUse = s->m_bAcceptedForUse;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_rgchTags = s->m_rgchTags;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_unVotesUp = s->m_unVotesUp;
    d->m_unVotesDown = s->m_unVotesDown;
    d->m_flScore = s->m_flScore;
}
#ifdef __x86_64__
u64_SteamUGCDetails_t_126::operator w64_SteamUGCDetails_t_126() const
{
    w64_SteamUGCDetails_t_126 ret;
    SteamUGCDetails_t_126_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamUGCDetails_t_126::operator u32_SteamUGCDetails_t_126() const
{
    u32_SteamUGCDetails_t_126 ret;
    SteamUGCDetails_t_126_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamUGCDetails_t_126::operator w32_SteamUGCDetails_t_126() const
{
    w32_SteamUGCDetails_t_126 ret;
    SteamUGCDetails_t_126_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_AddAppDependencyResult_t) >= 24 );
C_ASSERT( offsetof(w64_AddAppDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_AddAppDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_AddAppDependencyResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_AddAppDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_AddAppDependencyResult_t, m_nAppID) == 16 );
C_ASSERT( sizeof(w64_AddAppDependencyResult_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(u64_AddAppDependencyResult_t) >= 16 );
C_ASSERT( offsetof(u64_AddAppDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_AddAppDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_AddAppDependencyResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_AddAppDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_AddAppDependencyResult_t, m_nAppID) == 12 );
C_ASSERT( sizeof(u64_AddAppDependencyResult_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(w32_AddAppDependencyResult_t) >= 24 );
C_ASSERT( offsetof(w32_AddAppDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_AddAppDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_AddAppDependencyResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_AddAppDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_AddAppDependencyResult_t, m_nAppID) == 16 );
C_ASSERT( sizeof(w32_AddAppDependencyResult_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(u32_AddAppDependencyResult_t) >= 16 );
C_ASSERT( offsetof(u32_AddAppDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_AddAppDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_AddAppDependencyResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_AddAppDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_AddAppDependencyResult_t, m_nAppID) == 12 );
C_ASSERT( sizeof(u32_AddAppDependencyResult_t().m_nAppID) >= 4 );

static void AddAppDependencyResult_t_u_from_w(void *dst, const void *src)
{
    u_AddAppDependencyResult_t *d = (u_AddAppDependencyResult_t *)dst;
    const w_AddAppDependencyResult_t *s = (const w_AddAppDependencyResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nAppID = s->m_nAppID;
}
#ifdef __x86_64__
w64_AddAppDependencyResult_t::operator u64_AddAppDependencyResult_t() const
{
    u64_AddAppDependencyResult_t ret;
    AddAppDependencyResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void AddAppDependencyResult_t_w_from_u(void *dst, const void *src)
{
    w_AddAppDependencyResult_t *d = (w_AddAppDependencyResult_t *)dst;
    const u_AddAppDependencyResult_t *s = (const u_AddAppDependencyResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nAppID = s->m_nAppID;
}
#ifdef __x86_64__
u64_AddAppDependencyResult_t::operator w64_AddAppDependencyResult_t() const
{
    w64_AddAppDependencyResult_t ret;
    AddAppDependencyResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_AddAppDependencyResult_t::operator u32_AddAppDependencyResult_t() const
{
    u32_AddAppDependencyResult_t ret;
    AddAppDependencyResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_AddAppDependencyResult_t::operator w32_AddAppDependencyResult_t() const
{
    w32_AddAppDependencyResult_t ret;
    AddAppDependencyResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_AddUGCDependencyResult_t) >= 24 );
C_ASSERT( offsetof(w64_AddUGCDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_AddUGCDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_AddUGCDependencyResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_AddUGCDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_AddUGCDependencyResult_t, m_nChildPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_AddUGCDependencyResult_t().m_nChildPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_AddUGCDependencyResult_t) >= 20 );
C_ASSERT( offsetof(u64_AddUGCDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_AddUGCDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_AddUGCDependencyResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_AddUGCDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_AddUGCDependencyResult_t, m_nChildPublishedFileId) == 12 );
C_ASSERT( sizeof(u64_AddUGCDependencyResult_t().m_nChildPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_AddUGCDependencyResult_t) >= 24 );
C_ASSERT( offsetof(w32_AddUGCDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_AddUGCDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_AddUGCDependencyResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_AddUGCDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_AddUGCDependencyResult_t, m_nChildPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_AddUGCDependencyResult_t().m_nChildPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_AddUGCDependencyResult_t) >= 20 );
C_ASSERT( offsetof(u32_AddUGCDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_AddUGCDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_AddUGCDependencyResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_AddUGCDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_AddUGCDependencyResult_t, m_nChildPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_AddUGCDependencyResult_t().m_nChildPublishedFileId) >= 8 );

static void AddUGCDependencyResult_t_u_from_w(void *dst, const void *src)
{
    u_AddUGCDependencyResult_t *d = (u_AddUGCDependencyResult_t *)dst;
    const w_AddUGCDependencyResult_t *s = (const w_AddUGCDependencyResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nChildPublishedFileId = s->m_nChildPublishedFileId;
}
#ifdef __x86_64__
w64_AddUGCDependencyResult_t::operator u64_AddUGCDependencyResult_t() const
{
    u64_AddUGCDependencyResult_t ret;
    AddUGCDependencyResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void AddUGCDependencyResult_t_w_from_u(void *dst, const void *src)
{
    w_AddUGCDependencyResult_t *d = (w_AddUGCDependencyResult_t *)dst;
    const u_AddUGCDependencyResult_t *s = (const u_AddUGCDependencyResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nChildPublishedFileId = s->m_nChildPublishedFileId;
}
#ifdef __x86_64__
u64_AddUGCDependencyResult_t::operator w64_AddUGCDependencyResult_t() const
{
    w64_AddUGCDependencyResult_t ret;
    AddUGCDependencyResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_AddUGCDependencyResult_t::operator u32_AddUGCDependencyResult_t() const
{
    u32_AddUGCDependencyResult_t ret;
    AddUGCDependencyResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_AddUGCDependencyResult_t::operator w32_AddUGCDependencyResult_t() const
{
    w32_AddUGCDependencyResult_t ret;
    AddUGCDependencyResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_CSteamAPIContext_141) >= 176 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamUser) == 8 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamUser) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamFriends) == 16 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamFriends) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamUtils) == 24 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamUtils) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamMatchmaking) == 32 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamMatchmaking) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamGameSearch) == 40 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamGameSearch) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamUserStats) == 48 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamUserStats) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamApps) == 56 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamApps) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamMatchmakingServers) == 64 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamMatchmakingServers) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamNetworking) == 72 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamNetworking) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamRemoteStorage) == 80 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamRemoteStorage) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamScreenshots) == 88 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamScreenshots) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamHTTP) == 96 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pController) == 104 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pController) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamUGC) == 112 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamMusic) == 120 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamMusic) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamMusicRemote) == 128 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamMusicRemote) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamHTMLSurface) == 136 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamHTMLSurface) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamInventory) == 144 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamVideo) == 152 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamVideo) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamParentalSettings) == 160 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamParentalSettings) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_141, m_pSteamInput) == 168 );
C_ASSERT( sizeof(w64_CSteamAPIContext_141().m_pSteamInput) >= 8 );

C_ASSERT( sizeof(u64_CSteamAPIContext_141) >= 176 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamUser) == 8 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamUser) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamFriends) == 16 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamFriends) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamUtils) == 24 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamUtils) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamMatchmaking) == 32 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamMatchmaking) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamGameSearch) == 40 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamGameSearch) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamUserStats) == 48 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamUserStats) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamApps) == 56 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamApps) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamMatchmakingServers) == 64 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamMatchmakingServers) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamNetworking) == 72 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamNetworking) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamRemoteStorage) == 80 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamRemoteStorage) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamScreenshots) == 88 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamScreenshots) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamHTTP) == 96 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pController) == 104 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pController) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamUGC) == 112 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamMusic) == 120 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamMusic) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamMusicRemote) == 128 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamMusicRemote) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamHTMLSurface) == 136 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamHTMLSurface) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamInventory) == 144 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamVideo) == 152 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamVideo) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamParentalSettings) == 160 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamParentalSettings) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_141, m_pSteamInput) == 168 );
C_ASSERT( sizeof(u64_CSteamAPIContext_141().m_pSteamInput) >= 8 );

C_ASSERT( sizeof(w32_CSteamAPIContext_141) >= 88 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamUser) == 4 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamUser) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamFriends) == 8 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamFriends) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamUtils) == 12 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamUtils) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamMatchmaking) == 16 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamMatchmaking) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamGameSearch) == 20 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamGameSearch) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamUserStats) == 24 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamUserStats) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamApps) == 28 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamApps) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamMatchmakingServers) == 32 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamMatchmakingServers) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamNetworking) == 36 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamNetworking) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamRemoteStorage) == 40 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamRemoteStorage) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamScreenshots) == 44 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamScreenshots) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamHTTP) == 48 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pController) == 52 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pController) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamMusic) == 60 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamMusic) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamMusicRemote) == 64 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamMusicRemote) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamHTMLSurface) == 68 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamHTMLSurface) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamInventory) == 72 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamVideo) == 76 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamVideo) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamParentalSettings) == 80 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamParentalSettings) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_141, m_pSteamInput) == 84 );
C_ASSERT( sizeof(w32_CSteamAPIContext_141().m_pSteamInput) >= 4 );

C_ASSERT( sizeof(u32_CSteamAPIContext_141) >= 88 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamUser) == 4 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamUser) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamFriends) == 8 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamFriends) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamUtils) == 12 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamUtils) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamMatchmaking) == 16 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamMatchmaking) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamGameSearch) == 20 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamGameSearch) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamUserStats) == 24 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamUserStats) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamApps) == 28 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamApps) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamMatchmakingServers) == 32 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamMatchmakingServers) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamNetworking) == 36 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamNetworking) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamRemoteStorage) == 40 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamRemoteStorage) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamScreenshots) == 44 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamScreenshots) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamHTTP) == 48 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pController) == 52 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pController) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamMusic) == 60 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamMusic) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamMusicRemote) == 64 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamMusicRemote) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamHTMLSurface) == 68 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamHTMLSurface) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamInventory) == 72 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamVideo) == 76 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamVideo) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamParentalSettings) == 80 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamParentalSettings) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_141, m_pSteamInput) == 84 );
C_ASSERT( sizeof(u32_CSteamAPIContext_141().m_pSteamInput) >= 4 );

C_ASSERT( sizeof(w64_CSteamAPIContext_143) >= 184 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamUser) == 8 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamUser) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamFriends) == 16 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamFriends) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamUtils) == 24 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamUtils) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamMatchmaking) == 32 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamMatchmaking) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamGameSearch) == 40 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamGameSearch) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamUserStats) == 48 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamUserStats) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamApps) == 56 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamApps) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamMatchmakingServers) == 64 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamMatchmakingServers) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamNetworking) == 72 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamNetworking) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamRemoteStorage) == 80 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamRemoteStorage) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamScreenshots) == 88 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamScreenshots) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamHTTP) == 96 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pController) == 104 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pController) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamUGC) == 112 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamAppList) == 120 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamAppList) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamMusic) == 128 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamMusic) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamMusicRemote) == 136 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamMusicRemote) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamHTMLSurface) == 144 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamHTMLSurface) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamInventory) == 152 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamVideo) == 160 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamVideo) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamParentalSettings) == 168 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamParentalSettings) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_143, m_pSteamInput) == 176 );
C_ASSERT( sizeof(w64_CSteamAPIContext_143().m_pSteamInput) >= 8 );

C_ASSERT( sizeof(u64_CSteamAPIContext_143) >= 184 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamUser) == 8 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamUser) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamFriends) == 16 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamFriends) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamUtils) == 24 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamUtils) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamMatchmaking) == 32 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamMatchmaking) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamGameSearch) == 40 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamGameSearch) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamUserStats) == 48 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamUserStats) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamApps) == 56 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamApps) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamMatchmakingServers) == 64 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamMatchmakingServers) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamNetworking) == 72 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamNetworking) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamRemoteStorage) == 80 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamRemoteStorage) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamScreenshots) == 88 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamScreenshots) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamHTTP) == 96 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pController) == 104 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pController) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamUGC) == 112 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamAppList) == 120 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamAppList) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamMusic) == 128 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamMusic) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamMusicRemote) == 136 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamMusicRemote) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamHTMLSurface) == 144 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamHTMLSurface) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamInventory) == 152 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamVideo) == 160 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamVideo) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamParentalSettings) == 168 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamParentalSettings) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_143, m_pSteamInput) == 176 );
C_ASSERT( sizeof(u64_CSteamAPIContext_143().m_pSteamInput) >= 8 );

C_ASSERT( sizeof(w32_CSteamAPIContext_143) >= 92 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamUser) == 4 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamUser) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamFriends) == 8 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamFriends) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamUtils) == 12 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamUtils) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamMatchmaking) == 16 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamMatchmaking) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamGameSearch) == 20 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamGameSearch) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamUserStats) == 24 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamUserStats) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamApps) == 28 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamApps) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamMatchmakingServers) == 32 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamMatchmakingServers) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamNetworking) == 36 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamNetworking) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamRemoteStorage) == 40 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamRemoteStorage) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamScreenshots) == 44 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamScreenshots) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamHTTP) == 48 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pController) == 52 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pController) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamAppList) == 60 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamAppList) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamMusic) == 64 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamMusic) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamMusicRemote) == 68 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamMusicRemote) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamHTMLSurface) == 72 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamHTMLSurface) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamInventory) == 76 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamVideo) == 80 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamVideo) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamParentalSettings) == 84 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamParentalSettings) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_143, m_pSteamInput) == 88 );
C_ASSERT( sizeof(w32_CSteamAPIContext_143().m_pSteamInput) >= 4 );

C_ASSERT( sizeof(u32_CSteamAPIContext_143) >= 92 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamUser) == 4 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamUser) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamFriends) == 8 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamFriends) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamUtils) == 12 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamUtils) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamMatchmaking) == 16 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamMatchmaking) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamGameSearch) == 20 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamGameSearch) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamUserStats) == 24 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamUserStats) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamApps) == 28 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamApps) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamMatchmakingServers) == 32 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamMatchmakingServers) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamNetworking) == 36 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamNetworking) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamRemoteStorage) == 40 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamRemoteStorage) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamScreenshots) == 44 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamScreenshots) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamHTTP) == 48 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pController) == 52 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pController) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamAppList) == 60 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamAppList) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamMusic) == 64 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamMusic) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamMusicRemote) == 68 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamMusicRemote) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamHTMLSurface) == 72 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamHTMLSurface) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamInventory) == 76 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamVideo) == 80 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamVideo) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamParentalSettings) == 84 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamParentalSettings) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_143, m_pSteamInput) == 88 );
C_ASSERT( sizeof(u32_CSteamAPIContext_143().m_pSteamInput) >= 4 );

C_ASSERT( sizeof(w64_CSteamAPIContext_145) >= 192 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamUser) == 8 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamUser) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamFriends) == 16 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamFriends) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamUtils) == 24 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamUtils) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamMatchmaking) == 32 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamMatchmaking) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamGameSearch) == 40 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamGameSearch) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamUserStats) == 48 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamUserStats) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamApps) == 56 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamApps) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamMatchmakingServers) == 64 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamMatchmakingServers) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamNetworking) == 72 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamNetworking) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamRemoteStorage) == 80 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamRemoteStorage) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamScreenshots) == 88 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamScreenshots) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamHTTP) == 96 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pController) == 104 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pController) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamUGC) == 112 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamAppList) == 120 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamAppList) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamMusic) == 128 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamMusic) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamMusicRemote) == 136 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamMusicRemote) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamHTMLSurface) == 144 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamHTMLSurface) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamInventory) == 152 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamVideo) == 160 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamVideo) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamTV) == 168 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamTV) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamParentalSettings) == 176 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamParentalSettings) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_145, m_pSteamInput) == 184 );
C_ASSERT( sizeof(w64_CSteamAPIContext_145().m_pSteamInput) >= 8 );

C_ASSERT( sizeof(u64_CSteamAPIContext_145) >= 192 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamUser) == 8 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamUser) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamFriends) == 16 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamFriends) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamUtils) == 24 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamUtils) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamMatchmaking) == 32 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamMatchmaking) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamGameSearch) == 40 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamGameSearch) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamUserStats) == 48 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamUserStats) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamApps) == 56 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamApps) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamMatchmakingServers) == 64 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamMatchmakingServers) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamNetworking) == 72 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamNetworking) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamRemoteStorage) == 80 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamRemoteStorage) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamScreenshots) == 88 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamScreenshots) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamHTTP) == 96 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pController) == 104 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pController) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamUGC) == 112 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamAppList) == 120 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamAppList) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamMusic) == 128 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamMusic) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamMusicRemote) == 136 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamMusicRemote) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamHTMLSurface) == 144 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamHTMLSurface) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamInventory) == 152 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamVideo) == 160 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamVideo) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamTV) == 168 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamTV) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamParentalSettings) == 176 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamParentalSettings) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_145, m_pSteamInput) == 184 );
C_ASSERT( sizeof(u64_CSteamAPIContext_145().m_pSteamInput) >= 8 );

C_ASSERT( sizeof(w32_CSteamAPIContext_145) >= 96 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamUser) == 4 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamUser) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamFriends) == 8 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamFriends) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamUtils) == 12 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamUtils) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamMatchmaking) == 16 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamMatchmaking) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamGameSearch) == 20 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamGameSearch) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamUserStats) == 24 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamUserStats) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamApps) == 28 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamApps) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamMatchmakingServers) == 32 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamMatchmakingServers) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamNetworking) == 36 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamNetworking) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamRemoteStorage) == 40 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamRemoteStorage) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamScreenshots) == 44 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamScreenshots) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamHTTP) == 48 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pController) == 52 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pController) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamAppList) == 60 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamAppList) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamMusic) == 64 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamMusic) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamMusicRemote) == 68 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamMusicRemote) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamHTMLSurface) == 72 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamHTMLSurface) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamInventory) == 76 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamVideo) == 80 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamVideo) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamTV) == 84 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamTV) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamParentalSettings) == 88 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamParentalSettings) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_145, m_pSteamInput) == 92 );
C_ASSERT( sizeof(w32_CSteamAPIContext_145().m_pSteamInput) >= 4 );

C_ASSERT( sizeof(u32_CSteamAPIContext_145) >= 96 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamUser) == 4 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamUser) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamFriends) == 8 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamFriends) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamUtils) == 12 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamUtils) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamMatchmaking) == 16 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamMatchmaking) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamGameSearch) == 20 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamGameSearch) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamUserStats) == 24 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamUserStats) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamApps) == 28 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamApps) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamMatchmakingServers) == 32 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamMatchmakingServers) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamNetworking) == 36 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamNetworking) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamRemoteStorage) == 40 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamRemoteStorage) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamScreenshots) == 44 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamScreenshots) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamHTTP) == 48 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pController) == 52 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pController) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamAppList) == 60 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamAppList) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamMusic) == 64 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamMusic) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamMusicRemote) == 68 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamMusicRemote) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamHTMLSurface) == 72 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamHTMLSurface) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamInventory) == 76 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamVideo) == 80 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamVideo) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamTV) == 84 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamTV) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamParentalSettings) == 88 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamParentalSettings) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_145, m_pSteamInput) == 92 );
C_ASSERT( sizeof(u32_CSteamAPIContext_145().m_pSteamInput) >= 4 );

C_ASSERT( sizeof(w64_CSteamAPIContext_137) >= 168 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamUser) == 8 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamUser) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamFriends) == 16 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamFriends) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamUtils) == 24 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamUtils) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamMatchmaking) == 32 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamMatchmaking) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamUserStats) == 40 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamUserStats) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamApps) == 48 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamApps) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamMatchmakingServers) == 56 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamMatchmakingServers) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamNetworking) == 64 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamNetworking) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamRemoteStorage) == 72 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamRemoteStorage) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamScreenshots) == 80 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamScreenshots) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamHTTP) == 88 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pController) == 96 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pController) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamUGC) == 104 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamAppList) == 112 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamAppList) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamMusic) == 120 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamMusic) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamMusicRemote) == 128 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamMusicRemote) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamHTMLSurface) == 136 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamHTMLSurface) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamInventory) == 144 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamVideo) == 152 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamVideo) >= 8 );
C_ASSERT( offsetof(w64_CSteamAPIContext_137, m_pSteamParentalSettings) == 160 );
C_ASSERT( sizeof(w64_CSteamAPIContext_137().m_pSteamParentalSettings) >= 8 );

C_ASSERT( sizeof(u64_CSteamAPIContext_137) >= 168 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamUser) == 8 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamUser) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamFriends) == 16 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamFriends) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamUtils) == 24 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamUtils) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamMatchmaking) == 32 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamMatchmaking) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamUserStats) == 40 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamUserStats) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamApps) == 48 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamApps) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamMatchmakingServers) == 56 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamMatchmakingServers) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamNetworking) == 64 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamNetworking) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamRemoteStorage) == 72 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamRemoteStorage) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamScreenshots) == 80 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamScreenshots) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamHTTP) == 88 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pController) == 96 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pController) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamUGC) == 104 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamAppList) == 112 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamAppList) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamMusic) == 120 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamMusic) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamMusicRemote) == 128 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamMusicRemote) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamHTMLSurface) == 136 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamHTMLSurface) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamInventory) == 144 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamVideo) == 152 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamVideo) >= 8 );
C_ASSERT( offsetof(u64_CSteamAPIContext_137, m_pSteamParentalSettings) == 160 );
C_ASSERT( sizeof(u64_CSteamAPIContext_137().m_pSteamParentalSettings) >= 8 );

C_ASSERT( sizeof(w32_CSteamAPIContext_137) >= 84 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamUser) == 4 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamUser) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamFriends) == 8 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamFriends) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamUtils) == 12 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamUtils) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamMatchmaking) == 16 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamMatchmaking) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamUserStats) == 20 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamUserStats) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamApps) == 24 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamApps) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamMatchmakingServers) == 28 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamMatchmakingServers) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamNetworking) == 32 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamNetworking) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamRemoteStorage) == 36 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamRemoteStorage) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamScreenshots) == 40 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamScreenshots) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamHTTP) == 44 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pController) == 48 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pController) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamUGC) == 52 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamAppList) == 56 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamAppList) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamMusic) == 60 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamMusic) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamMusicRemote) == 64 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamMusicRemote) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamHTMLSurface) == 68 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamHTMLSurface) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamInventory) == 72 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamVideo) == 76 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamVideo) >= 4 );
C_ASSERT( offsetof(w32_CSteamAPIContext_137, m_pSteamParentalSettings) == 80 );
C_ASSERT( sizeof(w32_CSteamAPIContext_137().m_pSteamParentalSettings) >= 4 );

C_ASSERT( sizeof(u32_CSteamAPIContext_137) >= 84 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamUser) == 4 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamUser) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamFriends) == 8 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamFriends) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamUtils) == 12 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamUtils) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamMatchmaking) == 16 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamMatchmaking) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamUserStats) == 20 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamUserStats) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamApps) == 24 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamApps) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamMatchmakingServers) == 28 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamMatchmakingServers) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamNetworking) == 32 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamNetworking) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamRemoteStorage) == 36 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamRemoteStorage) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamScreenshots) == 40 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamScreenshots) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamHTTP) == 44 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pController) == 48 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pController) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamUGC) == 52 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamAppList) == 56 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamAppList) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamMusic) == 60 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamMusic) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamMusicRemote) == 64 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamMusicRemote) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamHTMLSurface) == 68 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamHTMLSurface) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamInventory) == 72 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamVideo) == 76 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamVideo) >= 4 );
C_ASSERT( offsetof(u32_CSteamAPIContext_137, m_pSteamParentalSettings) == 80 );
C_ASSERT( sizeof(u32_CSteamAPIContext_137().m_pSteamParentalSettings) >= 4 );

C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_152) >= 64 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_152, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_152().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_152, m_pSteamGameServer) == 8 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_152().m_pSteamGameServer) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_152, m_pSteamGameServerUtils) == 16 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_152().m_pSteamGameServerUtils) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_152, m_pSteamGameServerNetworking) == 24 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_152().m_pSteamGameServerNetworking) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_152, m_pSteamGameServerStats) == 32 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_152().m_pSteamGameServerStats) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_152, m_pSteamHTTP) == 40 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_152().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_152, m_pSteamInventory) == 48 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_152().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_152, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_152().m_pSteamUGC) >= 8 );

C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_152) >= 64 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_152, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_152().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_152, m_pSteamGameServer) == 8 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_152().m_pSteamGameServer) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_152, m_pSteamGameServerUtils) == 16 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_152().m_pSteamGameServerUtils) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_152, m_pSteamGameServerNetworking) == 24 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_152().m_pSteamGameServerNetworking) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_152, m_pSteamGameServerStats) == 32 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_152().m_pSteamGameServerStats) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_152, m_pSteamHTTP) == 40 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_152().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_152, m_pSteamInventory) == 48 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_152().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_152, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_152().m_pSteamUGC) >= 8 );

C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_152) >= 32 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_152, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_152().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_152, m_pSteamGameServer) == 4 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_152().m_pSteamGameServer) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_152, m_pSteamGameServerUtils) == 8 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_152().m_pSteamGameServerUtils) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_152, m_pSteamGameServerNetworking) == 12 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_152().m_pSteamGameServerNetworking) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_152, m_pSteamGameServerStats) == 16 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_152().m_pSteamGameServerStats) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_152, m_pSteamHTTP) == 20 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_152().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_152, m_pSteamInventory) == 24 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_152().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_152, m_pSteamUGC) == 28 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_152().m_pSteamUGC) >= 4 );

C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_152) >= 32 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_152, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_152().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_152, m_pSteamGameServer) == 4 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_152().m_pSteamGameServer) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_152, m_pSteamGameServerUtils) == 8 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_152().m_pSteamGameServerUtils) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_152, m_pSteamGameServerNetworking) == 12 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_152().m_pSteamGameServerNetworking) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_152, m_pSteamGameServerStats) == 16 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_152().m_pSteamGameServerStats) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_152, m_pSteamHTTP) == 20 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_152().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_152, m_pSteamInventory) == 24 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_152().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_152, m_pSteamUGC) == 28 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_152().m_pSteamUGC) >= 4 );

C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143) >= 72 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_143, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_143, m_pSteamGameServer) == 8 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143().m_pSteamGameServer) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_143, m_pSteamGameServerUtils) == 16 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143().m_pSteamGameServerUtils) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_143, m_pSteamGameServerNetworking) == 24 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143().m_pSteamGameServerNetworking) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_143, m_pSteamGameServerStats) == 32 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143().m_pSteamGameServerStats) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_143, m_pSteamHTTP) == 40 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_143, m_pSteamInventory) == 48 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_143, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(w64_CSteamGameServerAPIContext_143, m_pSteamApps) == 64 );
C_ASSERT( sizeof(w64_CSteamGameServerAPIContext_143().m_pSteamApps) >= 8 );

C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143) >= 72 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_143, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143().m_pSteamClient) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_143, m_pSteamGameServer) == 8 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143().m_pSteamGameServer) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_143, m_pSteamGameServerUtils) == 16 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143().m_pSteamGameServerUtils) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_143, m_pSteamGameServerNetworking) == 24 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143().m_pSteamGameServerNetworking) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_143, m_pSteamGameServerStats) == 32 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143().m_pSteamGameServerStats) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_143, m_pSteamHTTP) == 40 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143().m_pSteamHTTP) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_143, m_pSteamInventory) == 48 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143().m_pSteamInventory) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_143, m_pSteamUGC) == 56 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143().m_pSteamUGC) >= 8 );
C_ASSERT( offsetof(u64_CSteamGameServerAPIContext_143, m_pSteamApps) == 64 );
C_ASSERT( sizeof(u64_CSteamGameServerAPIContext_143().m_pSteamApps) >= 8 );

C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143) >= 36 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_143, m_pSteamClient) == 0 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_143, m_pSteamGameServer) == 4 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143().m_pSteamGameServer) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_143, m_pSteamGameServerUtils) == 8 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143().m_pSteamGameServerUtils) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_143, m_pSteamGameServerNetworking) == 12 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143().m_pSteamGameServerNetworking) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_143, m_pSteamGameServerStats) == 16 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143().m_pSteamGameServerStats) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_143, m_pSteamHTTP) == 20 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_143, m_pSteamInventory) == 24 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_143, m_pSteamUGC) == 28 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(w32_CSteamGameServerAPIContext_143, m_pSteamApps) == 32 );
C_ASSERT( sizeof(w32_CSteamGameServerAPIContext_143().m_pSteamApps) >= 4 );

C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143) >= 36 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_143, m_pSteamClient) == 0 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143().m_pSteamClient) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_143, m_pSteamGameServer) == 4 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143().m_pSteamGameServer) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_143, m_pSteamGameServerUtils) == 8 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143().m_pSteamGameServerUtils) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_143, m_pSteamGameServerNetworking) == 12 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143().m_pSteamGameServerNetworking) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_143, m_pSteamGameServerStats) == 16 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143().m_pSteamGameServerStats) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_143, m_pSteamHTTP) == 20 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143().m_pSteamHTTP) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_143, m_pSteamInventory) == 24 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143().m_pSteamInventory) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_143, m_pSteamUGC) == 28 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143().m_pSteamUGC) >= 4 );
C_ASSERT( offsetof(u32_CSteamGameServerAPIContext_143, m_pSteamApps) == 32 );
C_ASSERT( sizeof(u32_CSteamGameServerAPIContext_143().m_pSteamApps) >= 4 );

C_ASSERT( sizeof(w64_CallbackMsg_t) >= 24 );
C_ASSERT( offsetof(w64_CallbackMsg_t, m_hSteamUser) == 0 );
C_ASSERT( sizeof(w64_CallbackMsg_t().m_hSteamUser) >= 4 );
C_ASSERT( offsetof(w64_CallbackMsg_t, m_iCallback) == 4 );
C_ASSERT( sizeof(w64_CallbackMsg_t().m_iCallback) >= 4 );
C_ASSERT( offsetof(w64_CallbackMsg_t, m_pubParam) == 8 );
C_ASSERT( sizeof(w64_CallbackMsg_t().m_pubParam) >= 8 );
C_ASSERT( offsetof(w64_CallbackMsg_t, m_cubParam) == 16 );
C_ASSERT( sizeof(w64_CallbackMsg_t().m_cubParam) >= 4 );

C_ASSERT( sizeof(u64_CallbackMsg_t) >= 20 );
C_ASSERT( offsetof(u64_CallbackMsg_t, m_hSteamUser) == 0 );
C_ASSERT( sizeof(u64_CallbackMsg_t().m_hSteamUser) >= 4 );
C_ASSERT( offsetof(u64_CallbackMsg_t, m_iCallback) == 4 );
C_ASSERT( sizeof(u64_CallbackMsg_t().m_iCallback) >= 4 );
C_ASSERT( offsetof(u64_CallbackMsg_t, m_pubParam) == 8 );
C_ASSERT( sizeof(u64_CallbackMsg_t().m_pubParam) >= 8 );
C_ASSERT( offsetof(u64_CallbackMsg_t, m_cubParam) == 16 );
C_ASSERT( sizeof(u64_CallbackMsg_t().m_cubParam) >= 4 );

C_ASSERT( sizeof(w32_CallbackMsg_t) >= 16 );
C_ASSERT( offsetof(w32_CallbackMsg_t, m_hSteamUser) == 0 );
C_ASSERT( sizeof(w32_CallbackMsg_t().m_hSteamUser) >= 4 );
C_ASSERT( offsetof(w32_CallbackMsg_t, m_iCallback) == 4 );
C_ASSERT( sizeof(w32_CallbackMsg_t().m_iCallback) >= 4 );
C_ASSERT( offsetof(w32_CallbackMsg_t, m_pubParam) == 8 );
C_ASSERT( sizeof(w32_CallbackMsg_t().m_pubParam) >= 4 );
C_ASSERT( offsetof(w32_CallbackMsg_t, m_cubParam) == 12 );
C_ASSERT( sizeof(w32_CallbackMsg_t().m_cubParam) >= 4 );

C_ASSERT( sizeof(u32_CallbackMsg_t) >= 16 );
C_ASSERT( offsetof(u32_CallbackMsg_t, m_hSteamUser) == 0 );
C_ASSERT( sizeof(u32_CallbackMsg_t().m_hSteamUser) >= 4 );
C_ASSERT( offsetof(u32_CallbackMsg_t, m_iCallback) == 4 );
C_ASSERT( sizeof(u32_CallbackMsg_t().m_iCallback) >= 4 );
C_ASSERT( offsetof(u32_CallbackMsg_t, m_pubParam) == 8 );
C_ASSERT( sizeof(u32_CallbackMsg_t().m_pubParam) >= 4 );
C_ASSERT( offsetof(u32_CallbackMsg_t, m_cubParam) == 12 );
C_ASSERT( sizeof(u32_CallbackMsg_t().m_cubParam) >= 4 );

C_ASSERT( sizeof(w64_CreateBeaconCallback_t) >= 16 );
C_ASSERT( offsetof(w64_CreateBeaconCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_CreateBeaconCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_CreateBeaconCallback_t, m_ulBeaconID) == 8 );
C_ASSERT( sizeof(w64_CreateBeaconCallback_t().m_ulBeaconID) >= 8 );

C_ASSERT( sizeof(u64_CreateBeaconCallback_t) >= 12 );
C_ASSERT( offsetof(u64_CreateBeaconCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_CreateBeaconCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_CreateBeaconCallback_t, m_ulBeaconID) == 4 );
C_ASSERT( sizeof(u64_CreateBeaconCallback_t().m_ulBeaconID) >= 8 );

C_ASSERT( sizeof(w32_CreateBeaconCallback_t) >= 16 );
C_ASSERT( offsetof(w32_CreateBeaconCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_CreateBeaconCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_CreateBeaconCallback_t, m_ulBeaconID) == 8 );
C_ASSERT( sizeof(w32_CreateBeaconCallback_t().m_ulBeaconID) >= 8 );

C_ASSERT( sizeof(u32_CreateBeaconCallback_t) >= 12 );
C_ASSERT( offsetof(u32_CreateBeaconCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_CreateBeaconCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_CreateBeaconCallback_t, m_ulBeaconID) == 4 );
C_ASSERT( sizeof(u32_CreateBeaconCallback_t().m_ulBeaconID) >= 8 );

static void CreateBeaconCallback_t_u_from_w(void *dst, const void *src)
{
    u_CreateBeaconCallback_t *d = (u_CreateBeaconCallback_t *)dst;
    const w_CreateBeaconCallback_t *s = (const w_CreateBeaconCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulBeaconID = s->m_ulBeaconID;
}
#ifdef __x86_64__
w64_CreateBeaconCallback_t::operator u64_CreateBeaconCallback_t() const
{
    u64_CreateBeaconCallback_t ret;
    CreateBeaconCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void CreateBeaconCallback_t_w_from_u(void *dst, const void *src)
{
    w_CreateBeaconCallback_t *d = (w_CreateBeaconCallback_t *)dst;
    const u_CreateBeaconCallback_t *s = (const u_CreateBeaconCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulBeaconID = s->m_ulBeaconID;
}
#ifdef __x86_64__
u64_CreateBeaconCallback_t::operator w64_CreateBeaconCallback_t() const
{
    w64_CreateBeaconCallback_t ret;
    CreateBeaconCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_CreateBeaconCallback_t::operator u32_CreateBeaconCallback_t() const
{
    u32_CreateBeaconCallback_t ret;
    CreateBeaconCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_CreateBeaconCallback_t::operator w32_CreateBeaconCallback_t() const
{
    w32_CreateBeaconCallback_t ret;
    CreateBeaconCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_CreateItemResult_t) >= 24 );
C_ASSERT( offsetof(w64_CreateItemResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_CreateItemResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_CreateItemResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_CreateItemResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_CreateItemResult_t, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 16 );
C_ASSERT( sizeof(w64_CreateItemResult_t().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(u64_CreateItemResult_t) >= 16 );
C_ASSERT( offsetof(u64_CreateItemResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_CreateItemResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_CreateItemResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_CreateItemResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_CreateItemResult_t, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 12 );
C_ASSERT( sizeof(u64_CreateItemResult_t().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(w32_CreateItemResult_t) >= 24 );
C_ASSERT( offsetof(w32_CreateItemResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_CreateItemResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_CreateItemResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_CreateItemResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_CreateItemResult_t, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 16 );
C_ASSERT( sizeof(w32_CreateItemResult_t().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(u32_CreateItemResult_t) >= 16 );
C_ASSERT( offsetof(u32_CreateItemResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_CreateItemResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_CreateItemResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_CreateItemResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_CreateItemResult_t, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 12 );
C_ASSERT( sizeof(u32_CreateItemResult_t().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

static void CreateItemResult_t_u_from_w(void *dst, const void *src)
{
    u_CreateItemResult_t *d = (u_CreateItemResult_t *)dst;
    const w_CreateItemResult_t *s = (const w_CreateItemResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_bUserNeedsToAcceptWorkshopLegalAgreement = s->m_bUserNeedsToAcceptWorkshopLegalAgreement;
}
#ifdef __x86_64__
w64_CreateItemResult_t::operator u64_CreateItemResult_t() const
{
    u64_CreateItemResult_t ret;
    CreateItemResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void CreateItemResult_t_w_from_u(void *dst, const void *src)
{
    w_CreateItemResult_t *d = (w_CreateItemResult_t *)dst;
    const u_CreateItemResult_t *s = (const u_CreateItemResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_bUserNeedsToAcceptWorkshopLegalAgreement = s->m_bUserNeedsToAcceptWorkshopLegalAgreement;
}
#ifdef __x86_64__
u64_CreateItemResult_t::operator w64_CreateItemResult_t() const
{
    w64_CreateItemResult_t ret;
    CreateItemResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_CreateItemResult_t::operator u32_CreateItemResult_t() const
{
    u32_CreateItemResult_t ret;
    CreateItemResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_CreateItemResult_t::operator w32_CreateItemResult_t() const
{
    w32_CreateItemResult_t ret;
    CreateItemResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_DeleteItemResult_t) >= 16 );
C_ASSERT( offsetof(w64_DeleteItemResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_DeleteItemResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_DeleteItemResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_DeleteItemResult_t().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_DeleteItemResult_t) >= 12 );
C_ASSERT( offsetof(u64_DeleteItemResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_DeleteItemResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_DeleteItemResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_DeleteItemResult_t().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_DeleteItemResult_t) >= 16 );
C_ASSERT( offsetof(w32_DeleteItemResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_DeleteItemResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_DeleteItemResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_DeleteItemResult_t().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_DeleteItemResult_t) >= 12 );
C_ASSERT( offsetof(u32_DeleteItemResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_DeleteItemResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_DeleteItemResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_DeleteItemResult_t().m_nPublishedFileId) >= 8 );

static void DeleteItemResult_t_u_from_w(void *dst, const void *src)
{
    u_DeleteItemResult_t *d = (u_DeleteItemResult_t *)dst;
    const w_DeleteItemResult_t *s = (const w_DeleteItemResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
w64_DeleteItemResult_t::operator u64_DeleteItemResult_t() const
{
    u64_DeleteItemResult_t ret;
    DeleteItemResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void DeleteItemResult_t_w_from_u(void *dst, const void *src)
{
    w_DeleteItemResult_t *d = (w_DeleteItemResult_t *)dst;
    const u_DeleteItemResult_t *s = (const u_DeleteItemResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
u64_DeleteItemResult_t::operator w64_DeleteItemResult_t() const
{
    w64_DeleteItemResult_t ret;
    DeleteItemResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_DeleteItemResult_t::operator u32_DeleteItemResult_t() const
{
    u32_DeleteItemResult_t ret;
    DeleteItemResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_DeleteItemResult_t::operator w32_DeleteItemResult_t() const
{
    w32_DeleteItemResult_t ret;
    DeleteItemResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_DownloadItemResult_t) >= 24 );
C_ASSERT( offsetof(w64_DownloadItemResult_t, m_unAppID) == 0 );
C_ASSERT( sizeof(w64_DownloadItemResult_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(w64_DownloadItemResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_DownloadItemResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_DownloadItemResult_t, m_eResult) == 16 );
C_ASSERT( sizeof(w64_DownloadItemResult_t().m_eResult) >= 4 );

C_ASSERT( sizeof(u64_DownloadItemResult_t) >= 16 );
C_ASSERT( offsetof(u64_DownloadItemResult_t, m_unAppID) == 0 );
C_ASSERT( sizeof(u64_DownloadItemResult_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(u64_DownloadItemResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_DownloadItemResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_DownloadItemResult_t, m_eResult) == 12 );
C_ASSERT( sizeof(u64_DownloadItemResult_t().m_eResult) >= 4 );

C_ASSERT( sizeof(w32_DownloadItemResult_t) >= 24 );
C_ASSERT( offsetof(w32_DownloadItemResult_t, m_unAppID) == 0 );
C_ASSERT( sizeof(w32_DownloadItemResult_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(w32_DownloadItemResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_DownloadItemResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_DownloadItemResult_t, m_eResult) == 16 );
C_ASSERT( sizeof(w32_DownloadItemResult_t().m_eResult) >= 4 );

C_ASSERT( sizeof(u32_DownloadItemResult_t) >= 16 );
C_ASSERT( offsetof(u32_DownloadItemResult_t, m_unAppID) == 0 );
C_ASSERT( sizeof(u32_DownloadItemResult_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(u32_DownloadItemResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_DownloadItemResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_DownloadItemResult_t, m_eResult) == 12 );
C_ASSERT( sizeof(u32_DownloadItemResult_t().m_eResult) >= 4 );

static void DownloadItemResult_t_u_from_w(void *dst, const void *src)
{
    u_DownloadItemResult_t *d = (u_DownloadItemResult_t *)dst;
    const w_DownloadItemResult_t *s = (const w_DownloadItemResult_t *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eResult = s->m_eResult;
}
#ifdef __x86_64__
w64_DownloadItemResult_t::operator u64_DownloadItemResult_t() const
{
    u64_DownloadItemResult_t ret;
    DownloadItemResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void DownloadItemResult_t_w_from_u(void *dst, const void *src)
{
    w_DownloadItemResult_t *d = (w_DownloadItemResult_t *)dst;
    const u_DownloadItemResult_t *s = (const u_DownloadItemResult_t *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eResult = s->m_eResult;
}
#ifdef __x86_64__
u64_DownloadItemResult_t::operator w64_DownloadItemResult_t() const
{
    w64_DownloadItemResult_t ret;
    DownloadItemResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_DownloadItemResult_t::operator u32_DownloadItemResult_t() const
{
    u32_DownloadItemResult_t ret;
    DownloadItemResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_DownloadItemResult_t::operator w32_DownloadItemResult_t() const
{
    w32_DownloadItemResult_t ret;
    DownloadItemResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_EndGameResultCallback_t) >= 16 );
C_ASSERT( offsetof(w64_EndGameResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_EndGameResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_EndGameResultCallback_t, ullUniqueGameID) == 8 );
C_ASSERT( sizeof(w64_EndGameResultCallback_t().ullUniqueGameID) >= 8 );

C_ASSERT( sizeof(u64_EndGameResultCallback_t) >= 12 );
C_ASSERT( offsetof(u64_EndGameResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_EndGameResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_EndGameResultCallback_t, ullUniqueGameID) == 4 );
C_ASSERT( sizeof(u64_EndGameResultCallback_t().ullUniqueGameID) >= 8 );

C_ASSERT( sizeof(w32_EndGameResultCallback_t) >= 16 );
C_ASSERT( offsetof(w32_EndGameResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_EndGameResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_EndGameResultCallback_t, ullUniqueGameID) == 8 );
C_ASSERT( sizeof(w32_EndGameResultCallback_t().ullUniqueGameID) >= 8 );

C_ASSERT( sizeof(u32_EndGameResultCallback_t) >= 12 );
C_ASSERT( offsetof(u32_EndGameResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_EndGameResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_EndGameResultCallback_t, ullUniqueGameID) == 4 );
C_ASSERT( sizeof(u32_EndGameResultCallback_t().ullUniqueGameID) >= 8 );

static void EndGameResultCallback_t_u_from_w(void *dst, const void *src)
{
    u_EndGameResultCallback_t *d = (u_EndGameResultCallback_t *)dst;
    const w_EndGameResultCallback_t *s = (const w_EndGameResultCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->ullUniqueGameID = s->ullUniqueGameID;
}
#ifdef __x86_64__
w64_EndGameResultCallback_t::operator u64_EndGameResultCallback_t() const
{
    u64_EndGameResultCallback_t ret;
    EndGameResultCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void EndGameResultCallback_t_w_from_u(void *dst, const void *src)
{
    w_EndGameResultCallback_t *d = (w_EndGameResultCallback_t *)dst;
    const u_EndGameResultCallback_t *s = (const u_EndGameResultCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->ullUniqueGameID = s->ullUniqueGameID;
}
#ifdef __x86_64__
u64_EndGameResultCallback_t::operator w64_EndGameResultCallback_t() const
{
    w64_EndGameResultCallback_t ret;
    EndGameResultCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_EndGameResultCallback_t::operator u32_EndGameResultCallback_t() const
{
    u32_EndGameResultCallback_t ret;
    EndGameResultCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_EndGameResultCallback_t::operator w32_EndGameResultCallback_t() const
{
    w32_EndGameResultCallback_t ret;
    EndGameResultCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_FileDetailsResult_t) >= 40 );
C_ASSERT( offsetof(w64_FileDetailsResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_FileDetailsResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_FileDetailsResult_t, m_ulFileSize) == 8 );
C_ASSERT( sizeof(w64_FileDetailsResult_t().m_ulFileSize) >= 8 );
C_ASSERT( offsetof(w64_FileDetailsResult_t, m_FileSHA) == 16 );
C_ASSERT( sizeof(w64_FileDetailsResult_t().m_FileSHA) >= 20 );
C_ASSERT( offsetof(w64_FileDetailsResult_t, m_unFlags) == 36 );
C_ASSERT( sizeof(w64_FileDetailsResult_t().m_unFlags) >= 4 );

C_ASSERT( sizeof(u64_FileDetailsResult_t) >= 36 );
C_ASSERT( offsetof(u64_FileDetailsResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_FileDetailsResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_FileDetailsResult_t, m_ulFileSize) == 4 );
C_ASSERT( sizeof(u64_FileDetailsResult_t().m_ulFileSize) >= 8 );
C_ASSERT( offsetof(u64_FileDetailsResult_t, m_FileSHA) == 12 );
C_ASSERT( sizeof(u64_FileDetailsResult_t().m_FileSHA) >= 20 );
C_ASSERT( offsetof(u64_FileDetailsResult_t, m_unFlags) == 32 );
C_ASSERT( sizeof(u64_FileDetailsResult_t().m_unFlags) >= 4 );

C_ASSERT( sizeof(w32_FileDetailsResult_t) >= 40 );
C_ASSERT( offsetof(w32_FileDetailsResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_FileDetailsResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_FileDetailsResult_t, m_ulFileSize) == 8 );
C_ASSERT( sizeof(w32_FileDetailsResult_t().m_ulFileSize) >= 8 );
C_ASSERT( offsetof(w32_FileDetailsResult_t, m_FileSHA) == 16 );
C_ASSERT( sizeof(w32_FileDetailsResult_t().m_FileSHA) >= 20 );
C_ASSERT( offsetof(w32_FileDetailsResult_t, m_unFlags) == 36 );
C_ASSERT( sizeof(w32_FileDetailsResult_t().m_unFlags) >= 4 );

C_ASSERT( sizeof(u32_FileDetailsResult_t) >= 36 );
C_ASSERT( offsetof(u32_FileDetailsResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_FileDetailsResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_FileDetailsResult_t, m_ulFileSize) == 4 );
C_ASSERT( sizeof(u32_FileDetailsResult_t().m_ulFileSize) >= 8 );
C_ASSERT( offsetof(u32_FileDetailsResult_t, m_FileSHA) == 12 );
C_ASSERT( sizeof(u32_FileDetailsResult_t().m_FileSHA) >= 20 );
C_ASSERT( offsetof(u32_FileDetailsResult_t, m_unFlags) == 32 );
C_ASSERT( sizeof(u32_FileDetailsResult_t().m_unFlags) >= 4 );

static void FileDetailsResult_t_u_from_w(void *dst, const void *src)
{
    u_FileDetailsResult_t *d = (u_FileDetailsResult_t *)dst;
    const w_FileDetailsResult_t *s = (const w_FileDetailsResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulFileSize = s->m_ulFileSize;
    d->m_FileSHA = s->m_FileSHA;
    d->m_unFlags = s->m_unFlags;
}
#ifdef __x86_64__
w64_FileDetailsResult_t::operator u64_FileDetailsResult_t() const
{
    u64_FileDetailsResult_t ret;
    FileDetailsResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void FileDetailsResult_t_w_from_u(void *dst, const void *src)
{
    w_FileDetailsResult_t *d = (w_FileDetailsResult_t *)dst;
    const u_FileDetailsResult_t *s = (const u_FileDetailsResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulFileSize = s->m_ulFileSize;
    d->m_FileSHA = s->m_FileSHA;
    d->m_unFlags = s->m_unFlags;
}
#ifdef __x86_64__
u64_FileDetailsResult_t::operator w64_FileDetailsResult_t() const
{
    w64_FileDetailsResult_t ret;
    FileDetailsResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_FileDetailsResult_t::operator u32_FileDetailsResult_t() const
{
    u32_FileDetailsResult_t ret;
    FileDetailsResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_FileDetailsResult_t::operator w32_FileDetailsResult_t() const
{
    w32_FileDetailsResult_t ret;
    FileDetailsResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_GSReputation_t_123) >= 40 );
C_ASSERT( offsetof(w64_GSReputation_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_GSReputation_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_GSReputation_t_123, m_unReputationScore) == 4 );
C_ASSERT( sizeof(w64_GSReputation_t_123().m_unReputationScore) >= 4 );
C_ASSERT( offsetof(w64_GSReputation_t_123, m_bBanned) == 8 );
C_ASSERT( sizeof(w64_GSReputation_t_123().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_GSReputation_t_123, m_unBannedIP) == 12 );
C_ASSERT( sizeof(w64_GSReputation_t_123().m_unBannedIP) >= 4 );
C_ASSERT( offsetof(w64_GSReputation_t_123, m_usBannedPort) == 16 );
C_ASSERT( sizeof(w64_GSReputation_t_123().m_usBannedPort) >= 2 );
C_ASSERT( offsetof(w64_GSReputation_t_123, m_ulBannedGameID) == 24 );
C_ASSERT( sizeof(w64_GSReputation_t_123().m_ulBannedGameID) >= 8 );
C_ASSERT( offsetof(w64_GSReputation_t_123, m_unBanExpires) == 32 );
C_ASSERT( sizeof(w64_GSReputation_t_123().m_unBanExpires) >= 4 );

C_ASSERT( sizeof(u64_GSReputation_t_123) >= 32 );
C_ASSERT( offsetof(u64_GSReputation_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_GSReputation_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_GSReputation_t_123, m_unReputationScore) == 4 );
C_ASSERT( sizeof(u64_GSReputation_t_123().m_unReputationScore) >= 4 );
C_ASSERT( offsetof(u64_GSReputation_t_123, m_bBanned) == 8 );
C_ASSERT( sizeof(u64_GSReputation_t_123().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_GSReputation_t_123, m_unBannedIP) == 12 );
C_ASSERT( sizeof(u64_GSReputation_t_123().m_unBannedIP) >= 4 );
C_ASSERT( offsetof(u64_GSReputation_t_123, m_usBannedPort) == 16 );
C_ASSERT( sizeof(u64_GSReputation_t_123().m_usBannedPort) >= 2 );
C_ASSERT( offsetof(u64_GSReputation_t_123, m_ulBannedGameID) == 20 );
C_ASSERT( sizeof(u64_GSReputation_t_123().m_ulBannedGameID) >= 8 );
C_ASSERT( offsetof(u64_GSReputation_t_123, m_unBanExpires) == 28 );
C_ASSERT( sizeof(u64_GSReputation_t_123().m_unBanExpires) >= 4 );

C_ASSERT( sizeof(w32_GSReputation_t_123) >= 40 );
C_ASSERT( offsetof(w32_GSReputation_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_GSReputation_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_GSReputation_t_123, m_unReputationScore) == 4 );
C_ASSERT( sizeof(w32_GSReputation_t_123().m_unReputationScore) >= 4 );
C_ASSERT( offsetof(w32_GSReputation_t_123, m_bBanned) == 8 );
C_ASSERT( sizeof(w32_GSReputation_t_123().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_GSReputation_t_123, m_unBannedIP) == 12 );
C_ASSERT( sizeof(w32_GSReputation_t_123().m_unBannedIP) >= 4 );
C_ASSERT( offsetof(w32_GSReputation_t_123, m_usBannedPort) == 16 );
C_ASSERT( sizeof(w32_GSReputation_t_123().m_usBannedPort) >= 2 );
C_ASSERT( offsetof(w32_GSReputation_t_123, m_ulBannedGameID) == 24 );
C_ASSERT( sizeof(w32_GSReputation_t_123().m_ulBannedGameID) >= 8 );
C_ASSERT( offsetof(w32_GSReputation_t_123, m_unBanExpires) == 32 );
C_ASSERT( sizeof(w32_GSReputation_t_123().m_unBanExpires) >= 4 );

C_ASSERT( sizeof(u32_GSReputation_t_123) >= 32 );
C_ASSERT( offsetof(u32_GSReputation_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_GSReputation_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_GSReputation_t_123, m_unReputationScore) == 4 );
C_ASSERT( sizeof(u32_GSReputation_t_123().m_unReputationScore) >= 4 );
C_ASSERT( offsetof(u32_GSReputation_t_123, m_bBanned) == 8 );
C_ASSERT( sizeof(u32_GSReputation_t_123().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_GSReputation_t_123, m_unBannedIP) == 12 );
C_ASSERT( sizeof(u32_GSReputation_t_123().m_unBannedIP) >= 4 );
C_ASSERT( offsetof(u32_GSReputation_t_123, m_usBannedPort) == 16 );
C_ASSERT( sizeof(u32_GSReputation_t_123().m_usBannedPort) >= 2 );
C_ASSERT( offsetof(u32_GSReputation_t_123, m_ulBannedGameID) == 20 );
C_ASSERT( sizeof(u32_GSReputation_t_123().m_ulBannedGameID) >= 8 );
C_ASSERT( offsetof(u32_GSReputation_t_123, m_unBanExpires) == 28 );
C_ASSERT( sizeof(u32_GSReputation_t_123().m_unBanExpires) >= 4 );

C_ASSERT( sizeof(w64_GSReputation_t_108) >= 40 );
C_ASSERT( offsetof(w64_GSReputation_t_108, m_eResult) == 0 );
C_ASSERT( sizeof(w64_GSReputation_t_108().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_GSReputation_t_108, m_unReputationScore) == 4 );
C_ASSERT( sizeof(w64_GSReputation_t_108().m_unReputationScore) >= 4 );
C_ASSERT( offsetof(w64_GSReputation_t_108, m_bBanned) == 8 );
C_ASSERT( sizeof(w64_GSReputation_t_108().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_GSReputation_t_108, m_unBannedIP) == 12 );
C_ASSERT( sizeof(w64_GSReputation_t_108().m_unBannedIP) >= 4 );
C_ASSERT( offsetof(w64_GSReputation_t_108, m_usBannedPort) == 16 );
C_ASSERT( sizeof(w64_GSReputation_t_108().m_usBannedPort) >= 2 );
C_ASSERT( offsetof(w64_GSReputation_t_108, m_ulBannedGameID) == 24 );
C_ASSERT( sizeof(w64_GSReputation_t_108().m_ulBannedGameID) >= 8 );
C_ASSERT( offsetof(w64_GSReputation_t_108, m_unBanExpires) == 32 );
C_ASSERT( sizeof(w64_GSReputation_t_108().m_unBanExpires) >= 4 );

C_ASSERT( sizeof(u64_GSReputation_t_108) >= 40 );
C_ASSERT( offsetof(u64_GSReputation_t_108, m_eResult) == 0 );
C_ASSERT( sizeof(u64_GSReputation_t_108().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_GSReputation_t_108, m_unReputationScore) == 4 );
C_ASSERT( sizeof(u64_GSReputation_t_108().m_unReputationScore) >= 4 );
C_ASSERT( offsetof(u64_GSReputation_t_108, m_bBanned) == 8 );
C_ASSERT( sizeof(u64_GSReputation_t_108().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_GSReputation_t_108, m_unBannedIP) == 12 );
C_ASSERT( sizeof(u64_GSReputation_t_108().m_unBannedIP) >= 4 );
C_ASSERT( offsetof(u64_GSReputation_t_108, m_usBannedPort) == 16 );
C_ASSERT( sizeof(u64_GSReputation_t_108().m_usBannedPort) >= 2 );
C_ASSERT( offsetof(u64_GSReputation_t_108, m_ulBannedGameID) == 24 );
C_ASSERT( sizeof(u64_GSReputation_t_108().m_ulBannedGameID) >= 8 );
C_ASSERT( offsetof(u64_GSReputation_t_108, m_unBanExpires) == 32 );
C_ASSERT( sizeof(u64_GSReputation_t_108().m_unBanExpires) >= 4 );

C_ASSERT( sizeof(w32_GSReputation_t_108) >= 40 );
C_ASSERT( offsetof(w32_GSReputation_t_108, m_eResult) == 0 );
C_ASSERT( sizeof(w32_GSReputation_t_108().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_GSReputation_t_108, m_unReputationScore) == 4 );
C_ASSERT( sizeof(w32_GSReputation_t_108().m_unReputationScore) >= 4 );
C_ASSERT( offsetof(w32_GSReputation_t_108, m_bBanned) == 8 );
C_ASSERT( sizeof(w32_GSReputation_t_108().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_GSReputation_t_108, m_unBannedIP) == 12 );
C_ASSERT( sizeof(w32_GSReputation_t_108().m_unBannedIP) >= 4 );
C_ASSERT( offsetof(w32_GSReputation_t_108, m_usBannedPort) == 16 );
C_ASSERT( sizeof(w32_GSReputation_t_108().m_usBannedPort) >= 2 );
C_ASSERT( offsetof(w32_GSReputation_t_108, m_ulBannedGameID) == 24 );
C_ASSERT( sizeof(w32_GSReputation_t_108().m_ulBannedGameID) >= 8 );
C_ASSERT( offsetof(w32_GSReputation_t_108, m_unBanExpires) == 32 );
C_ASSERT( sizeof(w32_GSReputation_t_108().m_unBanExpires) >= 4 );

C_ASSERT( sizeof(u32_GSReputation_t_108) >= 32 );
C_ASSERT( offsetof(u32_GSReputation_t_108, m_eResult) == 0 );
C_ASSERT( sizeof(u32_GSReputation_t_108().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_GSReputation_t_108, m_unReputationScore) == 4 );
C_ASSERT( sizeof(u32_GSReputation_t_108().m_unReputationScore) >= 4 );
C_ASSERT( offsetof(u32_GSReputation_t_108, m_bBanned) == 8 );
C_ASSERT( sizeof(u32_GSReputation_t_108().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_GSReputation_t_108, m_unBannedIP) == 12 );
C_ASSERT( sizeof(u32_GSReputation_t_108().m_unBannedIP) >= 4 );
C_ASSERT( offsetof(u32_GSReputation_t_108, m_usBannedPort) == 16 );
C_ASSERT( sizeof(u32_GSReputation_t_108().m_usBannedPort) >= 2 );
C_ASSERT( offsetof(u32_GSReputation_t_108, m_ulBannedGameID) == 20 );
C_ASSERT( sizeof(u32_GSReputation_t_108().m_ulBannedGameID) >= 8 );
C_ASSERT( offsetof(u32_GSReputation_t_108, m_unBanExpires) == 28 );
C_ASSERT( sizeof(u32_GSReputation_t_108().m_unBanExpires) >= 4 );

static void GSReputation_t_123_u_from_w(void *dst, const void *src)
{
    u_GSReputation_t_123 *d = (u_GSReputation_t_123 *)dst;
    const w_GSReputation_t_123 *s = (const w_GSReputation_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_unReputationScore = s->m_unReputationScore;
    d->m_bBanned = s->m_bBanned;
    d->m_unBannedIP = s->m_unBannedIP;
    d->m_usBannedPort = s->m_usBannedPort;
    d->m_ulBannedGameID = s->m_ulBannedGameID;
    d->m_unBanExpires = s->m_unBanExpires;
}
#ifdef __x86_64__
w64_GSReputation_t_123::operator u64_GSReputation_t_123() const
{
    u64_GSReputation_t_123 ret;
    GSReputation_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void GSReputation_t_123_w_from_u(void *dst, const void *src)
{
    w_GSReputation_t_123 *d = (w_GSReputation_t_123 *)dst;
    const u_GSReputation_t_123 *s = (const u_GSReputation_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_unReputationScore = s->m_unReputationScore;
    d->m_bBanned = s->m_bBanned;
    d->m_unBannedIP = s->m_unBannedIP;
    d->m_usBannedPort = s->m_usBannedPort;
    d->m_ulBannedGameID = s->m_ulBannedGameID;
    d->m_unBanExpires = s->m_unBanExpires;
}
#ifdef __x86_64__
u64_GSReputation_t_123::operator w64_GSReputation_t_123() const
{
    w64_GSReputation_t_123 ret;
    GSReputation_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_GSReputation_t_123::operator u32_GSReputation_t_123() const
{
    u32_GSReputation_t_123 ret;
    GSReputation_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_GSReputation_t_123::operator w32_GSReputation_t_123() const
{
    w32_GSReputation_t_123 ret;
    GSReputation_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void GSReputation_t_108_u_from_w(void *dst, const void *src)
{
    u_GSReputation_t_108 *d = (u_GSReputation_t_108 *)dst;
    const w_GSReputation_t_108 *s = (const w_GSReputation_t_108 *)src;

    d->m_eResult = s->m_eResult;
    d->m_unReputationScore = s->m_unReputationScore;
    d->m_bBanned = s->m_bBanned;
    d->m_unBannedIP = s->m_unBannedIP;
    d->m_usBannedPort = s->m_usBannedPort;
    d->m_ulBannedGameID = s->m_ulBannedGameID;
    d->m_unBanExpires = s->m_unBanExpires;
}
#ifdef __i386__
w32_GSReputation_t_108::operator u32_GSReputation_t_108() const
{
    u32_GSReputation_t_108 ret;
    GSReputation_t_108_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void GSReputation_t_108_w_from_u(void *dst, const void *src)
{
    w_GSReputation_t_108 *d = (w_GSReputation_t_108 *)dst;
    const u_GSReputation_t_108 *s = (const u_GSReputation_t_108 *)src;

    d->m_eResult = s->m_eResult;
    d->m_unReputationScore = s->m_unReputationScore;
    d->m_bBanned = s->m_bBanned;
    d->m_unBannedIP = s->m_unBannedIP;
    d->m_usBannedPort = s->m_usBannedPort;
    d->m_ulBannedGameID = s->m_ulBannedGameID;
    d->m_unBanExpires = s->m_unBanExpires;
}
#ifdef __i386__
u32_GSReputation_t_108::operator w32_GSReputation_t_108() const
{
    w32_GSReputation_t_108 ret;
    GSReputation_t_108_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_GetAppDependenciesResult_t) >= 152 );
C_ASSERT( offsetof(w64_GetAppDependenciesResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_GetAppDependenciesResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_GetAppDependenciesResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_GetAppDependenciesResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_GetAppDependenciesResult_t, m_rgAppIDs) == 16 );
C_ASSERT( sizeof(w64_GetAppDependenciesResult_t().m_rgAppIDs) >= 128 );
C_ASSERT( offsetof(w64_GetAppDependenciesResult_t, m_nNumAppDependencies) == 144 );
C_ASSERT( sizeof(w64_GetAppDependenciesResult_t().m_nNumAppDependencies) >= 4 );
C_ASSERT( offsetof(w64_GetAppDependenciesResult_t, m_nTotalNumAppDependencies) == 148 );
C_ASSERT( sizeof(w64_GetAppDependenciesResult_t().m_nTotalNumAppDependencies) >= 4 );

C_ASSERT( sizeof(u64_GetAppDependenciesResult_t) >= 148 );
C_ASSERT( offsetof(u64_GetAppDependenciesResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_GetAppDependenciesResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_GetAppDependenciesResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_GetAppDependenciesResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_GetAppDependenciesResult_t, m_rgAppIDs) == 12 );
C_ASSERT( sizeof(u64_GetAppDependenciesResult_t().m_rgAppIDs) >= 128 );
C_ASSERT( offsetof(u64_GetAppDependenciesResult_t, m_nNumAppDependencies) == 140 );
C_ASSERT( sizeof(u64_GetAppDependenciesResult_t().m_nNumAppDependencies) >= 4 );
C_ASSERT( offsetof(u64_GetAppDependenciesResult_t, m_nTotalNumAppDependencies) == 144 );
C_ASSERT( sizeof(u64_GetAppDependenciesResult_t().m_nTotalNumAppDependencies) >= 4 );

C_ASSERT( sizeof(w32_GetAppDependenciesResult_t) >= 152 );
C_ASSERT( offsetof(w32_GetAppDependenciesResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_GetAppDependenciesResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_GetAppDependenciesResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_GetAppDependenciesResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_GetAppDependenciesResult_t, m_rgAppIDs) == 16 );
C_ASSERT( sizeof(w32_GetAppDependenciesResult_t().m_rgAppIDs) >= 128 );
C_ASSERT( offsetof(w32_GetAppDependenciesResult_t, m_nNumAppDependencies) == 144 );
C_ASSERT( sizeof(w32_GetAppDependenciesResult_t().m_nNumAppDependencies) >= 4 );
C_ASSERT( offsetof(w32_GetAppDependenciesResult_t, m_nTotalNumAppDependencies) == 148 );
C_ASSERT( sizeof(w32_GetAppDependenciesResult_t().m_nTotalNumAppDependencies) >= 4 );

C_ASSERT( sizeof(u32_GetAppDependenciesResult_t) >= 148 );
C_ASSERT( offsetof(u32_GetAppDependenciesResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_GetAppDependenciesResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_GetAppDependenciesResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_GetAppDependenciesResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_GetAppDependenciesResult_t, m_rgAppIDs) == 12 );
C_ASSERT( sizeof(u32_GetAppDependenciesResult_t().m_rgAppIDs) >= 128 );
C_ASSERT( offsetof(u32_GetAppDependenciesResult_t, m_nNumAppDependencies) == 140 );
C_ASSERT( sizeof(u32_GetAppDependenciesResult_t().m_nNumAppDependencies) >= 4 );
C_ASSERT( offsetof(u32_GetAppDependenciesResult_t, m_nTotalNumAppDependencies) == 144 );
C_ASSERT( sizeof(u32_GetAppDependenciesResult_t().m_nTotalNumAppDependencies) >= 4 );

static void GetAppDependenciesResult_t_u_from_w(void *dst, const void *src)
{
    u_GetAppDependenciesResult_t *d = (u_GetAppDependenciesResult_t *)dst;
    const w_GetAppDependenciesResult_t *s = (const w_GetAppDependenciesResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_rgAppIDs = s->m_rgAppIDs;
    d->m_nNumAppDependencies = s->m_nNumAppDependencies;
    d->m_nTotalNumAppDependencies = s->m_nTotalNumAppDependencies;
}
#ifdef __x86_64__
w64_GetAppDependenciesResult_t::operator u64_GetAppDependenciesResult_t() const
{
    u64_GetAppDependenciesResult_t ret;
    GetAppDependenciesResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void GetAppDependenciesResult_t_w_from_u(void *dst, const void *src)
{
    w_GetAppDependenciesResult_t *d = (w_GetAppDependenciesResult_t *)dst;
    const u_GetAppDependenciesResult_t *s = (const u_GetAppDependenciesResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_rgAppIDs = s->m_rgAppIDs;
    d->m_nNumAppDependencies = s->m_nNumAppDependencies;
    d->m_nTotalNumAppDependencies = s->m_nTotalNumAppDependencies;
}
#ifdef __x86_64__
u64_GetAppDependenciesResult_t::operator w64_GetAppDependenciesResult_t() const
{
    w64_GetAppDependenciesResult_t ret;
    GetAppDependenciesResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_GetAppDependenciesResult_t::operator u32_GetAppDependenciesResult_t() const
{
    u32_GetAppDependenciesResult_t ret;
    GetAppDependenciesResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_GetAppDependenciesResult_t::operator w32_GetAppDependenciesResult_t() const
{
    w32_GetAppDependenciesResult_t ret;
    GetAppDependenciesResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_ChangedTitle_t) >= 16 );
C_ASSERT( offsetof(w64_HTML_ChangedTitle_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_ChangedTitle_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_ChangedTitle_t, pchTitle) == 8 );
C_ASSERT( sizeof(w64_HTML_ChangedTitle_t().pchTitle) >= 8 );

C_ASSERT( sizeof(u64_HTML_ChangedTitle_t) >= 12 );
C_ASSERT( offsetof(u64_HTML_ChangedTitle_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_ChangedTitle_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_ChangedTitle_t, pchTitle) == 4 );
C_ASSERT( sizeof(u64_HTML_ChangedTitle_t().pchTitle) >= 8 );

C_ASSERT( sizeof(w32_HTML_ChangedTitle_t) >= 8 );
C_ASSERT( offsetof(w32_HTML_ChangedTitle_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_ChangedTitle_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_ChangedTitle_t, pchTitle) == 4 );
C_ASSERT( sizeof(w32_HTML_ChangedTitle_t().pchTitle) >= 4 );

C_ASSERT( sizeof(u32_HTML_ChangedTitle_t) >= 8 );
C_ASSERT( offsetof(u32_HTML_ChangedTitle_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_ChangedTitle_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_ChangedTitle_t, pchTitle) == 4 );
C_ASSERT( sizeof(u32_HTML_ChangedTitle_t().pchTitle) >= 4 );

static void HTML_ChangedTitle_t_u_from_w(void *dst, const void *src)
{
    u_HTML_ChangedTitle_t *d = (u_HTML_ChangedTitle_t *)dst;
    const w_HTML_ChangedTitle_t *s = (const w_HTML_ChangedTitle_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchTitle = s->pchTitle;
}
#ifdef __x86_64__
w64_HTML_ChangedTitle_t::operator u64_HTML_ChangedTitle_t() const
{
    u64_HTML_ChangedTitle_t ret;
    HTML_ChangedTitle_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_ChangedTitle_t_w_from_u(void *dst, const void *src)
{
    w_HTML_ChangedTitle_t *d = (w_HTML_ChangedTitle_t *)dst;
    const u_HTML_ChangedTitle_t *s = (const u_HTML_ChangedTitle_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchTitle = s->pchTitle;
}
#ifdef __x86_64__
u64_HTML_ChangedTitle_t::operator w64_HTML_ChangedTitle_t() const
{
    w64_HTML_ChangedTitle_t ret;
    HTML_ChangedTitle_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_ComboNeedsPaint_t) >= 24 );
C_ASSERT( offsetof(w64_HTML_ComboNeedsPaint_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_ComboNeedsPaint_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_ComboNeedsPaint_t, pBGRA) == 8 );
C_ASSERT( sizeof(w64_HTML_ComboNeedsPaint_t().pBGRA) >= 8 );
C_ASSERT( offsetof(w64_HTML_ComboNeedsPaint_t, unWide) == 16 );
C_ASSERT( sizeof(w64_HTML_ComboNeedsPaint_t().unWide) >= 4 );
C_ASSERT( offsetof(w64_HTML_ComboNeedsPaint_t, unTall) == 20 );
C_ASSERT( sizeof(w64_HTML_ComboNeedsPaint_t().unTall) >= 4 );

C_ASSERT( sizeof(u64_HTML_ComboNeedsPaint_t) >= 20 );
C_ASSERT( offsetof(u64_HTML_ComboNeedsPaint_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_ComboNeedsPaint_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_ComboNeedsPaint_t, pBGRA) == 4 );
C_ASSERT( sizeof(u64_HTML_ComboNeedsPaint_t().pBGRA) >= 8 );
C_ASSERT( offsetof(u64_HTML_ComboNeedsPaint_t, unWide) == 12 );
C_ASSERT( sizeof(u64_HTML_ComboNeedsPaint_t().unWide) >= 4 );
C_ASSERT( offsetof(u64_HTML_ComboNeedsPaint_t, unTall) == 16 );
C_ASSERT( sizeof(u64_HTML_ComboNeedsPaint_t().unTall) >= 4 );

C_ASSERT( sizeof(w32_HTML_ComboNeedsPaint_t) >= 16 );
C_ASSERT( offsetof(w32_HTML_ComboNeedsPaint_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_ComboNeedsPaint_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_ComboNeedsPaint_t, pBGRA) == 4 );
C_ASSERT( sizeof(w32_HTML_ComboNeedsPaint_t().pBGRA) >= 4 );
C_ASSERT( offsetof(w32_HTML_ComboNeedsPaint_t, unWide) == 8 );
C_ASSERT( sizeof(w32_HTML_ComboNeedsPaint_t().unWide) >= 4 );
C_ASSERT( offsetof(w32_HTML_ComboNeedsPaint_t, unTall) == 12 );
C_ASSERT( sizeof(w32_HTML_ComboNeedsPaint_t().unTall) >= 4 );

C_ASSERT( sizeof(u32_HTML_ComboNeedsPaint_t) >= 16 );
C_ASSERT( offsetof(u32_HTML_ComboNeedsPaint_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_ComboNeedsPaint_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_ComboNeedsPaint_t, pBGRA) == 4 );
C_ASSERT( sizeof(u32_HTML_ComboNeedsPaint_t().pBGRA) >= 4 );
C_ASSERT( offsetof(u32_HTML_ComboNeedsPaint_t, unWide) == 8 );
C_ASSERT( sizeof(u32_HTML_ComboNeedsPaint_t().unWide) >= 4 );
C_ASSERT( offsetof(u32_HTML_ComboNeedsPaint_t, unTall) == 12 );
C_ASSERT( sizeof(u32_HTML_ComboNeedsPaint_t().unTall) >= 4 );

static void HTML_ComboNeedsPaint_t_u_from_w(void *dst, const void *src)
{
    u_HTML_ComboNeedsPaint_t *d = (u_HTML_ComboNeedsPaint_t *)dst;
    const w_HTML_ComboNeedsPaint_t *s = (const w_HTML_ComboNeedsPaint_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pBGRA = s->pBGRA;
    d->unWide = s->unWide;
    d->unTall = s->unTall;
}
#ifdef __x86_64__
w64_HTML_ComboNeedsPaint_t::operator u64_HTML_ComboNeedsPaint_t() const
{
    u64_HTML_ComboNeedsPaint_t ret;
    HTML_ComboNeedsPaint_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_ComboNeedsPaint_t_w_from_u(void *dst, const void *src)
{
    w_HTML_ComboNeedsPaint_t *d = (w_HTML_ComboNeedsPaint_t *)dst;
    const u_HTML_ComboNeedsPaint_t *s = (const u_HTML_ComboNeedsPaint_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pBGRA = s->pBGRA;
    d->unWide = s->unWide;
    d->unTall = s->unTall;
}
#ifdef __x86_64__
u64_HTML_ComboNeedsPaint_t::operator w64_HTML_ComboNeedsPaint_t() const
{
    w64_HTML_ComboNeedsPaint_t ret;
    HTML_ComboNeedsPaint_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_FileOpenDialog_t) >= 24 );
C_ASSERT( offsetof(w64_HTML_FileOpenDialog_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_FileOpenDialog_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_FileOpenDialog_t, pchTitle) == 8 );
C_ASSERT( sizeof(w64_HTML_FileOpenDialog_t().pchTitle) >= 8 );
C_ASSERT( offsetof(w64_HTML_FileOpenDialog_t, pchInitialFile) == 16 );
C_ASSERT( sizeof(w64_HTML_FileOpenDialog_t().pchInitialFile) >= 8 );

C_ASSERT( sizeof(u64_HTML_FileOpenDialog_t) >= 20 );
C_ASSERT( offsetof(u64_HTML_FileOpenDialog_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_FileOpenDialog_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_FileOpenDialog_t, pchTitle) == 4 );
C_ASSERT( sizeof(u64_HTML_FileOpenDialog_t().pchTitle) >= 8 );
C_ASSERT( offsetof(u64_HTML_FileOpenDialog_t, pchInitialFile) == 12 );
C_ASSERT( sizeof(u64_HTML_FileOpenDialog_t().pchInitialFile) >= 8 );

C_ASSERT( sizeof(w32_HTML_FileOpenDialog_t) >= 12 );
C_ASSERT( offsetof(w32_HTML_FileOpenDialog_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_FileOpenDialog_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_FileOpenDialog_t, pchTitle) == 4 );
C_ASSERT( sizeof(w32_HTML_FileOpenDialog_t().pchTitle) >= 4 );
C_ASSERT( offsetof(w32_HTML_FileOpenDialog_t, pchInitialFile) == 8 );
C_ASSERT( sizeof(w32_HTML_FileOpenDialog_t().pchInitialFile) >= 4 );

C_ASSERT( sizeof(u32_HTML_FileOpenDialog_t) >= 12 );
C_ASSERT( offsetof(u32_HTML_FileOpenDialog_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_FileOpenDialog_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_FileOpenDialog_t, pchTitle) == 4 );
C_ASSERT( sizeof(u32_HTML_FileOpenDialog_t().pchTitle) >= 4 );
C_ASSERT( offsetof(u32_HTML_FileOpenDialog_t, pchInitialFile) == 8 );
C_ASSERT( sizeof(u32_HTML_FileOpenDialog_t().pchInitialFile) >= 4 );

static void HTML_FileOpenDialog_t_u_from_w(void *dst, const void *src)
{
    u_HTML_FileOpenDialog_t *d = (u_HTML_FileOpenDialog_t *)dst;
    const w_HTML_FileOpenDialog_t *s = (const w_HTML_FileOpenDialog_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchTitle = s->pchTitle;
    d->pchInitialFile = s->pchInitialFile;
}
#ifdef __x86_64__
w64_HTML_FileOpenDialog_t::operator u64_HTML_FileOpenDialog_t() const
{
    u64_HTML_FileOpenDialog_t ret;
    HTML_FileOpenDialog_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_FileOpenDialog_t_w_from_u(void *dst, const void *src)
{
    w_HTML_FileOpenDialog_t *d = (w_HTML_FileOpenDialog_t *)dst;
    const u_HTML_FileOpenDialog_t *s = (const u_HTML_FileOpenDialog_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchTitle = s->pchTitle;
    steamclient_unix_path_to_dos_path(1, s->pchInitialFile, g_tmppath, TEMP_PATH_BUFFER_LENGTH, 1);
    d->pchInitialFile = g_tmppath;
}
#ifdef __x86_64__
u64_HTML_FileOpenDialog_t::operator w64_HTML_FileOpenDialog_t() const
{
    w64_HTML_FileOpenDialog_t ret;
    HTML_FileOpenDialog_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTML_FileOpenDialog_t::operator u32_HTML_FileOpenDialog_t() const
{
    u32_HTML_FileOpenDialog_t ret;
    HTML_FileOpenDialog_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTML_FileOpenDialog_t::operator w32_HTML_FileOpenDialog_t() const
{
    w32_HTML_FileOpenDialog_t ret;
    HTML_FileOpenDialog_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_FinishedRequest_t) >= 24 );
C_ASSERT( offsetof(w64_HTML_FinishedRequest_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_FinishedRequest_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_FinishedRequest_t, pchURL) == 8 );
C_ASSERT( sizeof(w64_HTML_FinishedRequest_t().pchURL) >= 8 );
C_ASSERT( offsetof(w64_HTML_FinishedRequest_t, pchPageTitle) == 16 );
C_ASSERT( sizeof(w64_HTML_FinishedRequest_t().pchPageTitle) >= 8 );

C_ASSERT( sizeof(u64_HTML_FinishedRequest_t) >= 20 );
C_ASSERT( offsetof(u64_HTML_FinishedRequest_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_FinishedRequest_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_FinishedRequest_t, pchURL) == 4 );
C_ASSERT( sizeof(u64_HTML_FinishedRequest_t().pchURL) >= 8 );
C_ASSERT( offsetof(u64_HTML_FinishedRequest_t, pchPageTitle) == 12 );
C_ASSERT( sizeof(u64_HTML_FinishedRequest_t().pchPageTitle) >= 8 );

C_ASSERT( sizeof(w32_HTML_FinishedRequest_t) >= 12 );
C_ASSERT( offsetof(w32_HTML_FinishedRequest_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_FinishedRequest_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_FinishedRequest_t, pchURL) == 4 );
C_ASSERT( sizeof(w32_HTML_FinishedRequest_t().pchURL) >= 4 );
C_ASSERT( offsetof(w32_HTML_FinishedRequest_t, pchPageTitle) == 8 );
C_ASSERT( sizeof(w32_HTML_FinishedRequest_t().pchPageTitle) >= 4 );

C_ASSERT( sizeof(u32_HTML_FinishedRequest_t) >= 12 );
C_ASSERT( offsetof(u32_HTML_FinishedRequest_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_FinishedRequest_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_FinishedRequest_t, pchURL) == 4 );
C_ASSERT( sizeof(u32_HTML_FinishedRequest_t().pchURL) >= 4 );
C_ASSERT( offsetof(u32_HTML_FinishedRequest_t, pchPageTitle) == 8 );
C_ASSERT( sizeof(u32_HTML_FinishedRequest_t().pchPageTitle) >= 4 );

static void HTML_FinishedRequest_t_u_from_w(void *dst, const void *src)
{
    u_HTML_FinishedRequest_t *d = (u_HTML_FinishedRequest_t *)dst;
    const w_HTML_FinishedRequest_t *s = (const w_HTML_FinishedRequest_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchURL = s->pchURL;
    d->pchPageTitle = s->pchPageTitle;
}
#ifdef __x86_64__
w64_HTML_FinishedRequest_t::operator u64_HTML_FinishedRequest_t() const
{
    u64_HTML_FinishedRequest_t ret;
    HTML_FinishedRequest_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_FinishedRequest_t_w_from_u(void *dst, const void *src)
{
    w_HTML_FinishedRequest_t *d = (w_HTML_FinishedRequest_t *)dst;
    const u_HTML_FinishedRequest_t *s = (const u_HTML_FinishedRequest_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    steamclient_unix_path_to_dos_path(1, s->pchURL, g_tmppath, TEMP_PATH_BUFFER_LENGTH, 1);
    d->pchURL = g_tmppath;
    d->pchPageTitle = s->pchPageTitle;
}
#ifdef __x86_64__
u64_HTML_FinishedRequest_t::operator w64_HTML_FinishedRequest_t() const
{
    w64_HTML_FinishedRequest_t ret;
    HTML_FinishedRequest_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTML_FinishedRequest_t::operator u32_HTML_FinishedRequest_t() const
{
    u32_HTML_FinishedRequest_t ret;
    HTML_FinishedRequest_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTML_FinishedRequest_t::operator w32_HTML_FinishedRequest_t() const
{
    w32_HTML_FinishedRequest_t ret;
    HTML_FinishedRequest_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_JSAlert_t) >= 16 );
C_ASSERT( offsetof(w64_HTML_JSAlert_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_JSAlert_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_JSAlert_t, pchMessage) == 8 );
C_ASSERT( sizeof(w64_HTML_JSAlert_t().pchMessage) >= 8 );

C_ASSERT( sizeof(u64_HTML_JSAlert_t) >= 12 );
C_ASSERT( offsetof(u64_HTML_JSAlert_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_JSAlert_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_JSAlert_t, pchMessage) == 4 );
C_ASSERT( sizeof(u64_HTML_JSAlert_t().pchMessage) >= 8 );

C_ASSERT( sizeof(w32_HTML_JSAlert_t) >= 8 );
C_ASSERT( offsetof(w32_HTML_JSAlert_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_JSAlert_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_JSAlert_t, pchMessage) == 4 );
C_ASSERT( sizeof(w32_HTML_JSAlert_t().pchMessage) >= 4 );

C_ASSERT( sizeof(u32_HTML_JSAlert_t) >= 8 );
C_ASSERT( offsetof(u32_HTML_JSAlert_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_JSAlert_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_JSAlert_t, pchMessage) == 4 );
C_ASSERT( sizeof(u32_HTML_JSAlert_t().pchMessage) >= 4 );

static void HTML_JSAlert_t_u_from_w(void *dst, const void *src)
{
    u_HTML_JSAlert_t *d = (u_HTML_JSAlert_t *)dst;
    const w_HTML_JSAlert_t *s = (const w_HTML_JSAlert_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMessage = s->pchMessage;
}
#ifdef __x86_64__
w64_HTML_JSAlert_t::operator u64_HTML_JSAlert_t() const
{
    u64_HTML_JSAlert_t ret;
    HTML_JSAlert_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_JSAlert_t_w_from_u(void *dst, const void *src)
{
    w_HTML_JSAlert_t *d = (w_HTML_JSAlert_t *)dst;
    const u_HTML_JSAlert_t *s = (const u_HTML_JSAlert_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMessage = s->pchMessage;
}
#ifdef __x86_64__
u64_HTML_JSAlert_t::operator w64_HTML_JSAlert_t() const
{
    w64_HTML_JSAlert_t ret;
    HTML_JSAlert_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_JSConfirm_t) >= 16 );
C_ASSERT( offsetof(w64_HTML_JSConfirm_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_JSConfirm_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_JSConfirm_t, pchMessage) == 8 );
C_ASSERT( sizeof(w64_HTML_JSConfirm_t().pchMessage) >= 8 );

C_ASSERT( sizeof(u64_HTML_JSConfirm_t) >= 12 );
C_ASSERT( offsetof(u64_HTML_JSConfirm_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_JSConfirm_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_JSConfirm_t, pchMessage) == 4 );
C_ASSERT( sizeof(u64_HTML_JSConfirm_t().pchMessage) >= 8 );

C_ASSERT( sizeof(w32_HTML_JSConfirm_t) >= 8 );
C_ASSERT( offsetof(w32_HTML_JSConfirm_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_JSConfirm_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_JSConfirm_t, pchMessage) == 4 );
C_ASSERT( sizeof(w32_HTML_JSConfirm_t().pchMessage) >= 4 );

C_ASSERT( sizeof(u32_HTML_JSConfirm_t) >= 8 );
C_ASSERT( offsetof(u32_HTML_JSConfirm_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_JSConfirm_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_JSConfirm_t, pchMessage) == 4 );
C_ASSERT( sizeof(u32_HTML_JSConfirm_t().pchMessage) >= 4 );

static void HTML_JSConfirm_t_u_from_w(void *dst, const void *src)
{
    u_HTML_JSConfirm_t *d = (u_HTML_JSConfirm_t *)dst;
    const w_HTML_JSConfirm_t *s = (const w_HTML_JSConfirm_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMessage = s->pchMessage;
}
#ifdef __x86_64__
w64_HTML_JSConfirm_t::operator u64_HTML_JSConfirm_t() const
{
    u64_HTML_JSConfirm_t ret;
    HTML_JSConfirm_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_JSConfirm_t_w_from_u(void *dst, const void *src)
{
    w_HTML_JSConfirm_t *d = (w_HTML_JSConfirm_t *)dst;
    const u_HTML_JSConfirm_t *s = (const u_HTML_JSConfirm_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMessage = s->pchMessage;
}
#ifdef __x86_64__
u64_HTML_JSConfirm_t::operator w64_HTML_JSConfirm_t() const
{
    w64_HTML_JSConfirm_t ret;
    HTML_JSConfirm_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_LinkAtPosition_t) >= 32 );
C_ASSERT( offsetof(w64_HTML_LinkAtPosition_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_LinkAtPosition_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_LinkAtPosition_t, x) == 4 );
C_ASSERT( sizeof(w64_HTML_LinkAtPosition_t().x) >= 4 );
C_ASSERT( offsetof(w64_HTML_LinkAtPosition_t, y) == 8 );
C_ASSERT( sizeof(w64_HTML_LinkAtPosition_t().y) >= 4 );
C_ASSERT( offsetof(w64_HTML_LinkAtPosition_t, pchURL) == 16 );
C_ASSERT( sizeof(w64_HTML_LinkAtPosition_t().pchURL) >= 8 );
C_ASSERT( offsetof(w64_HTML_LinkAtPosition_t, bInput) == 24 );
C_ASSERT( sizeof(w64_HTML_LinkAtPosition_t().bInput) >= 1 );
C_ASSERT( offsetof(w64_HTML_LinkAtPosition_t, bLiveLink) == 25 );
C_ASSERT( sizeof(w64_HTML_LinkAtPosition_t().bLiveLink) >= 1 );

C_ASSERT( sizeof(u64_HTML_LinkAtPosition_t) >= 24 );
C_ASSERT( offsetof(u64_HTML_LinkAtPosition_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_LinkAtPosition_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_LinkAtPosition_t, x) == 4 );
C_ASSERT( sizeof(u64_HTML_LinkAtPosition_t().x) >= 4 );
C_ASSERT( offsetof(u64_HTML_LinkAtPosition_t, y) == 8 );
C_ASSERT( sizeof(u64_HTML_LinkAtPosition_t().y) >= 4 );
C_ASSERT( offsetof(u64_HTML_LinkAtPosition_t, pchURL) == 12 );
C_ASSERT( sizeof(u64_HTML_LinkAtPosition_t().pchURL) >= 8 );
C_ASSERT( offsetof(u64_HTML_LinkAtPosition_t, bInput) == 20 );
C_ASSERT( sizeof(u64_HTML_LinkAtPosition_t().bInput) >= 1 );
C_ASSERT( offsetof(u64_HTML_LinkAtPosition_t, bLiveLink) == 21 );
C_ASSERT( sizeof(u64_HTML_LinkAtPosition_t().bLiveLink) >= 1 );

C_ASSERT( sizeof(w32_HTML_LinkAtPosition_t) >= 20 );
C_ASSERT( offsetof(w32_HTML_LinkAtPosition_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_LinkAtPosition_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_LinkAtPosition_t, x) == 4 );
C_ASSERT( sizeof(w32_HTML_LinkAtPosition_t().x) >= 4 );
C_ASSERT( offsetof(w32_HTML_LinkAtPosition_t, y) == 8 );
C_ASSERT( sizeof(w32_HTML_LinkAtPosition_t().y) >= 4 );
C_ASSERT( offsetof(w32_HTML_LinkAtPosition_t, pchURL) == 12 );
C_ASSERT( sizeof(w32_HTML_LinkAtPosition_t().pchURL) >= 4 );
C_ASSERT( offsetof(w32_HTML_LinkAtPosition_t, bInput) == 16 );
C_ASSERT( sizeof(w32_HTML_LinkAtPosition_t().bInput) >= 1 );
C_ASSERT( offsetof(w32_HTML_LinkAtPosition_t, bLiveLink) == 17 );
C_ASSERT( sizeof(w32_HTML_LinkAtPosition_t().bLiveLink) >= 1 );

C_ASSERT( sizeof(u32_HTML_LinkAtPosition_t) >= 20 );
C_ASSERT( offsetof(u32_HTML_LinkAtPosition_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_LinkAtPosition_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_LinkAtPosition_t, x) == 4 );
C_ASSERT( sizeof(u32_HTML_LinkAtPosition_t().x) >= 4 );
C_ASSERT( offsetof(u32_HTML_LinkAtPosition_t, y) == 8 );
C_ASSERT( sizeof(u32_HTML_LinkAtPosition_t().y) >= 4 );
C_ASSERT( offsetof(u32_HTML_LinkAtPosition_t, pchURL) == 12 );
C_ASSERT( sizeof(u32_HTML_LinkAtPosition_t().pchURL) >= 4 );
C_ASSERT( offsetof(u32_HTML_LinkAtPosition_t, bInput) == 16 );
C_ASSERT( sizeof(u32_HTML_LinkAtPosition_t().bInput) >= 1 );
C_ASSERT( offsetof(u32_HTML_LinkAtPosition_t, bLiveLink) == 17 );
C_ASSERT( sizeof(u32_HTML_LinkAtPosition_t().bLiveLink) >= 1 );

static void HTML_LinkAtPosition_t_u_from_w(void *dst, const void *src)
{
    u_HTML_LinkAtPosition_t *d = (u_HTML_LinkAtPosition_t *)dst;
    const w_HTML_LinkAtPosition_t *s = (const w_HTML_LinkAtPosition_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->x = s->x;
    d->y = s->y;
    d->pchURL = s->pchURL;
    d->bInput = s->bInput;
    d->bLiveLink = s->bLiveLink;
}
#ifdef __x86_64__
w64_HTML_LinkAtPosition_t::operator u64_HTML_LinkAtPosition_t() const
{
    u64_HTML_LinkAtPosition_t ret;
    HTML_LinkAtPosition_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_LinkAtPosition_t_w_from_u(void *dst, const void *src)
{
    w_HTML_LinkAtPosition_t *d = (w_HTML_LinkAtPosition_t *)dst;
    const u_HTML_LinkAtPosition_t *s = (const u_HTML_LinkAtPosition_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->x = s->x;
    d->y = s->y;
    steamclient_unix_path_to_dos_path(1, s->pchURL, g_tmppath, TEMP_PATH_BUFFER_LENGTH, 1);
    d->pchURL = g_tmppath;
    d->bInput = s->bInput;
    d->bLiveLink = s->bLiveLink;
}
#ifdef __x86_64__
u64_HTML_LinkAtPosition_t::operator w64_HTML_LinkAtPosition_t() const
{
    w64_HTML_LinkAtPosition_t ret;
    HTML_LinkAtPosition_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTML_LinkAtPosition_t::operator u32_HTML_LinkAtPosition_t() const
{
    u32_HTML_LinkAtPosition_t ret;
    HTML_LinkAtPosition_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTML_LinkAtPosition_t::operator w32_HTML_LinkAtPosition_t() const
{
    w32_HTML_LinkAtPosition_t ret;
    HTML_LinkAtPosition_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_NeedsPaint_t) >= 56 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, pBGRA) == 8 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().pBGRA) >= 8 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unWide) == 16 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unWide) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unTall) == 20 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unTall) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unUpdateX) == 24 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unUpdateX) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unUpdateY) == 28 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unUpdateY) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unUpdateWide) == 32 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unUpdateWide) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unUpdateTall) == 36 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unUpdateTall) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unScrollX) == 40 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unScrollX) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unScrollY) == 44 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unScrollY) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, flPageScale) == 48 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().flPageScale) >= 4 );
C_ASSERT( offsetof(w64_HTML_NeedsPaint_t, unPageSerial) == 52 );
C_ASSERT( sizeof(w64_HTML_NeedsPaint_t().unPageSerial) >= 4 );

C_ASSERT( sizeof(u64_HTML_NeedsPaint_t) >= 52 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, pBGRA) == 4 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().pBGRA) >= 8 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unWide) == 12 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unWide) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unTall) == 16 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unTall) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unUpdateX) == 20 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unUpdateX) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unUpdateY) == 24 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unUpdateY) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unUpdateWide) == 28 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unUpdateWide) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unUpdateTall) == 32 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unUpdateTall) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unScrollX) == 36 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unScrollX) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unScrollY) == 40 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unScrollY) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, flPageScale) == 44 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().flPageScale) >= 4 );
C_ASSERT( offsetof(u64_HTML_NeedsPaint_t, unPageSerial) == 48 );
C_ASSERT( sizeof(u64_HTML_NeedsPaint_t().unPageSerial) >= 4 );

C_ASSERT( sizeof(w32_HTML_NeedsPaint_t) >= 48 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, pBGRA) == 4 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().pBGRA) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unWide) == 8 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unWide) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unTall) == 12 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unTall) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unUpdateX) == 16 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unUpdateX) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unUpdateY) == 20 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unUpdateY) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unUpdateWide) == 24 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unUpdateWide) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unUpdateTall) == 28 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unUpdateTall) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unScrollX) == 32 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unScrollX) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unScrollY) == 36 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unScrollY) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, flPageScale) == 40 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().flPageScale) >= 4 );
C_ASSERT( offsetof(w32_HTML_NeedsPaint_t, unPageSerial) == 44 );
C_ASSERT( sizeof(w32_HTML_NeedsPaint_t().unPageSerial) >= 4 );

C_ASSERT( sizeof(u32_HTML_NeedsPaint_t) >= 48 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, pBGRA) == 4 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().pBGRA) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unWide) == 8 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unWide) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unTall) == 12 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unTall) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unUpdateX) == 16 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unUpdateX) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unUpdateY) == 20 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unUpdateY) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unUpdateWide) == 24 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unUpdateWide) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unUpdateTall) == 28 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unUpdateTall) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unScrollX) == 32 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unScrollX) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unScrollY) == 36 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unScrollY) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, flPageScale) == 40 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().flPageScale) >= 4 );
C_ASSERT( offsetof(u32_HTML_NeedsPaint_t, unPageSerial) == 44 );
C_ASSERT( sizeof(u32_HTML_NeedsPaint_t().unPageSerial) >= 4 );

static void HTML_NeedsPaint_t_u_from_w(void *dst, const void *src)
{
    u_HTML_NeedsPaint_t *d = (u_HTML_NeedsPaint_t *)dst;
    const w_HTML_NeedsPaint_t *s = (const w_HTML_NeedsPaint_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pBGRA = s->pBGRA;
    d->unWide = s->unWide;
    d->unTall = s->unTall;
    d->unUpdateX = s->unUpdateX;
    d->unUpdateY = s->unUpdateY;
    d->unUpdateWide = s->unUpdateWide;
    d->unUpdateTall = s->unUpdateTall;
    d->unScrollX = s->unScrollX;
    d->unScrollY = s->unScrollY;
    d->flPageScale = s->flPageScale;
    d->unPageSerial = s->unPageSerial;
}
#ifdef __x86_64__
w64_HTML_NeedsPaint_t::operator u64_HTML_NeedsPaint_t() const
{
    u64_HTML_NeedsPaint_t ret;
    HTML_NeedsPaint_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_NeedsPaint_t_w_from_u(void *dst, const void *src)
{
    w_HTML_NeedsPaint_t *d = (w_HTML_NeedsPaint_t *)dst;
    const u_HTML_NeedsPaint_t *s = (const u_HTML_NeedsPaint_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pBGRA = s->pBGRA;
    d->unWide = s->unWide;
    d->unTall = s->unTall;
    d->unUpdateX = s->unUpdateX;
    d->unUpdateY = s->unUpdateY;
    d->unUpdateWide = s->unUpdateWide;
    d->unUpdateTall = s->unUpdateTall;
    d->unScrollX = s->unScrollX;
    d->unScrollY = s->unScrollY;
    d->flPageScale = s->flPageScale;
    d->unPageSerial = s->unPageSerial;
}
#ifdef __x86_64__
u64_HTML_NeedsPaint_t::operator w64_HTML_NeedsPaint_t() const
{
    w64_HTML_NeedsPaint_t ret;
    HTML_NeedsPaint_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_NewWindow_t_132x) >= 40 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_132x, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_132x().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_132x, pchURL) == 8 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_132x().pchURL) >= 8 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_132x, unX) == 16 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_132x().unX) >= 4 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_132x, unY) == 20 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_132x().unY) >= 4 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_132x, unWide) == 24 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_132x().unWide) >= 4 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_132x, unTall) == 28 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_132x().unTall) >= 4 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_132x, unNewWindow_BrowserHandle_IGNORE) == 32 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_132x().unNewWindow_BrowserHandle_IGNORE) >= 4 );

C_ASSERT( sizeof(u64_HTML_NewWindow_t_132x) >= 32 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_132x, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_132x().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_132x, pchURL) == 4 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_132x().pchURL) >= 8 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_132x, unX) == 12 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_132x().unX) >= 4 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_132x, unY) == 16 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_132x().unY) >= 4 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_132x, unWide) == 20 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_132x().unWide) >= 4 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_132x, unTall) == 24 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_132x().unTall) >= 4 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_132x, unNewWindow_BrowserHandle_IGNORE) == 28 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_132x().unNewWindow_BrowserHandle_IGNORE) >= 4 );

C_ASSERT( sizeof(w32_HTML_NewWindow_t_132x) >= 28 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_132x, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_132x().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_132x, pchURL) == 4 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_132x().pchURL) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_132x, unX) == 8 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_132x().unX) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_132x, unY) == 12 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_132x().unY) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_132x, unWide) == 16 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_132x().unWide) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_132x, unTall) == 20 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_132x().unTall) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_132x, unNewWindow_BrowserHandle_IGNORE) == 24 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_132x().unNewWindow_BrowserHandle_IGNORE) >= 4 );

C_ASSERT( sizeof(u32_HTML_NewWindow_t_132x) >= 28 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_132x, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_132x().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_132x, pchURL) == 4 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_132x().pchURL) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_132x, unX) == 8 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_132x().unX) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_132x, unY) == 12 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_132x().unY) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_132x, unWide) == 16 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_132x().unWide) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_132x, unTall) == 20 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_132x().unTall) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_132x, unNewWindow_BrowserHandle_IGNORE) == 24 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_132x().unNewWindow_BrowserHandle_IGNORE) >= 4 );

C_ASSERT( sizeof(w64_HTML_NewWindow_t_130x) >= 32 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_130x, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_130x().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_130x, pchURL) == 8 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_130x().pchURL) >= 8 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_130x, unX) == 16 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_130x().unX) >= 4 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_130x, unY) == 20 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_130x().unY) >= 4 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_130x, unWide) == 24 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_130x().unWide) >= 4 );
C_ASSERT( offsetof(w64_HTML_NewWindow_t_130x, unTall) == 28 );
C_ASSERT( sizeof(w64_HTML_NewWindow_t_130x().unTall) >= 4 );

C_ASSERT( sizeof(u64_HTML_NewWindow_t_130x) >= 28 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_130x, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_130x().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_130x, pchURL) == 4 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_130x().pchURL) >= 8 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_130x, unX) == 12 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_130x().unX) >= 4 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_130x, unY) == 16 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_130x().unY) >= 4 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_130x, unWide) == 20 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_130x().unWide) >= 4 );
C_ASSERT( offsetof(u64_HTML_NewWindow_t_130x, unTall) == 24 );
C_ASSERT( sizeof(u64_HTML_NewWindow_t_130x().unTall) >= 4 );

C_ASSERT( sizeof(w32_HTML_NewWindow_t_130x) >= 24 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_130x, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_130x().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_130x, pchURL) == 4 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_130x().pchURL) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_130x, unX) == 8 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_130x().unX) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_130x, unY) == 12 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_130x().unY) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_130x, unWide) == 16 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_130x().unWide) >= 4 );
C_ASSERT( offsetof(w32_HTML_NewWindow_t_130x, unTall) == 20 );
C_ASSERT( sizeof(w32_HTML_NewWindow_t_130x().unTall) >= 4 );

C_ASSERT( sizeof(u32_HTML_NewWindow_t_130x) >= 24 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_130x, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_130x().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_130x, pchURL) == 4 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_130x().pchURL) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_130x, unX) == 8 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_130x().unX) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_130x, unY) == 12 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_130x().unY) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_130x, unWide) == 16 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_130x().unWide) >= 4 );
C_ASSERT( offsetof(u32_HTML_NewWindow_t_130x, unTall) == 20 );
C_ASSERT( sizeof(u32_HTML_NewWindow_t_130x().unTall) >= 4 );

static void HTML_NewWindow_t_132x_u_from_w(void *dst, const void *src)
{
    u_HTML_NewWindow_t_132x *d = (u_HTML_NewWindow_t_132x *)dst;
    const w_HTML_NewWindow_t_132x *s = (const w_HTML_NewWindow_t_132x *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchURL = s->pchURL;
    d->unX = s->unX;
    d->unY = s->unY;
    d->unWide = s->unWide;
    d->unTall = s->unTall;
    d->unNewWindow_BrowserHandle_IGNORE = s->unNewWindow_BrowserHandle_IGNORE;
}
#ifdef __x86_64__
w64_HTML_NewWindow_t_132x::operator u64_HTML_NewWindow_t_132x() const
{
    u64_HTML_NewWindow_t_132x ret;
    HTML_NewWindow_t_132x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_NewWindow_t_132x_w_from_u(void *dst, const void *src)
{
    w_HTML_NewWindow_t_132x *d = (w_HTML_NewWindow_t_132x *)dst;
    const u_HTML_NewWindow_t_132x *s = (const u_HTML_NewWindow_t_132x *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    steamclient_unix_path_to_dos_path(1, s->pchURL, g_tmppath, TEMP_PATH_BUFFER_LENGTH, 1);
    d->pchURL = g_tmppath;
    d->unX = s->unX;
    d->unY = s->unY;
    d->unWide = s->unWide;
    d->unTall = s->unTall;
    d->unNewWindow_BrowserHandle_IGNORE = s->unNewWindow_BrowserHandle_IGNORE;
}
#ifdef __x86_64__
u64_HTML_NewWindow_t_132x::operator w64_HTML_NewWindow_t_132x() const
{
    w64_HTML_NewWindow_t_132x ret;
    HTML_NewWindow_t_132x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTML_NewWindow_t_132x::operator u32_HTML_NewWindow_t_132x() const
{
    u32_HTML_NewWindow_t_132x ret;
    HTML_NewWindow_t_132x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTML_NewWindow_t_132x::operator w32_HTML_NewWindow_t_132x() const
{
    w32_HTML_NewWindow_t_132x ret;
    HTML_NewWindow_t_132x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void HTML_NewWindow_t_130x_u_from_w(void *dst, const void *src)
{
    u_HTML_NewWindow_t_130x *d = (u_HTML_NewWindow_t_130x *)dst;
    const w_HTML_NewWindow_t_130x *s = (const w_HTML_NewWindow_t_130x *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchURL = s->pchURL;
    d->unX = s->unX;
    d->unY = s->unY;
    d->unWide = s->unWide;
    d->unTall = s->unTall;
}
#ifdef __x86_64__
w64_HTML_NewWindow_t_130x::operator u64_HTML_NewWindow_t_130x() const
{
    u64_HTML_NewWindow_t_130x ret;
    HTML_NewWindow_t_130x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_NewWindow_t_130x_w_from_u(void *dst, const void *src)
{
    w_HTML_NewWindow_t_130x *d = (w_HTML_NewWindow_t_130x *)dst;
    const u_HTML_NewWindow_t_130x *s = (const u_HTML_NewWindow_t_130x *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    steamclient_unix_path_to_dos_path(1, s->pchURL, g_tmppath, TEMP_PATH_BUFFER_LENGTH, 1);
    d->pchURL = g_tmppath;
    d->unX = s->unX;
    d->unY = s->unY;
    d->unWide = s->unWide;
    d->unTall = s->unTall;
}
#ifdef __x86_64__
u64_HTML_NewWindow_t_130x::operator w64_HTML_NewWindow_t_130x() const
{
    w64_HTML_NewWindow_t_130x ret;
    HTML_NewWindow_t_130x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTML_NewWindow_t_130x::operator u32_HTML_NewWindow_t_130x() const
{
    u32_HTML_NewWindow_t_130x ret;
    HTML_NewWindow_t_130x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTML_NewWindow_t_130x::operator w32_HTML_NewWindow_t_130x() const
{
    w32_HTML_NewWindow_t_130x ret;
    HTML_NewWindow_t_130x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_OpenLinkInNewTab_t) >= 16 );
C_ASSERT( offsetof(w64_HTML_OpenLinkInNewTab_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_OpenLinkInNewTab_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_OpenLinkInNewTab_t, pchURL) == 8 );
C_ASSERT( sizeof(w64_HTML_OpenLinkInNewTab_t().pchURL) >= 8 );

C_ASSERT( sizeof(u64_HTML_OpenLinkInNewTab_t) >= 12 );
C_ASSERT( offsetof(u64_HTML_OpenLinkInNewTab_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_OpenLinkInNewTab_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_OpenLinkInNewTab_t, pchURL) == 4 );
C_ASSERT( sizeof(u64_HTML_OpenLinkInNewTab_t().pchURL) >= 8 );

C_ASSERT( sizeof(w32_HTML_OpenLinkInNewTab_t) >= 8 );
C_ASSERT( offsetof(w32_HTML_OpenLinkInNewTab_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_OpenLinkInNewTab_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_OpenLinkInNewTab_t, pchURL) == 4 );
C_ASSERT( sizeof(w32_HTML_OpenLinkInNewTab_t().pchURL) >= 4 );

C_ASSERT( sizeof(u32_HTML_OpenLinkInNewTab_t) >= 8 );
C_ASSERT( offsetof(u32_HTML_OpenLinkInNewTab_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_OpenLinkInNewTab_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_OpenLinkInNewTab_t, pchURL) == 4 );
C_ASSERT( sizeof(u32_HTML_OpenLinkInNewTab_t().pchURL) >= 4 );

static void HTML_OpenLinkInNewTab_t_u_from_w(void *dst, const void *src)
{
    u_HTML_OpenLinkInNewTab_t *d = (u_HTML_OpenLinkInNewTab_t *)dst;
    const w_HTML_OpenLinkInNewTab_t *s = (const w_HTML_OpenLinkInNewTab_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchURL = s->pchURL;
}
#ifdef __x86_64__
w64_HTML_OpenLinkInNewTab_t::operator u64_HTML_OpenLinkInNewTab_t() const
{
    u64_HTML_OpenLinkInNewTab_t ret;
    HTML_OpenLinkInNewTab_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_OpenLinkInNewTab_t_w_from_u(void *dst, const void *src)
{
    w_HTML_OpenLinkInNewTab_t *d = (w_HTML_OpenLinkInNewTab_t *)dst;
    const u_HTML_OpenLinkInNewTab_t *s = (const u_HTML_OpenLinkInNewTab_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    steamclient_unix_path_to_dos_path(1, s->pchURL, g_tmppath, TEMP_PATH_BUFFER_LENGTH, 1);
    d->pchURL = g_tmppath;
}
#ifdef __x86_64__
u64_HTML_OpenLinkInNewTab_t::operator w64_HTML_OpenLinkInNewTab_t() const
{
    w64_HTML_OpenLinkInNewTab_t ret;
    HTML_OpenLinkInNewTab_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTML_OpenLinkInNewTab_t::operator u32_HTML_OpenLinkInNewTab_t() const
{
    u32_HTML_OpenLinkInNewTab_t ret;
    HTML_OpenLinkInNewTab_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTML_OpenLinkInNewTab_t::operator w32_HTML_OpenLinkInNewTab_t() const
{
    w32_HTML_OpenLinkInNewTab_t ret;
    HTML_OpenLinkInNewTab_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_ShowToolTip_t) >= 16 );
C_ASSERT( offsetof(w64_HTML_ShowToolTip_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_ShowToolTip_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_ShowToolTip_t, pchMsg) == 8 );
C_ASSERT( sizeof(w64_HTML_ShowToolTip_t().pchMsg) >= 8 );

C_ASSERT( sizeof(u64_HTML_ShowToolTip_t) >= 12 );
C_ASSERT( offsetof(u64_HTML_ShowToolTip_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_ShowToolTip_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_ShowToolTip_t, pchMsg) == 4 );
C_ASSERT( sizeof(u64_HTML_ShowToolTip_t().pchMsg) >= 8 );

C_ASSERT( sizeof(w32_HTML_ShowToolTip_t) >= 8 );
C_ASSERT( offsetof(w32_HTML_ShowToolTip_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_ShowToolTip_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_ShowToolTip_t, pchMsg) == 4 );
C_ASSERT( sizeof(w32_HTML_ShowToolTip_t().pchMsg) >= 4 );

C_ASSERT( sizeof(u32_HTML_ShowToolTip_t) >= 8 );
C_ASSERT( offsetof(u32_HTML_ShowToolTip_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_ShowToolTip_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_ShowToolTip_t, pchMsg) == 4 );
C_ASSERT( sizeof(u32_HTML_ShowToolTip_t().pchMsg) >= 4 );

static void HTML_ShowToolTip_t_u_from_w(void *dst, const void *src)
{
    u_HTML_ShowToolTip_t *d = (u_HTML_ShowToolTip_t *)dst;
    const w_HTML_ShowToolTip_t *s = (const w_HTML_ShowToolTip_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMsg = s->pchMsg;
}
#ifdef __x86_64__
w64_HTML_ShowToolTip_t::operator u64_HTML_ShowToolTip_t() const
{
    u64_HTML_ShowToolTip_t ret;
    HTML_ShowToolTip_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_ShowToolTip_t_w_from_u(void *dst, const void *src)
{
    w_HTML_ShowToolTip_t *d = (w_HTML_ShowToolTip_t *)dst;
    const u_HTML_ShowToolTip_t *s = (const u_HTML_ShowToolTip_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMsg = s->pchMsg;
}
#ifdef __x86_64__
u64_HTML_ShowToolTip_t::operator w64_HTML_ShowToolTip_t() const
{
    w64_HTML_ShowToolTip_t ret;
    HTML_ShowToolTip_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_StartRequest_t) >= 40 );
C_ASSERT( offsetof(w64_HTML_StartRequest_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_StartRequest_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_StartRequest_t, pchURL) == 8 );
C_ASSERT( sizeof(w64_HTML_StartRequest_t().pchURL) >= 8 );
C_ASSERT( offsetof(w64_HTML_StartRequest_t, pchTarget) == 16 );
C_ASSERT( sizeof(w64_HTML_StartRequest_t().pchTarget) >= 8 );
C_ASSERT( offsetof(w64_HTML_StartRequest_t, pchPostData) == 24 );
C_ASSERT( sizeof(w64_HTML_StartRequest_t().pchPostData) >= 8 );
C_ASSERT( offsetof(w64_HTML_StartRequest_t, bIsRedirect) == 32 );
C_ASSERT( sizeof(w64_HTML_StartRequest_t().bIsRedirect) >= 1 );

C_ASSERT( sizeof(u64_HTML_StartRequest_t) >= 32 );
C_ASSERT( offsetof(u64_HTML_StartRequest_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_StartRequest_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_StartRequest_t, pchURL) == 4 );
C_ASSERT( sizeof(u64_HTML_StartRequest_t().pchURL) >= 8 );
C_ASSERT( offsetof(u64_HTML_StartRequest_t, pchTarget) == 12 );
C_ASSERT( sizeof(u64_HTML_StartRequest_t().pchTarget) >= 8 );
C_ASSERT( offsetof(u64_HTML_StartRequest_t, pchPostData) == 20 );
C_ASSERT( sizeof(u64_HTML_StartRequest_t().pchPostData) >= 8 );
C_ASSERT( offsetof(u64_HTML_StartRequest_t, bIsRedirect) == 28 );
C_ASSERT( sizeof(u64_HTML_StartRequest_t().bIsRedirect) >= 1 );

C_ASSERT( sizeof(w32_HTML_StartRequest_t) >= 20 );
C_ASSERT( offsetof(w32_HTML_StartRequest_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_StartRequest_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_StartRequest_t, pchURL) == 4 );
C_ASSERT( sizeof(w32_HTML_StartRequest_t().pchURL) >= 4 );
C_ASSERT( offsetof(w32_HTML_StartRequest_t, pchTarget) == 8 );
C_ASSERT( sizeof(w32_HTML_StartRequest_t().pchTarget) >= 4 );
C_ASSERT( offsetof(w32_HTML_StartRequest_t, pchPostData) == 12 );
C_ASSERT( sizeof(w32_HTML_StartRequest_t().pchPostData) >= 4 );
C_ASSERT( offsetof(w32_HTML_StartRequest_t, bIsRedirect) == 16 );
C_ASSERT( sizeof(w32_HTML_StartRequest_t().bIsRedirect) >= 1 );

C_ASSERT( sizeof(u32_HTML_StartRequest_t) >= 20 );
C_ASSERT( offsetof(u32_HTML_StartRequest_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_StartRequest_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_StartRequest_t, pchURL) == 4 );
C_ASSERT( sizeof(u32_HTML_StartRequest_t().pchURL) >= 4 );
C_ASSERT( offsetof(u32_HTML_StartRequest_t, pchTarget) == 8 );
C_ASSERT( sizeof(u32_HTML_StartRequest_t().pchTarget) >= 4 );
C_ASSERT( offsetof(u32_HTML_StartRequest_t, pchPostData) == 12 );
C_ASSERT( sizeof(u32_HTML_StartRequest_t().pchPostData) >= 4 );
C_ASSERT( offsetof(u32_HTML_StartRequest_t, bIsRedirect) == 16 );
C_ASSERT( sizeof(u32_HTML_StartRequest_t().bIsRedirect) >= 1 );

static void HTML_StartRequest_t_u_from_w(void *dst, const void *src)
{
    u_HTML_StartRequest_t *d = (u_HTML_StartRequest_t *)dst;
    const w_HTML_StartRequest_t *s = (const w_HTML_StartRequest_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchURL = s->pchURL;
    d->pchTarget = s->pchTarget;
    d->pchPostData = s->pchPostData;
    d->bIsRedirect = s->bIsRedirect;
}
#ifdef __x86_64__
w64_HTML_StartRequest_t::operator u64_HTML_StartRequest_t() const
{
    u64_HTML_StartRequest_t ret;
    HTML_StartRequest_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_StartRequest_t_w_from_u(void *dst, const void *src)
{
    w_HTML_StartRequest_t *d = (w_HTML_StartRequest_t *)dst;
    const u_HTML_StartRequest_t *s = (const u_HTML_StartRequest_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    steamclient_unix_path_to_dos_path(1, s->pchURL, g_tmppath, TEMP_PATH_BUFFER_LENGTH, 1);
    d->pchURL = g_tmppath;
    d->pchTarget = s->pchTarget;
    d->pchPostData = s->pchPostData;
    d->bIsRedirect = s->bIsRedirect;
}
#ifdef __x86_64__
u64_HTML_StartRequest_t::operator w64_HTML_StartRequest_t() const
{
    w64_HTML_StartRequest_t ret;
    HTML_StartRequest_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTML_StartRequest_t::operator u32_HTML_StartRequest_t() const
{
    u32_HTML_StartRequest_t ret;
    HTML_StartRequest_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTML_StartRequest_t::operator w32_HTML_StartRequest_t() const
{
    w32_HTML_StartRequest_t ret;
    HTML_StartRequest_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_StatusText_t) >= 16 );
C_ASSERT( offsetof(w64_HTML_StatusText_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_StatusText_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_StatusText_t, pchMsg) == 8 );
C_ASSERT( sizeof(w64_HTML_StatusText_t().pchMsg) >= 8 );

C_ASSERT( sizeof(u64_HTML_StatusText_t) >= 12 );
C_ASSERT( offsetof(u64_HTML_StatusText_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_StatusText_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_StatusText_t, pchMsg) == 4 );
C_ASSERT( sizeof(u64_HTML_StatusText_t().pchMsg) >= 8 );

C_ASSERT( sizeof(w32_HTML_StatusText_t) >= 8 );
C_ASSERT( offsetof(w32_HTML_StatusText_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_StatusText_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_StatusText_t, pchMsg) == 4 );
C_ASSERT( sizeof(w32_HTML_StatusText_t().pchMsg) >= 4 );

C_ASSERT( sizeof(u32_HTML_StatusText_t) >= 8 );
C_ASSERT( offsetof(u32_HTML_StatusText_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_StatusText_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_StatusText_t, pchMsg) == 4 );
C_ASSERT( sizeof(u32_HTML_StatusText_t().pchMsg) >= 4 );

static void HTML_StatusText_t_u_from_w(void *dst, const void *src)
{
    u_HTML_StatusText_t *d = (u_HTML_StatusText_t *)dst;
    const w_HTML_StatusText_t *s = (const w_HTML_StatusText_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMsg = s->pchMsg;
}
#ifdef __x86_64__
w64_HTML_StatusText_t::operator u64_HTML_StatusText_t() const
{
    u64_HTML_StatusText_t ret;
    HTML_StatusText_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_StatusText_t_w_from_u(void *dst, const void *src)
{
    w_HTML_StatusText_t *d = (w_HTML_StatusText_t *)dst;
    const u_HTML_StatusText_t *s = (const u_HTML_StatusText_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMsg = s->pchMsg;
}
#ifdef __x86_64__
u64_HTML_StatusText_t::operator w64_HTML_StatusText_t() const
{
    w64_HTML_StatusText_t ret;
    HTML_StatusText_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_URLChanged_t) >= 48 );
C_ASSERT( offsetof(w64_HTML_URLChanged_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_URLChanged_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_URLChanged_t, pchURL) == 8 );
C_ASSERT( sizeof(w64_HTML_URLChanged_t().pchURL) >= 8 );
C_ASSERT( offsetof(w64_HTML_URLChanged_t, pchPostData) == 16 );
C_ASSERT( sizeof(w64_HTML_URLChanged_t().pchPostData) >= 8 );
C_ASSERT( offsetof(w64_HTML_URLChanged_t, bIsRedirect) == 24 );
C_ASSERT( sizeof(w64_HTML_URLChanged_t().bIsRedirect) >= 1 );
C_ASSERT( offsetof(w64_HTML_URLChanged_t, pchPageTitle) == 32 );
C_ASSERT( sizeof(w64_HTML_URLChanged_t().pchPageTitle) >= 8 );
C_ASSERT( offsetof(w64_HTML_URLChanged_t, bNewNavigation) == 40 );
C_ASSERT( sizeof(w64_HTML_URLChanged_t().bNewNavigation) >= 1 );

C_ASSERT( sizeof(u64_HTML_URLChanged_t) >= 36 );
C_ASSERT( offsetof(u64_HTML_URLChanged_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_URLChanged_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_URLChanged_t, pchURL) == 4 );
C_ASSERT( sizeof(u64_HTML_URLChanged_t().pchURL) >= 8 );
C_ASSERT( offsetof(u64_HTML_URLChanged_t, pchPostData) == 12 );
C_ASSERT( sizeof(u64_HTML_URLChanged_t().pchPostData) >= 8 );
C_ASSERT( offsetof(u64_HTML_URLChanged_t, bIsRedirect) == 20 );
C_ASSERT( sizeof(u64_HTML_URLChanged_t().bIsRedirect) >= 1 );
C_ASSERT( offsetof(u64_HTML_URLChanged_t, pchPageTitle) == 24 );
C_ASSERT( sizeof(u64_HTML_URLChanged_t().pchPageTitle) >= 8 );
C_ASSERT( offsetof(u64_HTML_URLChanged_t, bNewNavigation) == 32 );
C_ASSERT( sizeof(u64_HTML_URLChanged_t().bNewNavigation) >= 1 );

C_ASSERT( sizeof(w32_HTML_URLChanged_t) >= 24 );
C_ASSERT( offsetof(w32_HTML_URLChanged_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_URLChanged_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_URLChanged_t, pchURL) == 4 );
C_ASSERT( sizeof(w32_HTML_URLChanged_t().pchURL) >= 4 );
C_ASSERT( offsetof(w32_HTML_URLChanged_t, pchPostData) == 8 );
C_ASSERT( sizeof(w32_HTML_URLChanged_t().pchPostData) >= 4 );
C_ASSERT( offsetof(w32_HTML_URLChanged_t, bIsRedirect) == 12 );
C_ASSERT( sizeof(w32_HTML_URLChanged_t().bIsRedirect) >= 1 );
C_ASSERT( offsetof(w32_HTML_URLChanged_t, pchPageTitle) == 16 );
C_ASSERT( sizeof(w32_HTML_URLChanged_t().pchPageTitle) >= 4 );
C_ASSERT( offsetof(w32_HTML_URLChanged_t, bNewNavigation) == 20 );
C_ASSERT( sizeof(w32_HTML_URLChanged_t().bNewNavigation) >= 1 );

C_ASSERT( sizeof(u32_HTML_URLChanged_t) >= 24 );
C_ASSERT( offsetof(u32_HTML_URLChanged_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_URLChanged_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_URLChanged_t, pchURL) == 4 );
C_ASSERT( sizeof(u32_HTML_URLChanged_t().pchURL) >= 4 );
C_ASSERT( offsetof(u32_HTML_URLChanged_t, pchPostData) == 8 );
C_ASSERT( sizeof(u32_HTML_URLChanged_t().pchPostData) >= 4 );
C_ASSERT( offsetof(u32_HTML_URLChanged_t, bIsRedirect) == 12 );
C_ASSERT( sizeof(u32_HTML_URLChanged_t().bIsRedirect) >= 1 );
C_ASSERT( offsetof(u32_HTML_URLChanged_t, pchPageTitle) == 16 );
C_ASSERT( sizeof(u32_HTML_URLChanged_t().pchPageTitle) >= 4 );
C_ASSERT( offsetof(u32_HTML_URLChanged_t, bNewNavigation) == 20 );
C_ASSERT( sizeof(u32_HTML_URLChanged_t().bNewNavigation) >= 1 );

static void HTML_URLChanged_t_u_from_w(void *dst, const void *src)
{
    u_HTML_URLChanged_t *d = (u_HTML_URLChanged_t *)dst;
    const w_HTML_URLChanged_t *s = (const w_HTML_URLChanged_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchURL = s->pchURL;
    d->pchPostData = s->pchPostData;
    d->bIsRedirect = s->bIsRedirect;
    d->pchPageTitle = s->pchPageTitle;
    d->bNewNavigation = s->bNewNavigation;
}
#ifdef __x86_64__
w64_HTML_URLChanged_t::operator u64_HTML_URLChanged_t() const
{
    u64_HTML_URLChanged_t ret;
    HTML_URLChanged_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_URLChanged_t_w_from_u(void *dst, const void *src)
{
    w_HTML_URLChanged_t *d = (w_HTML_URLChanged_t *)dst;
    const u_HTML_URLChanged_t *s = (const u_HTML_URLChanged_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    steamclient_unix_path_to_dos_path(1, s->pchURL, g_tmppath, TEMP_PATH_BUFFER_LENGTH, 1);
    d->pchURL = g_tmppath;
    d->pchPostData = s->pchPostData;
    d->bIsRedirect = s->bIsRedirect;
    d->pchPageTitle = s->pchPageTitle;
    d->bNewNavigation = s->bNewNavigation;
}
#ifdef __x86_64__
u64_HTML_URLChanged_t::operator w64_HTML_URLChanged_t() const
{
    w64_HTML_URLChanged_t ret;
    HTML_URLChanged_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTML_URLChanged_t::operator u32_HTML_URLChanged_t() const
{
    u32_HTML_URLChanged_t ret;
    HTML_URLChanged_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTML_URLChanged_t::operator w32_HTML_URLChanged_t() const
{
    w32_HTML_URLChanged_t ret;
    HTML_URLChanged_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTML_UpdateToolTip_t) >= 16 );
C_ASSERT( offsetof(w64_HTML_UpdateToolTip_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w64_HTML_UpdateToolTip_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w64_HTML_UpdateToolTip_t, pchMsg) == 8 );
C_ASSERT( sizeof(w64_HTML_UpdateToolTip_t().pchMsg) >= 8 );

C_ASSERT( sizeof(u64_HTML_UpdateToolTip_t) >= 12 );
C_ASSERT( offsetof(u64_HTML_UpdateToolTip_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u64_HTML_UpdateToolTip_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u64_HTML_UpdateToolTip_t, pchMsg) == 4 );
C_ASSERT( sizeof(u64_HTML_UpdateToolTip_t().pchMsg) >= 8 );

C_ASSERT( sizeof(w32_HTML_UpdateToolTip_t) >= 8 );
C_ASSERT( offsetof(w32_HTML_UpdateToolTip_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(w32_HTML_UpdateToolTip_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(w32_HTML_UpdateToolTip_t, pchMsg) == 4 );
C_ASSERT( sizeof(w32_HTML_UpdateToolTip_t().pchMsg) >= 4 );

C_ASSERT( sizeof(u32_HTML_UpdateToolTip_t) >= 8 );
C_ASSERT( offsetof(u32_HTML_UpdateToolTip_t, unBrowserHandle) == 0 );
C_ASSERT( sizeof(u32_HTML_UpdateToolTip_t().unBrowserHandle) >= 4 );
C_ASSERT( offsetof(u32_HTML_UpdateToolTip_t, pchMsg) == 4 );
C_ASSERT( sizeof(u32_HTML_UpdateToolTip_t().pchMsg) >= 4 );

static void HTML_UpdateToolTip_t_u_from_w(void *dst, const void *src)
{
    u_HTML_UpdateToolTip_t *d = (u_HTML_UpdateToolTip_t *)dst;
    const w_HTML_UpdateToolTip_t *s = (const w_HTML_UpdateToolTip_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMsg = s->pchMsg;
}
#ifdef __x86_64__
w64_HTML_UpdateToolTip_t::operator u64_HTML_UpdateToolTip_t() const
{
    u64_HTML_UpdateToolTip_t ret;
    HTML_UpdateToolTip_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTML_UpdateToolTip_t_w_from_u(void *dst, const void *src)
{
    w_HTML_UpdateToolTip_t *d = (w_HTML_UpdateToolTip_t *)dst;
    const u_HTML_UpdateToolTip_t *s = (const u_HTML_UpdateToolTip_t *)src;

    d->unBrowserHandle = s->unBrowserHandle;
    d->pchMsg = s->pchMsg;
}
#ifdef __x86_64__
u64_HTML_UpdateToolTip_t::operator w64_HTML_UpdateToolTip_t() const
{
    w64_HTML_UpdateToolTip_t ret;
    HTML_UpdateToolTip_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_132x) >= 32 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_132x, m_hRequest) == 0 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_132x().m_hRequest) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_132x, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_132x().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_132x, m_bRequestSuccessful) == 16 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_132x().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_132x, m_eStatusCode) == 20 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_132x().m_eStatusCode) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_132x, m_unBodySize) == 24 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_132x().m_unBodySize) >= 4 );

C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_132x) >= 24 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_132x, m_hRequest) == 0 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_132x().m_hRequest) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_132x, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_132x().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_132x, m_bRequestSuccessful) == 12 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_132x().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_132x, m_eStatusCode) == 16 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_132x().m_eStatusCode) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_132x, m_unBodySize) == 20 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_132x().m_unBodySize) >= 4 );

C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_132x) >= 32 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_132x, m_hRequest) == 0 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_132x().m_hRequest) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_132x, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_132x().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_132x, m_bRequestSuccessful) == 16 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_132x().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_132x, m_eStatusCode) == 20 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_132x().m_eStatusCode) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_132x, m_unBodySize) == 24 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_132x().m_unBodySize) >= 4 );

C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_132x) >= 24 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_132x, m_hRequest) == 0 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_132x().m_hRequest) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_132x, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_132x().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_132x, m_bRequestSuccessful) == 12 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_132x().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_132x, m_eStatusCode) == 16 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_132x().m_eStatusCode) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_132x, m_unBodySize) == 20 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_132x().m_unBodySize) >= 4 );

C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_123) >= 24 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_123, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_123().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_123, m_bRequestSuccessful) == 16 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_123().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_123, m_eStatusCode) == 20 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_123().m_eStatusCode) >= 4 );

C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_123) >= 20 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_123, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_123().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_123, m_bRequestSuccessful) == 12 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_123().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_123, m_eStatusCode) == 16 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_123().m_eStatusCode) >= 4 );

C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_123) >= 24 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_123, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_123().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_123, m_bRequestSuccessful) == 16 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_123().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_123, m_eStatusCode) == 20 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_123().m_eStatusCode) >= 4 );

C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_123) >= 20 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_123, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_123().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_123, m_bRequestSuccessful) == 12 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_123().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_123, m_eStatusCode) == 16 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_123().m_eStatusCode) >= 4 );

C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_115) >= 24 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_115, m_hRequest) == 0 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_115().m_hRequest) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_115, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_115().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_115, m_bRequestSuccessful) == 16 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_115().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(w64_HTTPRequestCompleted_t_115, m_eStatusCode) == 20 );
C_ASSERT( sizeof(w64_HTTPRequestCompleted_t_115().m_eStatusCode) >= 4 );

C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_115) >= 24 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_115, m_hRequest) == 0 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_115().m_hRequest) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_115, m_ulContextValue) == 8 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_115().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_115, m_bRequestSuccessful) == 16 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_115().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(u64_HTTPRequestCompleted_t_115, m_eStatusCode) == 20 );
C_ASSERT( sizeof(u64_HTTPRequestCompleted_t_115().m_eStatusCode) >= 4 );

C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_115) >= 24 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_115, m_hRequest) == 0 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_115().m_hRequest) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_115, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_115().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_115, m_bRequestSuccessful) == 16 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_115().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(w32_HTTPRequestCompleted_t_115, m_eStatusCode) == 20 );
C_ASSERT( sizeof(w32_HTTPRequestCompleted_t_115().m_eStatusCode) >= 4 );

C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_115) >= 20 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_115, m_hRequest) == 0 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_115().m_hRequest) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_115, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_115().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_115, m_bRequestSuccessful) == 12 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_115().m_bRequestSuccessful) >= 1 );
C_ASSERT( offsetof(u32_HTTPRequestCompleted_t_115, m_eStatusCode) == 16 );
C_ASSERT( sizeof(u32_HTTPRequestCompleted_t_115().m_eStatusCode) >= 4 );

static void HTTPRequestCompleted_t_132x_u_from_w(void *dst, const void *src)
{
    u_HTTPRequestCompleted_t_132x *d = (u_HTTPRequestCompleted_t_132x *)dst;
    const w_HTTPRequestCompleted_t_132x *s = (const w_HTTPRequestCompleted_t_132x *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_bRequestSuccessful = s->m_bRequestSuccessful;
    d->m_eStatusCode = s->m_eStatusCode;
    d->m_unBodySize = s->m_unBodySize;
}
#ifdef __x86_64__
w64_HTTPRequestCompleted_t_132x::operator u64_HTTPRequestCompleted_t_132x() const
{
    u64_HTTPRequestCompleted_t_132x ret;
    HTTPRequestCompleted_t_132x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTTPRequestCompleted_t_132x_w_from_u(void *dst, const void *src)
{
    w_HTTPRequestCompleted_t_132x *d = (w_HTTPRequestCompleted_t_132x *)dst;
    const u_HTTPRequestCompleted_t_132x *s = (const u_HTTPRequestCompleted_t_132x *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_bRequestSuccessful = s->m_bRequestSuccessful;
    d->m_eStatusCode = s->m_eStatusCode;
    d->m_unBodySize = s->m_unBodySize;
}
#ifdef __x86_64__
u64_HTTPRequestCompleted_t_132x::operator w64_HTTPRequestCompleted_t_132x() const
{
    w64_HTTPRequestCompleted_t_132x ret;
    HTTPRequestCompleted_t_132x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTTPRequestCompleted_t_132x::operator u32_HTTPRequestCompleted_t_132x() const
{
    u32_HTTPRequestCompleted_t_132x ret;
    HTTPRequestCompleted_t_132x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTTPRequestCompleted_t_132x::operator w32_HTTPRequestCompleted_t_132x() const
{
    w32_HTTPRequestCompleted_t_132x ret;
    HTTPRequestCompleted_t_132x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void HTTPRequestCompleted_t_123_u_from_w(void *dst, const void *src)
{
    u_HTTPRequestCompleted_t_123 *d = (u_HTTPRequestCompleted_t_123 *)dst;
    const w_HTTPRequestCompleted_t_123 *s = (const w_HTTPRequestCompleted_t_123 *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_bRequestSuccessful = s->m_bRequestSuccessful;
    d->m_eStatusCode = s->m_eStatusCode;
}
#ifdef __x86_64__
w64_HTTPRequestCompleted_t_123::operator u64_HTTPRequestCompleted_t_123() const
{
    u64_HTTPRequestCompleted_t_123 ret;
    HTTPRequestCompleted_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTTPRequestCompleted_t_123_w_from_u(void *dst, const void *src)
{
    w_HTTPRequestCompleted_t_123 *d = (w_HTTPRequestCompleted_t_123 *)dst;
    const u_HTTPRequestCompleted_t_123 *s = (const u_HTTPRequestCompleted_t_123 *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_bRequestSuccessful = s->m_bRequestSuccessful;
    d->m_eStatusCode = s->m_eStatusCode;
}
#ifdef __x86_64__
u64_HTTPRequestCompleted_t_123::operator w64_HTTPRequestCompleted_t_123() const
{
    w64_HTTPRequestCompleted_t_123 ret;
    HTTPRequestCompleted_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTTPRequestCompleted_t_123::operator u32_HTTPRequestCompleted_t_123() const
{
    u32_HTTPRequestCompleted_t_123 ret;
    HTTPRequestCompleted_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTTPRequestCompleted_t_123::operator w32_HTTPRequestCompleted_t_123() const
{
    w32_HTTPRequestCompleted_t_123 ret;
    HTTPRequestCompleted_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void HTTPRequestCompleted_t_115_u_from_w(void *dst, const void *src)
{
    u_HTTPRequestCompleted_t_115 *d = (u_HTTPRequestCompleted_t_115 *)dst;
    const w_HTTPRequestCompleted_t_115 *s = (const w_HTTPRequestCompleted_t_115 *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_bRequestSuccessful = s->m_bRequestSuccessful;
    d->m_eStatusCode = s->m_eStatusCode;
}
#ifdef __i386__
w32_HTTPRequestCompleted_t_115::operator u32_HTTPRequestCompleted_t_115() const
{
    u32_HTTPRequestCompleted_t_115 ret;
    HTTPRequestCompleted_t_115_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTTPRequestCompleted_t_115_w_from_u(void *dst, const void *src)
{
    w_HTTPRequestCompleted_t_115 *d = (w_HTTPRequestCompleted_t_115 *)dst;
    const u_HTTPRequestCompleted_t_115 *s = (const u_HTTPRequestCompleted_t_115 *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_bRequestSuccessful = s->m_bRequestSuccessful;
    d->m_eStatusCode = s->m_eStatusCode;
}
#ifdef __i386__
u32_HTTPRequestCompleted_t_115::operator w32_HTTPRequestCompleted_t_115() const
{
    w32_HTTPRequestCompleted_t_115 ret;
    HTTPRequestCompleted_t_115_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_123) >= 24 );
C_ASSERT( offsetof(w64_HTTPRequestDataReceived_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestDataReceived_t_123, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_123().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w64_HTTPRequestDataReceived_t_123, m_cOffset) == 16 );
C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_123().m_cOffset) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestDataReceived_t_123, m_cBytesReceived) == 20 );
C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_123().m_cBytesReceived) >= 4 );

C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_123) >= 20 );
C_ASSERT( offsetof(u64_HTTPRequestDataReceived_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestDataReceived_t_123, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_123().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u64_HTTPRequestDataReceived_t_123, m_cOffset) == 12 );
C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_123().m_cOffset) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestDataReceived_t_123, m_cBytesReceived) == 16 );
C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_123().m_cBytesReceived) >= 4 );

C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_123) >= 24 );
C_ASSERT( offsetof(w32_HTTPRequestDataReceived_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestDataReceived_t_123, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_123().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w32_HTTPRequestDataReceived_t_123, m_cOffset) == 16 );
C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_123().m_cOffset) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestDataReceived_t_123, m_cBytesReceived) == 20 );
C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_123().m_cBytesReceived) >= 4 );

C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_123) >= 20 );
C_ASSERT( offsetof(u32_HTTPRequestDataReceived_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestDataReceived_t_123, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_123().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u32_HTTPRequestDataReceived_t_123, m_cOffset) == 12 );
C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_123().m_cOffset) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestDataReceived_t_123, m_cBytesReceived) == 16 );
C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_123().m_cBytesReceived) >= 4 );

C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_121x) >= 24 );
C_ASSERT( offsetof(w64_HTTPRequestDataReceived_t_121x, m_hRequest) == 0 );
C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_121x().m_hRequest) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestDataReceived_t_121x, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_121x().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w64_HTTPRequestDataReceived_t_121x, m_cOffset) == 16 );
C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_121x().m_cOffset) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestDataReceived_t_121x, m_cBytesReceived) == 20 );
C_ASSERT( sizeof(w64_HTTPRequestDataReceived_t_121x().m_cBytesReceived) >= 4 );

C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_121x) >= 24 );
C_ASSERT( offsetof(u64_HTTPRequestDataReceived_t_121x, m_hRequest) == 0 );
C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_121x().m_hRequest) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestDataReceived_t_121x, m_ulContextValue) == 8 );
C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_121x().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u64_HTTPRequestDataReceived_t_121x, m_cOffset) == 16 );
C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_121x().m_cOffset) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestDataReceived_t_121x, m_cBytesReceived) == 20 );
C_ASSERT( sizeof(u64_HTTPRequestDataReceived_t_121x().m_cBytesReceived) >= 4 );

C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_121x) >= 24 );
C_ASSERT( offsetof(w32_HTTPRequestDataReceived_t_121x, m_hRequest) == 0 );
C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_121x().m_hRequest) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestDataReceived_t_121x, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_121x().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(w32_HTTPRequestDataReceived_t_121x, m_cOffset) == 16 );
C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_121x().m_cOffset) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestDataReceived_t_121x, m_cBytesReceived) == 20 );
C_ASSERT( sizeof(w32_HTTPRequestDataReceived_t_121x().m_cBytesReceived) >= 4 );

C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_121x) >= 20 );
C_ASSERT( offsetof(u32_HTTPRequestDataReceived_t_121x, m_hRequest) == 0 );
C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_121x().m_hRequest) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestDataReceived_t_121x, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_121x().m_ulContextValue) >= 8 );
C_ASSERT( offsetof(u32_HTTPRequestDataReceived_t_121x, m_cOffset) == 12 );
C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_121x().m_cOffset) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestDataReceived_t_121x, m_cBytesReceived) == 16 );
C_ASSERT( sizeof(u32_HTTPRequestDataReceived_t_121x().m_cBytesReceived) >= 4 );

static void HTTPRequestDataReceived_t_123_u_from_w(void *dst, const void *src)
{
    u_HTTPRequestDataReceived_t_123 *d = (u_HTTPRequestDataReceived_t_123 *)dst;
    const w_HTTPRequestDataReceived_t_123 *s = (const w_HTTPRequestDataReceived_t_123 *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_cOffset = s->m_cOffset;
    d->m_cBytesReceived = s->m_cBytesReceived;
}
#ifdef __x86_64__
w64_HTTPRequestDataReceived_t_123::operator u64_HTTPRequestDataReceived_t_123() const
{
    u64_HTTPRequestDataReceived_t_123 ret;
    HTTPRequestDataReceived_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTTPRequestDataReceived_t_123_w_from_u(void *dst, const void *src)
{
    w_HTTPRequestDataReceived_t_123 *d = (w_HTTPRequestDataReceived_t_123 *)dst;
    const u_HTTPRequestDataReceived_t_123 *s = (const u_HTTPRequestDataReceived_t_123 *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_cOffset = s->m_cOffset;
    d->m_cBytesReceived = s->m_cBytesReceived;
}
#ifdef __x86_64__
u64_HTTPRequestDataReceived_t_123::operator w64_HTTPRequestDataReceived_t_123() const
{
    w64_HTTPRequestDataReceived_t_123 ret;
    HTTPRequestDataReceived_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTTPRequestDataReceived_t_123::operator u32_HTTPRequestDataReceived_t_123() const
{
    u32_HTTPRequestDataReceived_t_123 ret;
    HTTPRequestDataReceived_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTTPRequestDataReceived_t_123::operator w32_HTTPRequestDataReceived_t_123() const
{
    w32_HTTPRequestDataReceived_t_123 ret;
    HTTPRequestDataReceived_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void HTTPRequestDataReceived_t_121x_u_from_w(void *dst, const void *src)
{
    u_HTTPRequestDataReceived_t_121x *d = (u_HTTPRequestDataReceived_t_121x *)dst;
    const w_HTTPRequestDataReceived_t_121x *s = (const w_HTTPRequestDataReceived_t_121x *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_cOffset = s->m_cOffset;
    d->m_cBytesReceived = s->m_cBytesReceived;
}
#ifdef __i386__
w32_HTTPRequestDataReceived_t_121x::operator u32_HTTPRequestDataReceived_t_121x() const
{
    u32_HTTPRequestDataReceived_t_121x ret;
    HTTPRequestDataReceived_t_121x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTTPRequestDataReceived_t_121x_w_from_u(void *dst, const void *src)
{
    w_HTTPRequestDataReceived_t_121x *d = (w_HTTPRequestDataReceived_t_121x *)dst;
    const u_HTTPRequestDataReceived_t_121x *s = (const u_HTTPRequestDataReceived_t_121x *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
    d->m_cOffset = s->m_cOffset;
    d->m_cBytesReceived = s->m_cBytesReceived;
}
#ifdef __i386__
u32_HTTPRequestDataReceived_t_121x::operator w32_HTTPRequestDataReceived_t_121x() const
{
    w32_HTTPRequestDataReceived_t_121x ret;
    HTTPRequestDataReceived_t_121x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_HTTPRequestHeadersReceived_t_123) >= 16 );
C_ASSERT( offsetof(w64_HTTPRequestHeadersReceived_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(w64_HTTPRequestHeadersReceived_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestHeadersReceived_t_123, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w64_HTTPRequestHeadersReceived_t_123().m_ulContextValue) >= 8 );

C_ASSERT( sizeof(u64_HTTPRequestHeadersReceived_t_123) >= 12 );
C_ASSERT( offsetof(u64_HTTPRequestHeadersReceived_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(u64_HTTPRequestHeadersReceived_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestHeadersReceived_t_123, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u64_HTTPRequestHeadersReceived_t_123().m_ulContextValue) >= 8 );

C_ASSERT( sizeof(w32_HTTPRequestHeadersReceived_t_123) >= 16 );
C_ASSERT( offsetof(w32_HTTPRequestHeadersReceived_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(w32_HTTPRequestHeadersReceived_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestHeadersReceived_t_123, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w32_HTTPRequestHeadersReceived_t_123().m_ulContextValue) >= 8 );

C_ASSERT( sizeof(u32_HTTPRequestHeadersReceived_t_123) >= 12 );
C_ASSERT( offsetof(u32_HTTPRequestHeadersReceived_t_123, m_hRequest) == 0 );
C_ASSERT( sizeof(u32_HTTPRequestHeadersReceived_t_123().m_hRequest) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestHeadersReceived_t_123, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u32_HTTPRequestHeadersReceived_t_123().m_ulContextValue) >= 8 );

C_ASSERT( sizeof(w64_HTTPRequestHeadersReceived_t_121x) >= 16 );
C_ASSERT( offsetof(w64_HTTPRequestHeadersReceived_t_121x, m_hRequest) == 0 );
C_ASSERT( sizeof(w64_HTTPRequestHeadersReceived_t_121x().m_hRequest) >= 4 );
C_ASSERT( offsetof(w64_HTTPRequestHeadersReceived_t_121x, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w64_HTTPRequestHeadersReceived_t_121x().m_ulContextValue) >= 8 );

C_ASSERT( sizeof(u64_HTTPRequestHeadersReceived_t_121x) >= 16 );
C_ASSERT( offsetof(u64_HTTPRequestHeadersReceived_t_121x, m_hRequest) == 0 );
C_ASSERT( sizeof(u64_HTTPRequestHeadersReceived_t_121x().m_hRequest) >= 4 );
C_ASSERT( offsetof(u64_HTTPRequestHeadersReceived_t_121x, m_ulContextValue) == 8 );
C_ASSERT( sizeof(u64_HTTPRequestHeadersReceived_t_121x().m_ulContextValue) >= 8 );

C_ASSERT( sizeof(w32_HTTPRequestHeadersReceived_t_121x) >= 16 );
C_ASSERT( offsetof(w32_HTTPRequestHeadersReceived_t_121x, m_hRequest) == 0 );
C_ASSERT( sizeof(w32_HTTPRequestHeadersReceived_t_121x().m_hRequest) >= 4 );
C_ASSERT( offsetof(w32_HTTPRequestHeadersReceived_t_121x, m_ulContextValue) == 8 );
C_ASSERT( sizeof(w32_HTTPRequestHeadersReceived_t_121x().m_ulContextValue) >= 8 );

C_ASSERT( sizeof(u32_HTTPRequestHeadersReceived_t_121x) >= 12 );
C_ASSERT( offsetof(u32_HTTPRequestHeadersReceived_t_121x, m_hRequest) == 0 );
C_ASSERT( sizeof(u32_HTTPRequestHeadersReceived_t_121x().m_hRequest) >= 4 );
C_ASSERT( offsetof(u32_HTTPRequestHeadersReceived_t_121x, m_ulContextValue) == 4 );
C_ASSERT( sizeof(u32_HTTPRequestHeadersReceived_t_121x().m_ulContextValue) >= 8 );

static void HTTPRequestHeadersReceived_t_123_u_from_w(void *dst, const void *src)
{
    u_HTTPRequestHeadersReceived_t_123 *d = (u_HTTPRequestHeadersReceived_t_123 *)dst;
    const w_HTTPRequestHeadersReceived_t_123 *s = (const w_HTTPRequestHeadersReceived_t_123 *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
}
#ifdef __x86_64__
w64_HTTPRequestHeadersReceived_t_123::operator u64_HTTPRequestHeadersReceived_t_123() const
{
    u64_HTTPRequestHeadersReceived_t_123 ret;
    HTTPRequestHeadersReceived_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTTPRequestHeadersReceived_t_123_w_from_u(void *dst, const void *src)
{
    w_HTTPRequestHeadersReceived_t_123 *d = (w_HTTPRequestHeadersReceived_t_123 *)dst;
    const u_HTTPRequestHeadersReceived_t_123 *s = (const u_HTTPRequestHeadersReceived_t_123 *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
}
#ifdef __x86_64__
u64_HTTPRequestHeadersReceived_t_123::operator w64_HTTPRequestHeadersReceived_t_123() const
{
    w64_HTTPRequestHeadersReceived_t_123 ret;
    HTTPRequestHeadersReceived_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_HTTPRequestHeadersReceived_t_123::operator u32_HTTPRequestHeadersReceived_t_123() const
{
    u32_HTTPRequestHeadersReceived_t_123 ret;
    HTTPRequestHeadersReceived_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_HTTPRequestHeadersReceived_t_123::operator w32_HTTPRequestHeadersReceived_t_123() const
{
    w32_HTTPRequestHeadersReceived_t_123 ret;
    HTTPRequestHeadersReceived_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void HTTPRequestHeadersReceived_t_121x_u_from_w(void *dst, const void *src)
{
    u_HTTPRequestHeadersReceived_t_121x *d = (u_HTTPRequestHeadersReceived_t_121x *)dst;
    const w_HTTPRequestHeadersReceived_t_121x *s = (const w_HTTPRequestHeadersReceived_t_121x *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
}
#ifdef __i386__
w32_HTTPRequestHeadersReceived_t_121x::operator u32_HTTPRequestHeadersReceived_t_121x() const
{
    u32_HTTPRequestHeadersReceived_t_121x ret;
    HTTPRequestHeadersReceived_t_121x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void HTTPRequestHeadersReceived_t_121x_w_from_u(void *dst, const void *src)
{
    w_HTTPRequestHeadersReceived_t_121x *d = (w_HTTPRequestHeadersReceived_t_121x *)dst;
    const u_HTTPRequestHeadersReceived_t_121x *s = (const u_HTTPRequestHeadersReceived_t_121x *)src;

    d->m_hRequest = s->m_hRequest;
    d->m_ulContextValue = s->m_ulContextValue;
}
#ifdef __i386__
u32_HTTPRequestHeadersReceived_t_121x::operator w32_HTTPRequestHeadersReceived_t_121x() const
{
    w32_HTTPRequestHeadersReceived_t_121x ret;
    HTTPRequestHeadersReceived_t_121x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_ItemInstalled_t_160) >= 32 );
C_ASSERT( offsetof(w64_ItemInstalled_t_160, m_unAppID) == 0 );
C_ASSERT( sizeof(w64_ItemInstalled_t_160().m_unAppID) >= 4 );
C_ASSERT( offsetof(w64_ItemInstalled_t_160, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_ItemInstalled_t_160().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_ItemInstalled_t_160, m_hLegacyContent) == 16 );
C_ASSERT( sizeof(w64_ItemInstalled_t_160().m_hLegacyContent) >= 8 );
C_ASSERT( offsetof(w64_ItemInstalled_t_160, m_unManifestID) == 24 );
C_ASSERT( sizeof(w64_ItemInstalled_t_160().m_unManifestID) >= 8 );

C_ASSERT( sizeof(u64_ItemInstalled_t_160) >= 28 );
C_ASSERT( offsetof(u64_ItemInstalled_t_160, m_unAppID) == 0 );
C_ASSERT( sizeof(u64_ItemInstalled_t_160().m_unAppID) >= 4 );
C_ASSERT( offsetof(u64_ItemInstalled_t_160, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_ItemInstalled_t_160().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_ItemInstalled_t_160, m_hLegacyContent) == 12 );
C_ASSERT( sizeof(u64_ItemInstalled_t_160().m_hLegacyContent) >= 8 );
C_ASSERT( offsetof(u64_ItemInstalled_t_160, m_unManifestID) == 20 );
C_ASSERT( sizeof(u64_ItemInstalled_t_160().m_unManifestID) >= 8 );

C_ASSERT( sizeof(w32_ItemInstalled_t_160) >= 32 );
C_ASSERT( offsetof(w32_ItemInstalled_t_160, m_unAppID) == 0 );
C_ASSERT( sizeof(w32_ItemInstalled_t_160().m_unAppID) >= 4 );
C_ASSERT( offsetof(w32_ItemInstalled_t_160, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_ItemInstalled_t_160().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_ItemInstalled_t_160, m_hLegacyContent) == 16 );
C_ASSERT( sizeof(w32_ItemInstalled_t_160().m_hLegacyContent) >= 8 );
C_ASSERT( offsetof(w32_ItemInstalled_t_160, m_unManifestID) == 24 );
C_ASSERT( sizeof(w32_ItemInstalled_t_160().m_unManifestID) >= 8 );

C_ASSERT( sizeof(u32_ItemInstalled_t_160) >= 28 );
C_ASSERT( offsetof(u32_ItemInstalled_t_160, m_unAppID) == 0 );
C_ASSERT( sizeof(u32_ItemInstalled_t_160().m_unAppID) >= 4 );
C_ASSERT( offsetof(u32_ItemInstalled_t_160, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_ItemInstalled_t_160().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_ItemInstalled_t_160, m_hLegacyContent) == 12 );
C_ASSERT( sizeof(u32_ItemInstalled_t_160().m_hLegacyContent) >= 8 );
C_ASSERT( offsetof(u32_ItemInstalled_t_160, m_unManifestID) == 20 );
C_ASSERT( sizeof(u32_ItemInstalled_t_160().m_unManifestID) >= 8 );

C_ASSERT( sizeof(w64_ItemInstalled_t_130) >= 16 );
C_ASSERT( offsetof(w64_ItemInstalled_t_130, m_unAppID) == 0 );
C_ASSERT( sizeof(w64_ItemInstalled_t_130().m_unAppID) >= 4 );
C_ASSERT( offsetof(w64_ItemInstalled_t_130, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_ItemInstalled_t_130().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_ItemInstalled_t_130) >= 12 );
C_ASSERT( offsetof(u64_ItemInstalled_t_130, m_unAppID) == 0 );
C_ASSERT( sizeof(u64_ItemInstalled_t_130().m_unAppID) >= 4 );
C_ASSERT( offsetof(u64_ItemInstalled_t_130, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_ItemInstalled_t_130().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_ItemInstalled_t_130) >= 16 );
C_ASSERT( offsetof(w32_ItemInstalled_t_130, m_unAppID) == 0 );
C_ASSERT( sizeof(w32_ItemInstalled_t_130().m_unAppID) >= 4 );
C_ASSERT( offsetof(w32_ItemInstalled_t_130, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_ItemInstalled_t_130().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_ItemInstalled_t_130) >= 12 );
C_ASSERT( offsetof(u32_ItemInstalled_t_130, m_unAppID) == 0 );
C_ASSERT( sizeof(u32_ItemInstalled_t_130().m_unAppID) >= 4 );
C_ASSERT( offsetof(u32_ItemInstalled_t_130, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_ItemInstalled_t_130().m_nPublishedFileId) >= 8 );

static void ItemInstalled_t_160_u_from_w(void *dst, const void *src)
{
    u_ItemInstalled_t_160 *d = (u_ItemInstalled_t_160 *)dst;
    const w_ItemInstalled_t_160 *s = (const w_ItemInstalled_t_160 *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_hLegacyContent = s->m_hLegacyContent;
    d->m_unManifestID = s->m_unManifestID;
}
#ifdef __x86_64__
w64_ItemInstalled_t_160::operator u64_ItemInstalled_t_160() const
{
    u64_ItemInstalled_t_160 ret;
    ItemInstalled_t_160_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void ItemInstalled_t_160_w_from_u(void *dst, const void *src)
{
    w_ItemInstalled_t_160 *d = (w_ItemInstalled_t_160 *)dst;
    const u_ItemInstalled_t_160 *s = (const u_ItemInstalled_t_160 *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_hLegacyContent = s->m_hLegacyContent;
    d->m_unManifestID = s->m_unManifestID;
}
#ifdef __x86_64__
u64_ItemInstalled_t_160::operator w64_ItemInstalled_t_160() const
{
    w64_ItemInstalled_t_160 ret;
    ItemInstalled_t_160_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_ItemInstalled_t_160::operator u32_ItemInstalled_t_160() const
{
    u32_ItemInstalled_t_160 ret;
    ItemInstalled_t_160_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_ItemInstalled_t_160::operator w32_ItemInstalled_t_160() const
{
    w32_ItemInstalled_t_160 ret;
    ItemInstalled_t_160_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void ItemInstalled_t_130_u_from_w(void *dst, const void *src)
{
    u_ItemInstalled_t_130 *d = (u_ItemInstalled_t_130 *)dst;
    const w_ItemInstalled_t_130 *s = (const w_ItemInstalled_t_130 *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
w64_ItemInstalled_t_130::operator u64_ItemInstalled_t_130() const
{
    u64_ItemInstalled_t_130 ret;
    ItemInstalled_t_130_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void ItemInstalled_t_130_w_from_u(void *dst, const void *src)
{
    w_ItemInstalled_t_130 *d = (w_ItemInstalled_t_130 *)dst;
    const u_ItemInstalled_t_130 *s = (const u_ItemInstalled_t_130 *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
u64_ItemInstalled_t_130::operator w64_ItemInstalled_t_130() const
{
    w64_ItemInstalled_t_130 ret;
    ItemInstalled_t_130_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_ItemInstalled_t_130::operator u32_ItemInstalled_t_130() const
{
    u32_ItemInstalled_t_130 ret;
    ItemInstalled_t_130_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_ItemInstalled_t_130::operator w32_ItemInstalled_t_130() const
{
    w32_ItemInstalled_t_130 ret;
    ItemInstalled_t_130_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_JoinPartyCallback_t) >= 280 );
C_ASSERT( offsetof(w64_JoinPartyCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_JoinPartyCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_JoinPartyCallback_t, m_ulBeaconID) == 8 );
C_ASSERT( sizeof(w64_JoinPartyCallback_t().m_ulBeaconID) >= 8 );
C_ASSERT( offsetof(w64_JoinPartyCallback_t, m_SteamIDBeaconOwner) == 16 );
C_ASSERT( sizeof(w64_JoinPartyCallback_t().m_SteamIDBeaconOwner) >= 8 );
C_ASSERT( offsetof(w64_JoinPartyCallback_t, m_rgchConnectString) == 24 );
C_ASSERT( sizeof(w64_JoinPartyCallback_t().m_rgchConnectString) >= 256 );

C_ASSERT( sizeof(u64_JoinPartyCallback_t) >= 276 );
C_ASSERT( offsetof(u64_JoinPartyCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_JoinPartyCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_JoinPartyCallback_t, m_ulBeaconID) == 4 );
C_ASSERT( sizeof(u64_JoinPartyCallback_t().m_ulBeaconID) >= 8 );
C_ASSERT( offsetof(u64_JoinPartyCallback_t, m_SteamIDBeaconOwner) == 12 );
C_ASSERT( sizeof(u64_JoinPartyCallback_t().m_SteamIDBeaconOwner) >= 8 );
C_ASSERT( offsetof(u64_JoinPartyCallback_t, m_rgchConnectString) == 20 );
C_ASSERT( sizeof(u64_JoinPartyCallback_t().m_rgchConnectString) >= 256 );

C_ASSERT( sizeof(w32_JoinPartyCallback_t) >= 280 );
C_ASSERT( offsetof(w32_JoinPartyCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_JoinPartyCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_JoinPartyCallback_t, m_ulBeaconID) == 8 );
C_ASSERT( sizeof(w32_JoinPartyCallback_t().m_ulBeaconID) >= 8 );
C_ASSERT( offsetof(w32_JoinPartyCallback_t, m_SteamIDBeaconOwner) == 16 );
C_ASSERT( sizeof(w32_JoinPartyCallback_t().m_SteamIDBeaconOwner) >= 8 );
C_ASSERT( offsetof(w32_JoinPartyCallback_t, m_rgchConnectString) == 24 );
C_ASSERT( sizeof(w32_JoinPartyCallback_t().m_rgchConnectString) >= 256 );

C_ASSERT( sizeof(u32_JoinPartyCallback_t) >= 276 );
C_ASSERT( offsetof(u32_JoinPartyCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_JoinPartyCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_JoinPartyCallback_t, m_ulBeaconID) == 4 );
C_ASSERT( sizeof(u32_JoinPartyCallback_t().m_ulBeaconID) >= 8 );
C_ASSERT( offsetof(u32_JoinPartyCallback_t, m_SteamIDBeaconOwner) == 12 );
C_ASSERT( sizeof(u32_JoinPartyCallback_t().m_SteamIDBeaconOwner) >= 8 );
C_ASSERT( offsetof(u32_JoinPartyCallback_t, m_rgchConnectString) == 20 );
C_ASSERT( sizeof(u32_JoinPartyCallback_t().m_rgchConnectString) >= 256 );

static void JoinPartyCallback_t_u_from_w(void *dst, const void *src)
{
    u_JoinPartyCallback_t *d = (u_JoinPartyCallback_t *)dst;
    const w_JoinPartyCallback_t *s = (const w_JoinPartyCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulBeaconID = s->m_ulBeaconID;
    d->m_SteamIDBeaconOwner = s->m_SteamIDBeaconOwner;
    d->m_rgchConnectString = s->m_rgchConnectString;
}
#ifdef __x86_64__
w64_JoinPartyCallback_t::operator u64_JoinPartyCallback_t() const
{
    u64_JoinPartyCallback_t ret;
    JoinPartyCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void JoinPartyCallback_t_w_from_u(void *dst, const void *src)
{
    w_JoinPartyCallback_t *d = (w_JoinPartyCallback_t *)dst;
    const u_JoinPartyCallback_t *s = (const u_JoinPartyCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulBeaconID = s->m_ulBeaconID;
    d->m_SteamIDBeaconOwner = s->m_SteamIDBeaconOwner;
    d->m_rgchConnectString = s->m_rgchConnectString;
}
#ifdef __x86_64__
u64_JoinPartyCallback_t::operator w64_JoinPartyCallback_t() const
{
    w64_JoinPartyCallback_t ret;
    JoinPartyCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_JoinPartyCallback_t::operator u32_JoinPartyCallback_t() const
{
    u32_JoinPartyCallback_t ret;
    JoinPartyCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_JoinPartyCallback_t::operator w32_JoinPartyCallback_t() const
{
    w32_JoinPartyCallback_t ret;
    JoinPartyCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_LeaderboardEntry_t_123) >= 32 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_123, m_steamIDUser) == 0 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_123().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_123, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_123().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_123, m_nScore) == 12 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_123().m_nScore) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_123, m_cDetails) == 16 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_123().m_cDetails) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_123, m_hUGC) == 24 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_123().m_hUGC) >= 8 );

C_ASSERT( sizeof(u64_LeaderboardEntry_t_123) >= 28 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_123, m_steamIDUser) == 0 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_123().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_123, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_123().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_123, m_nScore) == 12 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_123().m_nScore) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_123, m_cDetails) == 16 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_123().m_cDetails) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_123, m_hUGC) == 20 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_123().m_hUGC) >= 8 );

C_ASSERT( sizeof(w32_LeaderboardEntry_t_123) >= 32 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_123, m_steamIDUser) == 0 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_123().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_123, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_123().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_123, m_nScore) == 12 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_123().m_nScore) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_123, m_cDetails) == 16 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_123().m_cDetails) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_123, m_hUGC) == 24 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_123().m_hUGC) >= 8 );

C_ASSERT( sizeof(u32_LeaderboardEntry_t_123) >= 28 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_123, m_steamIDUser) == 0 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_123().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_123, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_123().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_123, m_nScore) == 12 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_123().m_nScore) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_123, m_cDetails) == 16 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_123().m_cDetails) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_123, m_hUGC) == 20 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_123().m_hUGC) >= 8 );

C_ASSERT( sizeof(w64_LeaderboardEntry_t_111x) >= 32 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_111x, m_steamIDUser) == 0 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_111x().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_111x, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_111x().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_111x, m_nScore) == 12 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_111x().m_nScore) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_111x, m_cDetails) == 16 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_111x().m_cDetails) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_111x, m_hUGC) == 24 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_111x().m_hUGC) >= 8 );

C_ASSERT( sizeof(u64_LeaderboardEntry_t_111x) >= 32 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_111x, m_steamIDUser) == 0 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_111x().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_111x, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_111x().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_111x, m_nScore) == 12 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_111x().m_nScore) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_111x, m_cDetails) == 16 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_111x().m_cDetails) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_111x, m_hUGC) == 24 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_111x().m_hUGC) >= 8 );

C_ASSERT( sizeof(w32_LeaderboardEntry_t_111x) >= 32 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_111x, m_steamIDUser) == 0 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_111x().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_111x, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_111x().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_111x, m_nScore) == 12 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_111x().m_nScore) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_111x, m_cDetails) == 16 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_111x().m_cDetails) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_111x, m_hUGC) == 24 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_111x().m_hUGC) >= 8 );

C_ASSERT( sizeof(u32_LeaderboardEntry_t_111x) >= 28 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_111x, m_steamIDUser) == 0 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_111x().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_111x, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_111x().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_111x, m_nScore) == 12 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_111x().m_nScore) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_111x, m_cDetails) == 16 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_111x().m_cDetails) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_111x, m_hUGC) == 20 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_111x().m_hUGC) >= 8 );

C_ASSERT( sizeof(w64_LeaderboardEntry_t_104) >= 20 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_104, m_steamIDUser) == 0 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_104().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_104, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_104().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_104, m_nScore) == 12 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_104().m_nScore) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardEntry_t_104, m_cDetails) == 16 );
C_ASSERT( sizeof(w64_LeaderboardEntry_t_104().m_cDetails) >= 4 );

C_ASSERT( sizeof(u64_LeaderboardEntry_t_104) >= 20 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_104, m_steamIDUser) == 0 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_104().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_104, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_104().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_104, m_nScore) == 12 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_104().m_nScore) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardEntry_t_104, m_cDetails) == 16 );
C_ASSERT( sizeof(u64_LeaderboardEntry_t_104().m_cDetails) >= 4 );

C_ASSERT( sizeof(w32_LeaderboardEntry_t_104) >= 20 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_104, m_steamIDUser) == 0 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_104().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_104, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_104().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_104, m_nScore) == 12 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_104().m_nScore) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardEntry_t_104, m_cDetails) == 16 );
C_ASSERT( sizeof(w32_LeaderboardEntry_t_104().m_cDetails) >= 4 );

C_ASSERT( sizeof(u32_LeaderboardEntry_t_104) >= 20 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_104, m_steamIDUser) == 0 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_104().m_steamIDUser) >= 8 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_104, m_nGlobalRank) == 8 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_104().m_nGlobalRank) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_104, m_nScore) == 12 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_104().m_nScore) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardEntry_t_104, m_cDetails) == 16 );
C_ASSERT( sizeof(u32_LeaderboardEntry_t_104().m_cDetails) >= 4 );

static void LeaderboardEntry_t_123_u_from_w(void *dst, const void *src)
{
    u_LeaderboardEntry_t_123 *d = (u_LeaderboardEntry_t_123 *)dst;
    const w_LeaderboardEntry_t_123 *s = (const w_LeaderboardEntry_t_123 *)src;

    d->m_steamIDUser = s->m_steamIDUser;
    d->m_nGlobalRank = s->m_nGlobalRank;
    d->m_nScore = s->m_nScore;
    d->m_cDetails = s->m_cDetails;
    d->m_hUGC = s->m_hUGC;
}
#ifdef __x86_64__
w64_LeaderboardEntry_t_123::operator u64_LeaderboardEntry_t_123() const
{
    u64_LeaderboardEntry_t_123 ret;
    LeaderboardEntry_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void LeaderboardEntry_t_123_w_from_u(void *dst, const void *src)
{
    w_LeaderboardEntry_t_123 *d = (w_LeaderboardEntry_t_123 *)dst;
    const u_LeaderboardEntry_t_123 *s = (const u_LeaderboardEntry_t_123 *)src;

    d->m_steamIDUser = s->m_steamIDUser;
    d->m_nGlobalRank = s->m_nGlobalRank;
    d->m_nScore = s->m_nScore;
    d->m_cDetails = s->m_cDetails;
    d->m_hUGC = s->m_hUGC;
}
#ifdef __x86_64__
u64_LeaderboardEntry_t_123::operator w64_LeaderboardEntry_t_123() const
{
    w64_LeaderboardEntry_t_123 ret;
    LeaderboardEntry_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_LeaderboardEntry_t_123::operator u32_LeaderboardEntry_t_123() const
{
    u32_LeaderboardEntry_t_123 ret;
    LeaderboardEntry_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_LeaderboardEntry_t_123::operator w32_LeaderboardEntry_t_123() const
{
    w32_LeaderboardEntry_t_123 ret;
    LeaderboardEntry_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void LeaderboardEntry_t_111x_u_from_w(void *dst, const void *src)
{
    u_LeaderboardEntry_t_111x *d = (u_LeaderboardEntry_t_111x *)dst;
    const w_LeaderboardEntry_t_111x *s = (const w_LeaderboardEntry_t_111x *)src;

    d->m_steamIDUser = s->m_steamIDUser;
    d->m_nGlobalRank = s->m_nGlobalRank;
    d->m_nScore = s->m_nScore;
    d->m_cDetails = s->m_cDetails;
    d->m_hUGC = s->m_hUGC;
}
#ifdef __i386__
w32_LeaderboardEntry_t_111x::operator u32_LeaderboardEntry_t_111x() const
{
    u32_LeaderboardEntry_t_111x ret;
    LeaderboardEntry_t_111x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void LeaderboardEntry_t_111x_w_from_u(void *dst, const void *src)
{
    w_LeaderboardEntry_t_111x *d = (w_LeaderboardEntry_t_111x *)dst;
    const u_LeaderboardEntry_t_111x *s = (const u_LeaderboardEntry_t_111x *)src;

    d->m_steamIDUser = s->m_steamIDUser;
    d->m_nGlobalRank = s->m_nGlobalRank;
    d->m_nScore = s->m_nScore;
    d->m_cDetails = s->m_cDetails;
    d->m_hUGC = s->m_hUGC;
}
#ifdef __i386__
u32_LeaderboardEntry_t_111x::operator w32_LeaderboardEntry_t_111x() const
{
    w32_LeaderboardEntry_t_111x ret;
    LeaderboardEntry_t_111x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_123) >= 32 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_123, m_bSuccess) == 0 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_123().m_bSuccess) >= 1 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_123, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_123().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_123, m_nScore) == 16 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_123().m_nScore) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_123, m_bScoreChanged) == 20 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_123().m_bScoreChanged) >= 1 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_123, m_nGlobalRankNew) == 24 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_123().m_nGlobalRankNew) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_123, m_nGlobalRankPrevious) == 28 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_123().m_nGlobalRankPrevious) >= 4 );

C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_123) >= 28 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_123, m_bSuccess) == 0 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_123().m_bSuccess) >= 1 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_123, m_hSteamLeaderboard) == 4 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_123().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_123, m_nScore) == 12 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_123().m_nScore) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_123, m_bScoreChanged) == 16 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_123().m_bScoreChanged) >= 1 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_123, m_nGlobalRankNew) == 20 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_123().m_nGlobalRankNew) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_123, m_nGlobalRankPrevious) == 24 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_123().m_nGlobalRankPrevious) >= 4 );

C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_123) >= 32 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_123, m_bSuccess) == 0 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_123().m_bSuccess) >= 1 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_123, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_123().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_123, m_nScore) == 16 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_123().m_nScore) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_123, m_bScoreChanged) == 20 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_123().m_bScoreChanged) >= 1 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_123, m_nGlobalRankNew) == 24 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_123().m_nGlobalRankNew) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_123, m_nGlobalRankPrevious) == 28 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_123().m_nGlobalRankPrevious) >= 4 );

C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_123) >= 28 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_123, m_bSuccess) == 0 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_123().m_bSuccess) >= 1 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_123, m_hSteamLeaderboard) == 4 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_123().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_123, m_nScore) == 12 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_123().m_nScore) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_123, m_bScoreChanged) == 16 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_123().m_bScoreChanged) >= 1 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_123, m_nGlobalRankNew) == 20 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_123().m_nGlobalRankNew) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_123, m_nGlobalRankPrevious) == 24 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_123().m_nGlobalRankPrevious) >= 4 );

C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_104) >= 32 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_104, m_bSuccess) == 0 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_104().m_bSuccess) >= 1 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_104, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_104().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_104, m_nScore) == 16 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_104().m_nScore) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_104, m_bScoreChanged) == 20 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_104().m_bScoreChanged) >= 1 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_104, m_nGlobalRankNew) == 24 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_104().m_nGlobalRankNew) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardScoreUploaded_t_104, m_nGlobalRankPrevious) == 28 );
C_ASSERT( sizeof(w64_LeaderboardScoreUploaded_t_104().m_nGlobalRankPrevious) >= 4 );

C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_104) >= 32 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_104, m_bSuccess) == 0 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_104().m_bSuccess) >= 1 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_104, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_104().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_104, m_nScore) == 16 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_104().m_nScore) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_104, m_bScoreChanged) == 20 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_104().m_bScoreChanged) >= 1 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_104, m_nGlobalRankNew) == 24 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_104().m_nGlobalRankNew) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardScoreUploaded_t_104, m_nGlobalRankPrevious) == 28 );
C_ASSERT( sizeof(u64_LeaderboardScoreUploaded_t_104().m_nGlobalRankPrevious) >= 4 );

C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_104) >= 32 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_104, m_bSuccess) == 0 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_104().m_bSuccess) >= 1 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_104, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_104().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_104, m_nScore) == 16 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_104().m_nScore) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_104, m_bScoreChanged) == 20 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_104().m_bScoreChanged) >= 1 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_104, m_nGlobalRankNew) == 24 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_104().m_nGlobalRankNew) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardScoreUploaded_t_104, m_nGlobalRankPrevious) == 28 );
C_ASSERT( sizeof(w32_LeaderboardScoreUploaded_t_104().m_nGlobalRankPrevious) >= 4 );

C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_104) >= 28 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_104, m_bSuccess) == 0 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_104().m_bSuccess) >= 1 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_104, m_hSteamLeaderboard) == 4 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_104().m_hSteamLeaderboard) >= 8 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_104, m_nScore) == 12 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_104().m_nScore) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_104, m_bScoreChanged) == 16 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_104().m_bScoreChanged) >= 1 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_104, m_nGlobalRankNew) == 20 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_104().m_nGlobalRankNew) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardScoreUploaded_t_104, m_nGlobalRankPrevious) == 24 );
C_ASSERT( sizeof(u32_LeaderboardScoreUploaded_t_104().m_nGlobalRankPrevious) >= 4 );

static void LeaderboardScoreUploaded_t_123_u_from_w(void *dst, const void *src)
{
    u_LeaderboardScoreUploaded_t_123 *d = (u_LeaderboardScoreUploaded_t_123 *)dst;
    const w_LeaderboardScoreUploaded_t_123 *s = (const w_LeaderboardScoreUploaded_t_123 *)src;

    d->m_bSuccess = s->m_bSuccess;
    d->m_hSteamLeaderboard = s->m_hSteamLeaderboard;
    d->m_nScore = s->m_nScore;
    d->m_bScoreChanged = s->m_bScoreChanged;
    d->m_nGlobalRankNew = s->m_nGlobalRankNew;
    d->m_nGlobalRankPrevious = s->m_nGlobalRankPrevious;
}
#ifdef __x86_64__
w64_LeaderboardScoreUploaded_t_123::operator u64_LeaderboardScoreUploaded_t_123() const
{
    u64_LeaderboardScoreUploaded_t_123 ret;
    LeaderboardScoreUploaded_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void LeaderboardScoreUploaded_t_123_w_from_u(void *dst, const void *src)
{
    w_LeaderboardScoreUploaded_t_123 *d = (w_LeaderboardScoreUploaded_t_123 *)dst;
    const u_LeaderboardScoreUploaded_t_123 *s = (const u_LeaderboardScoreUploaded_t_123 *)src;

    d->m_bSuccess = s->m_bSuccess;
    d->m_hSteamLeaderboard = s->m_hSteamLeaderboard;
    d->m_nScore = s->m_nScore;
    d->m_bScoreChanged = s->m_bScoreChanged;
    d->m_nGlobalRankNew = s->m_nGlobalRankNew;
    d->m_nGlobalRankPrevious = s->m_nGlobalRankPrevious;
}
#ifdef __x86_64__
u64_LeaderboardScoreUploaded_t_123::operator w64_LeaderboardScoreUploaded_t_123() const
{
    w64_LeaderboardScoreUploaded_t_123 ret;
    LeaderboardScoreUploaded_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_LeaderboardScoreUploaded_t_123::operator u32_LeaderboardScoreUploaded_t_123() const
{
    u32_LeaderboardScoreUploaded_t_123 ret;
    LeaderboardScoreUploaded_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_LeaderboardScoreUploaded_t_123::operator w32_LeaderboardScoreUploaded_t_123() const
{
    w32_LeaderboardScoreUploaded_t_123 ret;
    LeaderboardScoreUploaded_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void LeaderboardScoreUploaded_t_104_u_from_w(void *dst, const void *src)
{
    u_LeaderboardScoreUploaded_t_104 *d = (u_LeaderboardScoreUploaded_t_104 *)dst;
    const w_LeaderboardScoreUploaded_t_104 *s = (const w_LeaderboardScoreUploaded_t_104 *)src;

    d->m_bSuccess = s->m_bSuccess;
    d->m_hSteamLeaderboard = s->m_hSteamLeaderboard;
    d->m_nScore = s->m_nScore;
    d->m_bScoreChanged = s->m_bScoreChanged;
    d->m_nGlobalRankNew = s->m_nGlobalRankNew;
    d->m_nGlobalRankPrevious = s->m_nGlobalRankPrevious;
}
#ifdef __i386__
w32_LeaderboardScoreUploaded_t_104::operator u32_LeaderboardScoreUploaded_t_104() const
{
    u32_LeaderboardScoreUploaded_t_104 ret;
    LeaderboardScoreUploaded_t_104_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void LeaderboardScoreUploaded_t_104_w_from_u(void *dst, const void *src)
{
    w_LeaderboardScoreUploaded_t_104 *d = (w_LeaderboardScoreUploaded_t_104 *)dst;
    const u_LeaderboardScoreUploaded_t_104 *s = (const u_LeaderboardScoreUploaded_t_104 *)src;

    d->m_bSuccess = s->m_bSuccess;
    d->m_hSteamLeaderboard = s->m_hSteamLeaderboard;
    d->m_nScore = s->m_nScore;
    d->m_bScoreChanged = s->m_bScoreChanged;
    d->m_nGlobalRankNew = s->m_nGlobalRankNew;
    d->m_nGlobalRankPrevious = s->m_nGlobalRankPrevious;
}
#ifdef __i386__
u32_LeaderboardScoreUploaded_t_104::operator w32_LeaderboardScoreUploaded_t_104() const
{
    w32_LeaderboardScoreUploaded_t_104 ret;
    LeaderboardScoreUploaded_t_104_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_LeaderboardUGCSet_t_123) >= 16 );
C_ASSERT( offsetof(w64_LeaderboardUGCSet_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_LeaderboardUGCSet_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardUGCSet_t_123, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(w64_LeaderboardUGCSet_t_123().m_hSteamLeaderboard) >= 8 );

C_ASSERT( sizeof(u64_LeaderboardUGCSet_t_123) >= 12 );
C_ASSERT( offsetof(u64_LeaderboardUGCSet_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_LeaderboardUGCSet_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardUGCSet_t_123, m_hSteamLeaderboard) == 4 );
C_ASSERT( sizeof(u64_LeaderboardUGCSet_t_123().m_hSteamLeaderboard) >= 8 );

C_ASSERT( sizeof(w32_LeaderboardUGCSet_t_123) >= 16 );
C_ASSERT( offsetof(w32_LeaderboardUGCSet_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_LeaderboardUGCSet_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardUGCSet_t_123, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(w32_LeaderboardUGCSet_t_123().m_hSteamLeaderboard) >= 8 );

C_ASSERT( sizeof(u32_LeaderboardUGCSet_t_123) >= 12 );
C_ASSERT( offsetof(u32_LeaderboardUGCSet_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_LeaderboardUGCSet_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardUGCSet_t_123, m_hSteamLeaderboard) == 4 );
C_ASSERT( sizeof(u32_LeaderboardUGCSet_t_123().m_hSteamLeaderboard) >= 8 );

C_ASSERT( sizeof(w64_LeaderboardUGCSet_t_111x) >= 16 );
C_ASSERT( offsetof(w64_LeaderboardUGCSet_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_LeaderboardUGCSet_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_LeaderboardUGCSet_t_111x, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(w64_LeaderboardUGCSet_t_111x().m_hSteamLeaderboard) >= 8 );

C_ASSERT( sizeof(u64_LeaderboardUGCSet_t_111x) >= 16 );
C_ASSERT( offsetof(u64_LeaderboardUGCSet_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_LeaderboardUGCSet_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_LeaderboardUGCSet_t_111x, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(u64_LeaderboardUGCSet_t_111x().m_hSteamLeaderboard) >= 8 );

C_ASSERT( sizeof(w32_LeaderboardUGCSet_t_111x) >= 16 );
C_ASSERT( offsetof(w32_LeaderboardUGCSet_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_LeaderboardUGCSet_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_LeaderboardUGCSet_t_111x, m_hSteamLeaderboard) == 8 );
C_ASSERT( sizeof(w32_LeaderboardUGCSet_t_111x().m_hSteamLeaderboard) >= 8 );

C_ASSERT( sizeof(u32_LeaderboardUGCSet_t_111x) >= 12 );
C_ASSERT( offsetof(u32_LeaderboardUGCSet_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_LeaderboardUGCSet_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_LeaderboardUGCSet_t_111x, m_hSteamLeaderboard) == 4 );
C_ASSERT( sizeof(u32_LeaderboardUGCSet_t_111x().m_hSteamLeaderboard) >= 8 );

static void LeaderboardUGCSet_t_123_u_from_w(void *dst, const void *src)
{
    u_LeaderboardUGCSet_t_123 *d = (u_LeaderboardUGCSet_t_123 *)dst;
    const w_LeaderboardUGCSet_t_123 *s = (const w_LeaderboardUGCSet_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_hSteamLeaderboard = s->m_hSteamLeaderboard;
}
#ifdef __x86_64__
w64_LeaderboardUGCSet_t_123::operator u64_LeaderboardUGCSet_t_123() const
{
    u64_LeaderboardUGCSet_t_123 ret;
    LeaderboardUGCSet_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void LeaderboardUGCSet_t_123_w_from_u(void *dst, const void *src)
{
    w_LeaderboardUGCSet_t_123 *d = (w_LeaderboardUGCSet_t_123 *)dst;
    const u_LeaderboardUGCSet_t_123 *s = (const u_LeaderboardUGCSet_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_hSteamLeaderboard = s->m_hSteamLeaderboard;
}
#ifdef __x86_64__
u64_LeaderboardUGCSet_t_123::operator w64_LeaderboardUGCSet_t_123() const
{
    w64_LeaderboardUGCSet_t_123 ret;
    LeaderboardUGCSet_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_LeaderboardUGCSet_t_123::operator u32_LeaderboardUGCSet_t_123() const
{
    u32_LeaderboardUGCSet_t_123 ret;
    LeaderboardUGCSet_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_LeaderboardUGCSet_t_123::operator w32_LeaderboardUGCSet_t_123() const
{
    w32_LeaderboardUGCSet_t_123 ret;
    LeaderboardUGCSet_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void LeaderboardUGCSet_t_111x_u_from_w(void *dst, const void *src)
{
    u_LeaderboardUGCSet_t_111x *d = (u_LeaderboardUGCSet_t_111x *)dst;
    const w_LeaderboardUGCSet_t_111x *s = (const w_LeaderboardUGCSet_t_111x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hSteamLeaderboard = s->m_hSteamLeaderboard;
}
#ifdef __i386__
w32_LeaderboardUGCSet_t_111x::operator u32_LeaderboardUGCSet_t_111x() const
{
    u32_LeaderboardUGCSet_t_111x ret;
    LeaderboardUGCSet_t_111x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void LeaderboardUGCSet_t_111x_w_from_u(void *dst, const void *src)
{
    w_LeaderboardUGCSet_t_111x *d = (w_LeaderboardUGCSet_t_111x *)dst;
    const u_LeaderboardUGCSet_t_111x *s = (const u_LeaderboardUGCSet_t_111x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hSteamLeaderboard = s->m_hSteamLeaderboard;
}
#ifdef __i386__
u32_LeaderboardUGCSet_t_111x::operator w32_LeaderboardUGCSet_t_111x() const
{
    w32_LeaderboardUGCSet_t_111x ret;
    LeaderboardUGCSet_t_111x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_LobbyCreated_t_123) >= 16 );
C_ASSERT( offsetof(w64_LobbyCreated_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_LobbyCreated_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_LobbyCreated_t_123, m_ulSteamIDLobby) == 8 );
C_ASSERT( sizeof(w64_LobbyCreated_t_123().m_ulSteamIDLobby) >= 8 );

C_ASSERT( sizeof(u64_LobbyCreated_t_123) >= 12 );
C_ASSERT( offsetof(u64_LobbyCreated_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_LobbyCreated_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_LobbyCreated_t_123, m_ulSteamIDLobby) == 4 );
C_ASSERT( sizeof(u64_LobbyCreated_t_123().m_ulSteamIDLobby) >= 8 );

C_ASSERT( sizeof(w32_LobbyCreated_t_123) >= 16 );
C_ASSERT( offsetof(w32_LobbyCreated_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_LobbyCreated_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_LobbyCreated_t_123, m_ulSteamIDLobby) == 8 );
C_ASSERT( sizeof(w32_LobbyCreated_t_123().m_ulSteamIDLobby) >= 8 );

C_ASSERT( sizeof(u32_LobbyCreated_t_123) >= 12 );
C_ASSERT( offsetof(u32_LobbyCreated_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_LobbyCreated_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_LobbyCreated_t_123, m_ulSteamIDLobby) == 4 );
C_ASSERT( sizeof(u32_LobbyCreated_t_123().m_ulSteamIDLobby) >= 8 );

C_ASSERT( sizeof(w64_LobbyCreated_t_099u) >= 16 );
C_ASSERT( offsetof(w64_LobbyCreated_t_099u, m_eResult) == 0 );
C_ASSERT( sizeof(w64_LobbyCreated_t_099u().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_LobbyCreated_t_099u, m_ulSteamIDLobby) == 8 );
C_ASSERT( sizeof(w64_LobbyCreated_t_099u().m_ulSteamIDLobby) >= 8 );

C_ASSERT( sizeof(u64_LobbyCreated_t_099u) >= 16 );
C_ASSERT( offsetof(u64_LobbyCreated_t_099u, m_eResult) == 0 );
C_ASSERT( sizeof(u64_LobbyCreated_t_099u().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_LobbyCreated_t_099u, m_ulSteamIDLobby) == 8 );
C_ASSERT( sizeof(u64_LobbyCreated_t_099u().m_ulSteamIDLobby) >= 8 );

C_ASSERT( sizeof(w32_LobbyCreated_t_099u) >= 16 );
C_ASSERT( offsetof(w32_LobbyCreated_t_099u, m_eResult) == 0 );
C_ASSERT( sizeof(w32_LobbyCreated_t_099u().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_LobbyCreated_t_099u, m_ulSteamIDLobby) == 8 );
C_ASSERT( sizeof(w32_LobbyCreated_t_099u().m_ulSteamIDLobby) >= 8 );

C_ASSERT( sizeof(u32_LobbyCreated_t_099u) >= 12 );
C_ASSERT( offsetof(u32_LobbyCreated_t_099u, m_eResult) == 0 );
C_ASSERT( sizeof(u32_LobbyCreated_t_099u().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_LobbyCreated_t_099u, m_ulSteamIDLobby) == 4 );
C_ASSERT( sizeof(u32_LobbyCreated_t_099u().m_ulSteamIDLobby) >= 8 );

static void LobbyCreated_t_123_u_from_w(void *dst, const void *src)
{
    u_LobbyCreated_t_123 *d = (u_LobbyCreated_t_123 *)dst;
    const w_LobbyCreated_t_123 *s = (const w_LobbyCreated_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulSteamIDLobby = s->m_ulSteamIDLobby;
}
#ifdef __x86_64__
w64_LobbyCreated_t_123::operator u64_LobbyCreated_t_123() const
{
    u64_LobbyCreated_t_123 ret;
    LobbyCreated_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void LobbyCreated_t_123_w_from_u(void *dst, const void *src)
{
    w_LobbyCreated_t_123 *d = (w_LobbyCreated_t_123 *)dst;
    const u_LobbyCreated_t_123 *s = (const u_LobbyCreated_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulSteamIDLobby = s->m_ulSteamIDLobby;
}
#ifdef __x86_64__
u64_LobbyCreated_t_123::operator w64_LobbyCreated_t_123() const
{
    w64_LobbyCreated_t_123 ret;
    LobbyCreated_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_LobbyCreated_t_123::operator u32_LobbyCreated_t_123() const
{
    u32_LobbyCreated_t_123 ret;
    LobbyCreated_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_LobbyCreated_t_123::operator w32_LobbyCreated_t_123() const
{
    w32_LobbyCreated_t_123 ret;
    LobbyCreated_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void LobbyCreated_t_099u_u_from_w(void *dst, const void *src)
{
    u_LobbyCreated_t_099u *d = (u_LobbyCreated_t_099u *)dst;
    const w_LobbyCreated_t_099u *s = (const w_LobbyCreated_t_099u *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulSteamIDLobby = s->m_ulSteamIDLobby;
}
#ifdef __i386__
w32_LobbyCreated_t_099u::operator u32_LobbyCreated_t_099u() const
{
    u32_LobbyCreated_t_099u ret;
    LobbyCreated_t_099u_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void LobbyCreated_t_099u_w_from_u(void *dst, const void *src)
{
    w_LobbyCreated_t_099u *d = (w_LobbyCreated_t_099u *)dst;
    const u_LobbyCreated_t_099u *s = (const u_LobbyCreated_t_099u *)src;

    d->m_eResult = s->m_eResult;
    d->m_ulSteamIDLobby = s->m_ulSteamIDLobby;
}
#ifdef __i386__
u32_LobbyCreated_t_099u::operator w32_LobbyCreated_t_099u() const
{
    w32_LobbyCreated_t_099u ret;
    LobbyCreated_t_099u_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_MicroTxnAuthorizationResponse_t_123) >= 24 );
C_ASSERT( offsetof(w64_MicroTxnAuthorizationResponse_t_123, m_unAppID) == 0 );
C_ASSERT( sizeof(w64_MicroTxnAuthorizationResponse_t_123().m_unAppID) >= 4 );
C_ASSERT( offsetof(w64_MicroTxnAuthorizationResponse_t_123, m_ulOrderID) == 8 );
C_ASSERT( sizeof(w64_MicroTxnAuthorizationResponse_t_123().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(w64_MicroTxnAuthorizationResponse_t_123, m_bAuthorized) == 16 );
C_ASSERT( sizeof(w64_MicroTxnAuthorizationResponse_t_123().m_bAuthorized) >= 1 );

C_ASSERT( sizeof(u64_MicroTxnAuthorizationResponse_t_123) >= 16 );
C_ASSERT( offsetof(u64_MicroTxnAuthorizationResponse_t_123, m_unAppID) == 0 );
C_ASSERT( sizeof(u64_MicroTxnAuthorizationResponse_t_123().m_unAppID) >= 4 );
C_ASSERT( offsetof(u64_MicroTxnAuthorizationResponse_t_123, m_ulOrderID) == 4 );
C_ASSERT( sizeof(u64_MicroTxnAuthorizationResponse_t_123().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(u64_MicroTxnAuthorizationResponse_t_123, m_bAuthorized) == 12 );
C_ASSERT( sizeof(u64_MicroTxnAuthorizationResponse_t_123().m_bAuthorized) >= 1 );

C_ASSERT( sizeof(w32_MicroTxnAuthorizationResponse_t_123) >= 24 );
C_ASSERT( offsetof(w32_MicroTxnAuthorizationResponse_t_123, m_unAppID) == 0 );
C_ASSERT( sizeof(w32_MicroTxnAuthorizationResponse_t_123().m_unAppID) >= 4 );
C_ASSERT( offsetof(w32_MicroTxnAuthorizationResponse_t_123, m_ulOrderID) == 8 );
C_ASSERT( sizeof(w32_MicroTxnAuthorizationResponse_t_123().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(w32_MicroTxnAuthorizationResponse_t_123, m_bAuthorized) == 16 );
C_ASSERT( sizeof(w32_MicroTxnAuthorizationResponse_t_123().m_bAuthorized) >= 1 );

C_ASSERT( sizeof(u32_MicroTxnAuthorizationResponse_t_123) >= 16 );
C_ASSERT( offsetof(u32_MicroTxnAuthorizationResponse_t_123, m_unAppID) == 0 );
C_ASSERT( sizeof(u32_MicroTxnAuthorizationResponse_t_123().m_unAppID) >= 4 );
C_ASSERT( offsetof(u32_MicroTxnAuthorizationResponse_t_123, m_ulOrderID) == 4 );
C_ASSERT( sizeof(u32_MicroTxnAuthorizationResponse_t_123().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(u32_MicroTxnAuthorizationResponse_t_123, m_bAuthorized) == 12 );
C_ASSERT( sizeof(u32_MicroTxnAuthorizationResponse_t_123().m_bAuthorized) >= 1 );

C_ASSERT( sizeof(w64_MicroTxnAuthorizationResponse_t_109) >= 24 );
C_ASSERT( offsetof(w64_MicroTxnAuthorizationResponse_t_109, m_unAppID) == 0 );
C_ASSERT( sizeof(w64_MicroTxnAuthorizationResponse_t_109().m_unAppID) >= 4 );
C_ASSERT( offsetof(w64_MicroTxnAuthorizationResponse_t_109, m_ulOrderID) == 8 );
C_ASSERT( sizeof(w64_MicroTxnAuthorizationResponse_t_109().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(w64_MicroTxnAuthorizationResponse_t_109, m_bAuthorized) == 16 );
C_ASSERT( sizeof(w64_MicroTxnAuthorizationResponse_t_109().m_bAuthorized) >= 1 );

C_ASSERT( sizeof(u64_MicroTxnAuthorizationResponse_t_109) >= 24 );
C_ASSERT( offsetof(u64_MicroTxnAuthorizationResponse_t_109, m_unAppID) == 0 );
C_ASSERT( sizeof(u64_MicroTxnAuthorizationResponse_t_109().m_unAppID) >= 4 );
C_ASSERT( offsetof(u64_MicroTxnAuthorizationResponse_t_109, m_ulOrderID) == 8 );
C_ASSERT( sizeof(u64_MicroTxnAuthorizationResponse_t_109().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(u64_MicroTxnAuthorizationResponse_t_109, m_bAuthorized) == 16 );
C_ASSERT( sizeof(u64_MicroTxnAuthorizationResponse_t_109().m_bAuthorized) >= 1 );

C_ASSERT( sizeof(w32_MicroTxnAuthorizationResponse_t_109) >= 24 );
C_ASSERT( offsetof(w32_MicroTxnAuthorizationResponse_t_109, m_unAppID) == 0 );
C_ASSERT( sizeof(w32_MicroTxnAuthorizationResponse_t_109().m_unAppID) >= 4 );
C_ASSERT( offsetof(w32_MicroTxnAuthorizationResponse_t_109, m_ulOrderID) == 8 );
C_ASSERT( sizeof(w32_MicroTxnAuthorizationResponse_t_109().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(w32_MicroTxnAuthorizationResponse_t_109, m_bAuthorized) == 16 );
C_ASSERT( sizeof(w32_MicroTxnAuthorizationResponse_t_109().m_bAuthorized) >= 1 );

C_ASSERT( sizeof(u32_MicroTxnAuthorizationResponse_t_109) >= 16 );
C_ASSERT( offsetof(u32_MicroTxnAuthorizationResponse_t_109, m_unAppID) == 0 );
C_ASSERT( sizeof(u32_MicroTxnAuthorizationResponse_t_109().m_unAppID) >= 4 );
C_ASSERT( offsetof(u32_MicroTxnAuthorizationResponse_t_109, m_ulOrderID) == 4 );
C_ASSERT( sizeof(u32_MicroTxnAuthorizationResponse_t_109().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(u32_MicroTxnAuthorizationResponse_t_109, m_bAuthorized) == 12 );
C_ASSERT( sizeof(u32_MicroTxnAuthorizationResponse_t_109().m_bAuthorized) >= 1 );

static void MicroTxnAuthorizationResponse_t_123_u_from_w(void *dst, const void *src)
{
    u_MicroTxnAuthorizationResponse_t_123 *d = (u_MicroTxnAuthorizationResponse_t_123 *)dst;
    const w_MicroTxnAuthorizationResponse_t_123 *s = (const w_MicroTxnAuthorizationResponse_t_123 *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_ulOrderID = s->m_ulOrderID;
    d->m_bAuthorized = s->m_bAuthorized;
}
#ifdef __x86_64__
w64_MicroTxnAuthorizationResponse_t_123::operator u64_MicroTxnAuthorizationResponse_t_123() const
{
    u64_MicroTxnAuthorizationResponse_t_123 ret;
    MicroTxnAuthorizationResponse_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void MicroTxnAuthorizationResponse_t_123_w_from_u(void *dst, const void *src)
{
    w_MicroTxnAuthorizationResponse_t_123 *d = (w_MicroTxnAuthorizationResponse_t_123 *)dst;
    const u_MicroTxnAuthorizationResponse_t_123 *s = (const u_MicroTxnAuthorizationResponse_t_123 *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_ulOrderID = s->m_ulOrderID;
    d->m_bAuthorized = s->m_bAuthorized;
}
#ifdef __x86_64__
u64_MicroTxnAuthorizationResponse_t_123::operator w64_MicroTxnAuthorizationResponse_t_123() const
{
    w64_MicroTxnAuthorizationResponse_t_123 ret;
    MicroTxnAuthorizationResponse_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_MicroTxnAuthorizationResponse_t_123::operator u32_MicroTxnAuthorizationResponse_t_123() const
{
    u32_MicroTxnAuthorizationResponse_t_123 ret;
    MicroTxnAuthorizationResponse_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_MicroTxnAuthorizationResponse_t_123::operator w32_MicroTxnAuthorizationResponse_t_123() const
{
    w32_MicroTxnAuthorizationResponse_t_123 ret;
    MicroTxnAuthorizationResponse_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void MicroTxnAuthorizationResponse_t_109_u_from_w(void *dst, const void *src)
{
    u_MicroTxnAuthorizationResponse_t_109 *d = (u_MicroTxnAuthorizationResponse_t_109 *)dst;
    const w_MicroTxnAuthorizationResponse_t_109 *s = (const w_MicroTxnAuthorizationResponse_t_109 *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_ulOrderID = s->m_ulOrderID;
    d->m_bAuthorized = s->m_bAuthorized;
}
#ifdef __i386__
w32_MicroTxnAuthorizationResponse_t_109::operator u32_MicroTxnAuthorizationResponse_t_109() const
{
    u32_MicroTxnAuthorizationResponse_t_109 ret;
    MicroTxnAuthorizationResponse_t_109_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void MicroTxnAuthorizationResponse_t_109_w_from_u(void *dst, const void *src)
{
    w_MicroTxnAuthorizationResponse_t_109 *d = (w_MicroTxnAuthorizationResponse_t_109 *)dst;
    const u_MicroTxnAuthorizationResponse_t_109 *s = (const u_MicroTxnAuthorizationResponse_t_109 *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_ulOrderID = s->m_ulOrderID;
    d->m_bAuthorized = s->m_bAuthorized;
}
#ifdef __i386__
u32_MicroTxnAuthorizationResponse_t_109::operator w32_MicroTxnAuthorizationResponse_t_109() const
{
    w32_MicroTxnAuthorizationResponse_t_109 ret;
    MicroTxnAuthorizationResponse_t_109_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_PS3TrophiesInstalled_t_123) >= 24 );
C_ASSERT( offsetof(w64_PS3TrophiesInstalled_t_123, m_nGameID) == 0 );
C_ASSERT( sizeof(w64_PS3TrophiesInstalled_t_123().m_nGameID) >= 8 );
C_ASSERT( offsetof(w64_PS3TrophiesInstalled_t_123, m_eResult) == 8 );
C_ASSERT( sizeof(w64_PS3TrophiesInstalled_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_PS3TrophiesInstalled_t_123, m_ulRequiredDiskSpace) == 16 );
C_ASSERT( sizeof(w64_PS3TrophiesInstalled_t_123().m_ulRequiredDiskSpace) >= 8 );

C_ASSERT( sizeof(u64_PS3TrophiesInstalled_t_123) >= 20 );
C_ASSERT( offsetof(u64_PS3TrophiesInstalled_t_123, m_nGameID) == 0 );
C_ASSERT( sizeof(u64_PS3TrophiesInstalled_t_123().m_nGameID) >= 8 );
C_ASSERT( offsetof(u64_PS3TrophiesInstalled_t_123, m_eResult) == 8 );
C_ASSERT( sizeof(u64_PS3TrophiesInstalled_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_PS3TrophiesInstalled_t_123, m_ulRequiredDiskSpace) == 12 );
C_ASSERT( sizeof(u64_PS3TrophiesInstalled_t_123().m_ulRequiredDiskSpace) >= 8 );

C_ASSERT( sizeof(w32_PS3TrophiesInstalled_t_123) >= 24 );
C_ASSERT( offsetof(w32_PS3TrophiesInstalled_t_123, m_nGameID) == 0 );
C_ASSERT( sizeof(w32_PS3TrophiesInstalled_t_123().m_nGameID) >= 8 );
C_ASSERT( offsetof(w32_PS3TrophiesInstalled_t_123, m_eResult) == 8 );
C_ASSERT( sizeof(w32_PS3TrophiesInstalled_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_PS3TrophiesInstalled_t_123, m_ulRequiredDiskSpace) == 16 );
C_ASSERT( sizeof(w32_PS3TrophiesInstalled_t_123().m_ulRequiredDiskSpace) >= 8 );

C_ASSERT( sizeof(u32_PS3TrophiesInstalled_t_123) >= 20 );
C_ASSERT( offsetof(u32_PS3TrophiesInstalled_t_123, m_nGameID) == 0 );
C_ASSERT( sizeof(u32_PS3TrophiesInstalled_t_123().m_nGameID) >= 8 );
C_ASSERT( offsetof(u32_PS3TrophiesInstalled_t_123, m_eResult) == 8 );
C_ASSERT( sizeof(u32_PS3TrophiesInstalled_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_PS3TrophiesInstalled_t_123, m_ulRequiredDiskSpace) == 12 );
C_ASSERT( sizeof(u32_PS3TrophiesInstalled_t_123().m_ulRequiredDiskSpace) >= 8 );

C_ASSERT( sizeof(w64_PS3TrophiesInstalled_t_112x) >= 24 );
C_ASSERT( offsetof(w64_PS3TrophiesInstalled_t_112x, m_nGameID) == 0 );
C_ASSERT( sizeof(w64_PS3TrophiesInstalled_t_112x().m_nGameID) >= 8 );
C_ASSERT( offsetof(w64_PS3TrophiesInstalled_t_112x, m_eResult) == 8 );
C_ASSERT( sizeof(w64_PS3TrophiesInstalled_t_112x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_PS3TrophiesInstalled_t_112x, m_ulRequiredDiskSpace) == 16 );
C_ASSERT( sizeof(w64_PS3TrophiesInstalled_t_112x().m_ulRequiredDiskSpace) >= 8 );

C_ASSERT( sizeof(u64_PS3TrophiesInstalled_t_112x) >= 24 );
C_ASSERT( offsetof(u64_PS3TrophiesInstalled_t_112x, m_nGameID) == 0 );
C_ASSERT( sizeof(u64_PS3TrophiesInstalled_t_112x().m_nGameID) >= 8 );
C_ASSERT( offsetof(u64_PS3TrophiesInstalled_t_112x, m_eResult) == 8 );
C_ASSERT( sizeof(u64_PS3TrophiesInstalled_t_112x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_PS3TrophiesInstalled_t_112x, m_ulRequiredDiskSpace) == 16 );
C_ASSERT( sizeof(u64_PS3TrophiesInstalled_t_112x().m_ulRequiredDiskSpace) >= 8 );

C_ASSERT( sizeof(w32_PS3TrophiesInstalled_t_112x) >= 24 );
C_ASSERT( offsetof(w32_PS3TrophiesInstalled_t_112x, m_nGameID) == 0 );
C_ASSERT( sizeof(w32_PS3TrophiesInstalled_t_112x().m_nGameID) >= 8 );
C_ASSERT( offsetof(w32_PS3TrophiesInstalled_t_112x, m_eResult) == 8 );
C_ASSERT( sizeof(w32_PS3TrophiesInstalled_t_112x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_PS3TrophiesInstalled_t_112x, m_ulRequiredDiskSpace) == 16 );
C_ASSERT( sizeof(w32_PS3TrophiesInstalled_t_112x().m_ulRequiredDiskSpace) >= 8 );

C_ASSERT( sizeof(u32_PS3TrophiesInstalled_t_112x) >= 20 );
C_ASSERT( offsetof(u32_PS3TrophiesInstalled_t_112x, m_nGameID) == 0 );
C_ASSERT( sizeof(u32_PS3TrophiesInstalled_t_112x().m_nGameID) >= 8 );
C_ASSERT( offsetof(u32_PS3TrophiesInstalled_t_112x, m_eResult) == 8 );
C_ASSERT( sizeof(u32_PS3TrophiesInstalled_t_112x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_PS3TrophiesInstalled_t_112x, m_ulRequiredDiskSpace) == 12 );
C_ASSERT( sizeof(u32_PS3TrophiesInstalled_t_112x().m_ulRequiredDiskSpace) >= 8 );

static void PS3TrophiesInstalled_t_123_u_from_w(void *dst, const void *src)
{
    u_PS3TrophiesInstalled_t_123 *d = (u_PS3TrophiesInstalled_t_123 *)dst;
    const w_PS3TrophiesInstalled_t_123 *s = (const w_PS3TrophiesInstalled_t_123 *)src;

    d->m_nGameID = s->m_nGameID;
    d->m_eResult = s->m_eResult;
    d->m_ulRequiredDiskSpace = s->m_ulRequiredDiskSpace;
}
#ifdef __x86_64__
w64_PS3TrophiesInstalled_t_123::operator u64_PS3TrophiesInstalled_t_123() const
{
    u64_PS3TrophiesInstalled_t_123 ret;
    PS3TrophiesInstalled_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void PS3TrophiesInstalled_t_123_w_from_u(void *dst, const void *src)
{
    w_PS3TrophiesInstalled_t_123 *d = (w_PS3TrophiesInstalled_t_123 *)dst;
    const u_PS3TrophiesInstalled_t_123 *s = (const u_PS3TrophiesInstalled_t_123 *)src;

    d->m_nGameID = s->m_nGameID;
    d->m_eResult = s->m_eResult;
    d->m_ulRequiredDiskSpace = s->m_ulRequiredDiskSpace;
}
#ifdef __x86_64__
u64_PS3TrophiesInstalled_t_123::operator w64_PS3TrophiesInstalled_t_123() const
{
    w64_PS3TrophiesInstalled_t_123 ret;
    PS3TrophiesInstalled_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_PS3TrophiesInstalled_t_123::operator u32_PS3TrophiesInstalled_t_123() const
{
    u32_PS3TrophiesInstalled_t_123 ret;
    PS3TrophiesInstalled_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_PS3TrophiesInstalled_t_123::operator w32_PS3TrophiesInstalled_t_123() const
{
    w32_PS3TrophiesInstalled_t_123 ret;
    PS3TrophiesInstalled_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void PS3TrophiesInstalled_t_112x_u_from_w(void *dst, const void *src)
{
    u_PS3TrophiesInstalled_t_112x *d = (u_PS3TrophiesInstalled_t_112x *)dst;
    const w_PS3TrophiesInstalled_t_112x *s = (const w_PS3TrophiesInstalled_t_112x *)src;

    d->m_nGameID = s->m_nGameID;
    d->m_eResult = s->m_eResult;
    d->m_ulRequiredDiskSpace = s->m_ulRequiredDiskSpace;
}
#ifdef __i386__
w32_PS3TrophiesInstalled_t_112x::operator u32_PS3TrophiesInstalled_t_112x() const
{
    u32_PS3TrophiesInstalled_t_112x ret;
    PS3TrophiesInstalled_t_112x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void PS3TrophiesInstalled_t_112x_w_from_u(void *dst, const void *src)
{
    w_PS3TrophiesInstalled_t_112x *d = (w_PS3TrophiesInstalled_t_112x *)dst;
    const u_PS3TrophiesInstalled_t_112x *s = (const u_PS3TrophiesInstalled_t_112x *)src;

    d->m_nGameID = s->m_nGameID;
    d->m_eResult = s->m_eResult;
    d->m_ulRequiredDiskSpace = s->m_ulRequiredDiskSpace;
}
#ifdef __i386__
u32_PS3TrophiesInstalled_t_112x::operator w32_PS3TrophiesInstalled_t_112x() const
{
    w32_PS3TrophiesInstalled_t_112x ret;
    PS3TrophiesInstalled_t_112x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_123) >= 288 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_123, m_rgchCurrentFile) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_123().m_rgchCurrentFile) >= 260 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_123, m_nAppID) == 260 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_123().m_nAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_123, m_uBytesTransferredThisChunk) == 264 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_123().m_uBytesTransferredThisChunk) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_123, m_dAppPercentComplete) == 272 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_123().m_dAppPercentComplete) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_123, m_bUploading) == 280 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_123().m_bUploading) >= 1 );

C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_123) >= 280 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_123, m_rgchCurrentFile) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_123().m_rgchCurrentFile) >= 260 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_123, m_nAppID) == 260 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_123().m_nAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_123, m_uBytesTransferredThisChunk) == 264 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_123().m_uBytesTransferredThisChunk) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_123, m_dAppPercentComplete) == 268 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_123().m_dAppPercentComplete) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_123, m_bUploading) == 276 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_123().m_bUploading) >= 1 );

C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_123) >= 288 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_123, m_rgchCurrentFile) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_123().m_rgchCurrentFile) >= 260 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_123, m_nAppID) == 260 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_123().m_nAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_123, m_uBytesTransferredThisChunk) == 264 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_123().m_uBytesTransferredThisChunk) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_123, m_dAppPercentComplete) == 272 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_123().m_dAppPercentComplete) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_123, m_bUploading) == 280 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_123().m_bUploading) >= 1 );

C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_123) >= 280 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_123, m_rgchCurrentFile) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_123().m_rgchCurrentFile) >= 260 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_123, m_nAppID) == 260 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_123().m_nAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_123, m_uBytesTransferredThisChunk) == 264 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_123().m_uBytesTransferredThisChunk) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_123, m_dAppPercentComplete) == 268 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_123().m_dAppPercentComplete) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_123, m_bUploading) == 276 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_123().m_bUploading) >= 1 );

C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_111x) >= 288 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_111x, m_rgchCurrentFile) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_111x().m_rgchCurrentFile) >= 260 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_111x, m_nAppID) == 260 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_111x().m_nAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_111x, m_uBytesTransferredThisChunk) == 264 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_111x().m_uBytesTransferredThisChunk) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_111x, m_dAppPercentComplete) == 272 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_111x().m_dAppPercentComplete) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageAppSyncProgress_t_111x, m_bUploading) == 280 );
C_ASSERT( sizeof(w64_RemoteStorageAppSyncProgress_t_111x().m_bUploading) >= 1 );

C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_111x) >= 288 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_111x, m_rgchCurrentFile) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_111x().m_rgchCurrentFile) >= 260 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_111x, m_nAppID) == 260 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_111x().m_nAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_111x, m_uBytesTransferredThisChunk) == 264 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_111x().m_uBytesTransferredThisChunk) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_111x, m_dAppPercentComplete) == 272 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_111x().m_dAppPercentComplete) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageAppSyncProgress_t_111x, m_bUploading) == 280 );
C_ASSERT( sizeof(u64_RemoteStorageAppSyncProgress_t_111x().m_bUploading) >= 1 );

C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_111x) >= 288 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_111x, m_rgchCurrentFile) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_111x().m_rgchCurrentFile) >= 260 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_111x, m_nAppID) == 260 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_111x().m_nAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_111x, m_uBytesTransferredThisChunk) == 264 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_111x().m_uBytesTransferredThisChunk) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_111x, m_dAppPercentComplete) == 272 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_111x().m_dAppPercentComplete) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageAppSyncProgress_t_111x, m_bUploading) == 280 );
C_ASSERT( sizeof(w32_RemoteStorageAppSyncProgress_t_111x().m_bUploading) >= 1 );

C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_111x) >= 280 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_111x, m_rgchCurrentFile) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_111x().m_rgchCurrentFile) >= 260 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_111x, m_nAppID) == 260 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_111x().m_nAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_111x, m_uBytesTransferredThisChunk) == 264 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_111x().m_uBytesTransferredThisChunk) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_111x, m_dAppPercentComplete) == 268 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_111x().m_dAppPercentComplete) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageAppSyncProgress_t_111x, m_bUploading) == 276 );
C_ASSERT( sizeof(u32_RemoteStorageAppSyncProgress_t_111x().m_bUploading) >= 1 );

static void RemoteStorageAppSyncProgress_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageAppSyncProgress_t_123 *d = (u_RemoteStorageAppSyncProgress_t_123 *)dst;
    const w_RemoteStorageAppSyncProgress_t_123 *s = (const w_RemoteStorageAppSyncProgress_t_123 *)src;

    d->m_rgchCurrentFile = s->m_rgchCurrentFile;
    d->m_nAppID = s->m_nAppID;
    d->m_uBytesTransferredThisChunk = s->m_uBytesTransferredThisChunk;
    d->m_dAppPercentComplete = s->m_dAppPercentComplete;
    d->m_bUploading = s->m_bUploading;
}
#ifdef __x86_64__
w64_RemoteStorageAppSyncProgress_t_123::operator u64_RemoteStorageAppSyncProgress_t_123() const
{
    u64_RemoteStorageAppSyncProgress_t_123 ret;
    RemoteStorageAppSyncProgress_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageAppSyncProgress_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageAppSyncProgress_t_123 *d = (w_RemoteStorageAppSyncProgress_t_123 *)dst;
    const u_RemoteStorageAppSyncProgress_t_123 *s = (const u_RemoteStorageAppSyncProgress_t_123 *)src;

    d->m_rgchCurrentFile = s->m_rgchCurrentFile;
    d->m_nAppID = s->m_nAppID;
    d->m_uBytesTransferredThisChunk = s->m_uBytesTransferredThisChunk;
    d->m_dAppPercentComplete = s->m_dAppPercentComplete;
    d->m_bUploading = s->m_bUploading;
}
#ifdef __x86_64__
u64_RemoteStorageAppSyncProgress_t_123::operator w64_RemoteStorageAppSyncProgress_t_123() const
{
    w64_RemoteStorageAppSyncProgress_t_123 ret;
    RemoteStorageAppSyncProgress_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageAppSyncProgress_t_123::operator u32_RemoteStorageAppSyncProgress_t_123() const
{
    u32_RemoteStorageAppSyncProgress_t_123 ret;
    RemoteStorageAppSyncProgress_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageAppSyncProgress_t_123::operator w32_RemoteStorageAppSyncProgress_t_123() const
{
    w32_RemoteStorageAppSyncProgress_t_123 ret;
    RemoteStorageAppSyncProgress_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageAppSyncProgress_t_111x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageAppSyncProgress_t_111x *d = (u_RemoteStorageAppSyncProgress_t_111x *)dst;
    const w_RemoteStorageAppSyncProgress_t_111x *s = (const w_RemoteStorageAppSyncProgress_t_111x *)src;

    d->m_rgchCurrentFile = s->m_rgchCurrentFile;
    d->m_nAppID = s->m_nAppID;
    d->m_uBytesTransferredThisChunk = s->m_uBytesTransferredThisChunk;
    d->m_dAppPercentComplete = s->m_dAppPercentComplete;
    d->m_bUploading = s->m_bUploading;
}
#ifdef __i386__
w32_RemoteStorageAppSyncProgress_t_111x::operator u32_RemoteStorageAppSyncProgress_t_111x() const
{
    u32_RemoteStorageAppSyncProgress_t_111x ret;
    RemoteStorageAppSyncProgress_t_111x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageAppSyncProgress_t_111x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageAppSyncProgress_t_111x *d = (w_RemoteStorageAppSyncProgress_t_111x *)dst;
    const u_RemoteStorageAppSyncProgress_t_111x *s = (const u_RemoteStorageAppSyncProgress_t_111x *)src;

    d->m_rgchCurrentFile = s->m_rgchCurrentFile;
    d->m_nAppID = s->m_nAppID;
    d->m_uBytesTransferredThisChunk = s->m_uBytesTransferredThisChunk;
    d->m_dAppPercentComplete = s->m_dAppPercentComplete;
    d->m_bUploading = s->m_bUploading;
}
#ifdef __i386__
u32_RemoteStorageAppSyncProgress_t_111x::operator w32_RemoteStorageAppSyncProgress_t_111x() const
{
    w32_RemoteStorageAppSyncProgress_t_111x ret;
    RemoteStorageAppSyncProgress_t_111x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageDeletePublishedFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageDeletePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageDeletePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDeletePublishedFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageDeletePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageDeletePublishedFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u64_RemoteStorageDeletePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageDeletePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDeletePublishedFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageDeletePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageDeletePublishedFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageDeletePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageDeletePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDeletePublishedFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageDeletePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageDeletePublishedFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageDeletePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageDeletePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDeletePublishedFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageDeletePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w64_RemoteStorageDeletePublishedFileResult_t_116x) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageDeletePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageDeletePublishedFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDeletePublishedFileResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageDeletePublishedFileResult_t_116x().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageDeletePublishedFileResult_t_116x) >= 16 );
C_ASSERT( offsetof(u64_RemoteStorageDeletePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageDeletePublishedFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDeletePublishedFileResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageDeletePublishedFileResult_t_116x().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageDeletePublishedFileResult_t_116x) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageDeletePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageDeletePublishedFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDeletePublishedFileResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageDeletePublishedFileResult_t_116x().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageDeletePublishedFileResult_t_116x) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageDeletePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageDeletePublishedFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDeletePublishedFileResult_t_116x, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageDeletePublishedFileResult_t_116x().m_nPublishedFileId) >= 8 );

static void RemoteStorageDeletePublishedFileResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageDeletePublishedFileResult_t_123 *d = (u_RemoteStorageDeletePublishedFileResult_t_123 *)dst;
    const w_RemoteStorageDeletePublishedFileResult_t_123 *s = (const w_RemoteStorageDeletePublishedFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
w64_RemoteStorageDeletePublishedFileResult_t_123::operator u64_RemoteStorageDeletePublishedFileResult_t_123() const
{
    u64_RemoteStorageDeletePublishedFileResult_t_123 ret;
    RemoteStorageDeletePublishedFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageDeletePublishedFileResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageDeletePublishedFileResult_t_123 *d = (w_RemoteStorageDeletePublishedFileResult_t_123 *)dst;
    const u_RemoteStorageDeletePublishedFileResult_t_123 *s = (const u_RemoteStorageDeletePublishedFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
u64_RemoteStorageDeletePublishedFileResult_t_123::operator w64_RemoteStorageDeletePublishedFileResult_t_123() const
{
    w64_RemoteStorageDeletePublishedFileResult_t_123 ret;
    RemoteStorageDeletePublishedFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageDeletePublishedFileResult_t_123::operator u32_RemoteStorageDeletePublishedFileResult_t_123() const
{
    u32_RemoteStorageDeletePublishedFileResult_t_123 ret;
    RemoteStorageDeletePublishedFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageDeletePublishedFileResult_t_123::operator w32_RemoteStorageDeletePublishedFileResult_t_123() const
{
    w32_RemoteStorageDeletePublishedFileResult_t_123 ret;
    RemoteStorageDeletePublishedFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageDeletePublishedFileResult_t_116x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageDeletePublishedFileResult_t_116x *d = (u_RemoteStorageDeletePublishedFileResult_t_116x *)dst;
    const w_RemoteStorageDeletePublishedFileResult_t_116x *s = (const w_RemoteStorageDeletePublishedFileResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __i386__
w32_RemoteStorageDeletePublishedFileResult_t_116x::operator u32_RemoteStorageDeletePublishedFileResult_t_116x() const
{
    u32_RemoteStorageDeletePublishedFileResult_t_116x ret;
    RemoteStorageDeletePublishedFileResult_t_116x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageDeletePublishedFileResult_t_116x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageDeletePublishedFileResult_t_116x *d = (w_RemoteStorageDeletePublishedFileResult_t_116x *)dst;
    const u_RemoteStorageDeletePublishedFileResult_t_116x *s = (const u_RemoteStorageDeletePublishedFileResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __i386__
u32_RemoteStorageDeletePublishedFileResult_t_116x::operator w32_RemoteStorageDeletePublishedFileResult_t_116x() const
{
    w32_RemoteStorageDeletePublishedFileResult_t_116x ret;
    RemoteStorageDeletePublishedFileResult_t_116x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_123) >= 296 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_123, m_hFile) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_123().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_123, m_nAppID) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_123().m_nAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_123, m_nSizeInBytes) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_123().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_123, m_pchFileName) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_123().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_123, m_ulSteamIDOwner) == 288 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_123().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_123) >= 288 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_123, m_hFile) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_123().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_123, m_nAppID) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_123().m_nAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_123, m_nSizeInBytes) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_123().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_123, m_pchFileName) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_123().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_123, m_ulSteamIDOwner) == 280 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_123().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_123) >= 296 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_123, m_hFile) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_123().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_123, m_nAppID) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_123().m_nAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_123, m_nSizeInBytes) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_123().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_123, m_pchFileName) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_123().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_123, m_ulSteamIDOwner) == 288 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_123().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_123) >= 288 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_123, m_hFile) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_123().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_123, m_nAppID) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_123().m_nAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_123, m_nSizeInBytes) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_123().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_123, m_pchFileName) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_123().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_123, m_ulSteamIDOwner) == 280 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_123().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_116x) >= 296 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_116x, m_hFile) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_116x().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_116x, m_nAppID) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_116x().m_nAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_116x, m_nSizeInBytes) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_116x().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_116x, m_pchFileName) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_116x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_116x, m_ulSteamIDOwner) == 288 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_116x().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_116x) >= 296 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_116x, m_hFile) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_116x().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_116x, m_nAppID) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_116x().m_nAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_116x, m_nSizeInBytes) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_116x().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_116x, m_pchFileName) == 24 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_116x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_116x, m_ulSteamIDOwner) == 288 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_116x().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_116x) >= 296 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_116x, m_hFile) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_116x().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_116x, m_nAppID) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_116x().m_nAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_116x, m_nSizeInBytes) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_116x().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_116x, m_pchFileName) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_116x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_116x, m_ulSteamIDOwner) == 288 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_116x().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_116x) >= 288 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_116x, m_hFile) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_116x().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_116x, m_nAppID) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_116x().m_nAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_116x, m_nSizeInBytes) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_116x().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_116x, m_pchFileName) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_116x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_116x, m_ulSteamIDOwner) == 280 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_116x().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_111x) >= 40 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_111x, m_hFile) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_111x().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_111x, m_nAppID) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_111x().m_nAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_111x, m_nSizeInBytes) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_111x().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_111x, m_pchFileName) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_111x().m_pchFileName) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageDownloadUGCResult_t_111x, m_ulSteamIDOwner) == 32 );
C_ASSERT( sizeof(w64_RemoteStorageDownloadUGCResult_t_111x().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_111x) >= 40 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_111x, m_hFile) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_111x().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_111x, m_nAppID) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_111x().m_nAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_111x, m_nSizeInBytes) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_111x().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_111x, m_pchFileName) == 24 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_111x().m_pchFileName) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageDownloadUGCResult_t_111x, m_ulSteamIDOwner) == 32 );
C_ASSERT( sizeof(u64_RemoteStorageDownloadUGCResult_t_111x().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_111x) >= 40 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_111x, m_hFile) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_111x().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_111x, m_nAppID) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_111x().m_nAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_111x, m_nSizeInBytes) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_111x().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_111x, m_pchFileName) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_111x().m_pchFileName) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageDownloadUGCResult_t_111x, m_ulSteamIDOwner) == 32 );
C_ASSERT( sizeof(w32_RemoteStorageDownloadUGCResult_t_111x().m_ulSteamIDOwner) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_111x) >= 32 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_111x, m_hFile) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_111x().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_111x, m_nAppID) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_111x().m_nAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_111x, m_nSizeInBytes) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_111x().m_nSizeInBytes) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_111x, m_pchFileName) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_111x().m_pchFileName) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageDownloadUGCResult_t_111x, m_ulSteamIDOwner) == 24 );
C_ASSERT( sizeof(u32_RemoteStorageDownloadUGCResult_t_111x().m_ulSteamIDOwner) >= 8 );

static void RemoteStorageDownloadUGCResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageDownloadUGCResult_t_123 *d = (u_RemoteStorageDownloadUGCResult_t_123 *)dst;
    const w_RemoteStorageDownloadUGCResult_t_123 *s = (const w_RemoteStorageDownloadUGCResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
    d->m_nAppID = s->m_nAppID;
    d->m_nSizeInBytes = s->m_nSizeInBytes;
    d->m_pchFileName = s->m_pchFileName;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
}
#ifdef __x86_64__
w64_RemoteStorageDownloadUGCResult_t_123::operator u64_RemoteStorageDownloadUGCResult_t_123() const
{
    u64_RemoteStorageDownloadUGCResult_t_123 ret;
    RemoteStorageDownloadUGCResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageDownloadUGCResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageDownloadUGCResult_t_123 *d = (w_RemoteStorageDownloadUGCResult_t_123 *)dst;
    const u_RemoteStorageDownloadUGCResult_t_123 *s = (const u_RemoteStorageDownloadUGCResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
    d->m_nAppID = s->m_nAppID;
    d->m_nSizeInBytes = s->m_nSizeInBytes;
    d->m_pchFileName = s->m_pchFileName;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
}
#ifdef __x86_64__
u64_RemoteStorageDownloadUGCResult_t_123::operator w64_RemoteStorageDownloadUGCResult_t_123() const
{
    w64_RemoteStorageDownloadUGCResult_t_123 ret;
    RemoteStorageDownloadUGCResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageDownloadUGCResult_t_123::operator u32_RemoteStorageDownloadUGCResult_t_123() const
{
    u32_RemoteStorageDownloadUGCResult_t_123 ret;
    RemoteStorageDownloadUGCResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageDownloadUGCResult_t_123::operator w32_RemoteStorageDownloadUGCResult_t_123() const
{
    w32_RemoteStorageDownloadUGCResult_t_123 ret;
    RemoteStorageDownloadUGCResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageDownloadUGCResult_t_116x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageDownloadUGCResult_t_116x *d = (u_RemoteStorageDownloadUGCResult_t_116x *)dst;
    const w_RemoteStorageDownloadUGCResult_t_116x *s = (const w_RemoteStorageDownloadUGCResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
    d->m_nAppID = s->m_nAppID;
    d->m_nSizeInBytes = s->m_nSizeInBytes;
    d->m_pchFileName = s->m_pchFileName;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
}
#ifdef __i386__
w32_RemoteStorageDownloadUGCResult_t_116x::operator u32_RemoteStorageDownloadUGCResult_t_116x() const
{
    u32_RemoteStorageDownloadUGCResult_t_116x ret;
    RemoteStorageDownloadUGCResult_t_116x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageDownloadUGCResult_t_116x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageDownloadUGCResult_t_116x *d = (w_RemoteStorageDownloadUGCResult_t_116x *)dst;
    const u_RemoteStorageDownloadUGCResult_t_116x *s = (const u_RemoteStorageDownloadUGCResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
    d->m_nAppID = s->m_nAppID;
    d->m_nSizeInBytes = s->m_nSizeInBytes;
    d->m_pchFileName = s->m_pchFileName;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
}
#ifdef __i386__
u32_RemoteStorageDownloadUGCResult_t_116x::operator w32_RemoteStorageDownloadUGCResult_t_116x() const
{
    w32_RemoteStorageDownloadUGCResult_t_116x ret;
    RemoteStorageDownloadUGCResult_t_116x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageDownloadUGCResult_t_111x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageDownloadUGCResult_t_111x *d = (u_RemoteStorageDownloadUGCResult_t_111x *)dst;
    const w_RemoteStorageDownloadUGCResult_t_111x *s = (const w_RemoteStorageDownloadUGCResult_t_111x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
    d->m_nAppID = s->m_nAppID;
    d->m_nSizeInBytes = s->m_nSizeInBytes;
    d->m_pchFileName = s->m_pchFileName;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
}
#ifdef __i386__
w32_RemoteStorageDownloadUGCResult_t_111x::operator u32_RemoteStorageDownloadUGCResult_t_111x() const
{
    u32_RemoteStorageDownloadUGCResult_t_111x ret;
    RemoteStorageDownloadUGCResult_t_111x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageDownloadUGCResult_t_111x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageDownloadUGCResult_t_111x *d = (w_RemoteStorageDownloadUGCResult_t_111x *)dst;
    const u_RemoteStorageDownloadUGCResult_t_111x *s = (const u_RemoteStorageDownloadUGCResult_t_111x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
    d->m_nAppID = s->m_nAppID;
    d->m_nSizeInBytes = s->m_nSizeInBytes;
    d->m_pchFileName = s->m_pchFileName;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
}
#ifdef __i386__
u32_RemoteStorageDownloadUGCResult_t_111x::operator w32_RemoteStorageDownloadUGCResult_t_111x() const
{
    w32_RemoteStorageDownloadUGCResult_t_111x ret;
    RemoteStorageDownloadUGCResult_t_111x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123) >= 416 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123) >= 412 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123) >= 416 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123) >= 412 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x) >= 416 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x) >= 416 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x) >= 416 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x) >= 412 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x().m_rgPublishedFileId) >= 400 );

static void RemoteStorageEnumerateUserPublishedFilesResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageEnumerateUserPublishedFilesResult_t_123 *d = (u_RemoteStorageEnumerateUserPublishedFilesResult_t_123 *)dst;
    const w_RemoteStorageEnumerateUserPublishedFilesResult_t_123 *s = (const w_RemoteStorageEnumerateUserPublishedFilesResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
}
#ifdef __x86_64__
w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123::operator u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123() const
{
    u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123 ret;
    RemoteStorageEnumerateUserPublishedFilesResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageEnumerateUserPublishedFilesResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageEnumerateUserPublishedFilesResult_t_123 *d = (w_RemoteStorageEnumerateUserPublishedFilesResult_t_123 *)dst;
    const u_RemoteStorageEnumerateUserPublishedFilesResult_t_123 *s = (const u_RemoteStorageEnumerateUserPublishedFilesResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
}
#ifdef __x86_64__
u64_RemoteStorageEnumerateUserPublishedFilesResult_t_123::operator w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123() const
{
    w64_RemoteStorageEnumerateUserPublishedFilesResult_t_123 ret;
    RemoteStorageEnumerateUserPublishedFilesResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123::operator u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123() const
{
    u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123 ret;
    RemoteStorageEnumerateUserPublishedFilesResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageEnumerateUserPublishedFilesResult_t_123::operator w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123() const
{
    w32_RemoteStorageEnumerateUserPublishedFilesResult_t_123 ret;
    RemoteStorageEnumerateUserPublishedFilesResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageEnumerateUserPublishedFilesResult_t_116x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageEnumerateUserPublishedFilesResult_t_116x *d = (u_RemoteStorageEnumerateUserPublishedFilesResult_t_116x *)dst;
    const w_RemoteStorageEnumerateUserPublishedFilesResult_t_116x *s = (const w_RemoteStorageEnumerateUserPublishedFilesResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
}
#ifdef __i386__
w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x::operator u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x() const
{
    u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x ret;
    RemoteStorageEnumerateUserPublishedFilesResult_t_116x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageEnumerateUserPublishedFilesResult_t_116x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageEnumerateUserPublishedFilesResult_t_116x *d = (w_RemoteStorageEnumerateUserPublishedFilesResult_t_116x *)dst;
    const u_RemoteStorageEnumerateUserPublishedFilesResult_t_116x *s = (const u_RemoteStorageEnumerateUserPublishedFilesResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
}
#ifdef __i386__
u32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x::operator w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x() const
{
    w32_RemoteStorageEnumerateUserPublishedFilesResult_t_116x ret;
    RemoteStorageEnumerateUserPublishedFilesResult_t_116x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123) >= 416 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123) >= 412 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123) >= 416 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123) >= 412 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119) >= 416 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119) >= 416 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119) >= 416 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_rgPublishedFileId) >= 400 );

C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119) >= 412 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119().m_rgPublishedFileId) >= 400 );

static void RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 *d = (u_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 *)dst;
    const w_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 *s = (const w_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
}
#ifdef __x86_64__
w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123::operator u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123() const
{
    u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 ret;
    RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 *d = (w_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 *)dst;
    const u_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 *s = (const u_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
}
#ifdef __x86_64__
u64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123::operator w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123() const
{
    w64_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 ret;
    RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123::operator u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123() const
{
    u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 ret;
    RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123::operator w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123() const
{
    w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123 ret;
    RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 *d = (u_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 *)dst;
    const w_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 *s = (const w_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
}
#ifdef __i386__
w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119::operator u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119() const
{
    u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 ret;
    RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 *d = (w_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 *)dst;
    const u_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 *s = (const u_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
}
#ifdef __i386__
u32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119::operator w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119() const
{
    w32_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119 ret;
    RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123) >= 616 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_rgRTimeSubscribed) == 416 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_rgRTimeSubscribed) >= 200 );

C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123) >= 612 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_rgRTimeSubscribed) == 412 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_rgRTimeSubscribed) >= 200 );

C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123) >= 616 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_rgRTimeSubscribed) == 416 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_rgRTimeSubscribed) >= 200 );

C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123) >= 612 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123, m_rgRTimeSubscribed) == 412 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123().m_rgRTimeSubscribed) >= 200 );

C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x) >= 616 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_rgRTimeSubscribed) == 416 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_rgRTimeSubscribed) >= 200 );

C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x) >= 616 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_rgRTimeSubscribed) == 416 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_rgRTimeSubscribed) >= 200 );

C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x) >= 616 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_rgRTimeSubscribed) == 416 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_rgRTimeSubscribed) >= 200 );

C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x) >= 612 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x, m_rgRTimeSubscribed) == 412 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x().m_rgRTimeSubscribed) >= 200 );

static void RemoteStorageEnumerateUserSubscribedFilesResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 *d = (u_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 *)dst;
    const w_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 *s = (const w_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgRTimeSubscribed = s->m_rgRTimeSubscribed;
}
#ifdef __x86_64__
w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123::operator u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123() const
{
    u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 ret;
    RemoteStorageEnumerateUserSubscribedFilesResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageEnumerateUserSubscribedFilesResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 *d = (w_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 *)dst;
    const u_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 *s = (const u_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgRTimeSubscribed = s->m_rgRTimeSubscribed;
}
#ifdef __x86_64__
u64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123::operator w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123() const
{
    w64_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 ret;
    RemoteStorageEnumerateUserSubscribedFilesResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123::operator u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123() const
{
    u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 ret;
    RemoteStorageEnumerateUserSubscribedFilesResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123::operator w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123() const
{
    w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_123 ret;
    RemoteStorageEnumerateUserSubscribedFilesResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageEnumerateUserSubscribedFilesResult_t_116x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x *d = (u_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x *)dst;
    const w_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x *s = (const w_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgRTimeSubscribed = s->m_rgRTimeSubscribed;
}
#ifdef __i386__
w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x::operator u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x() const
{
    u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x ret;
    RemoteStorageEnumerateUserSubscribedFilesResult_t_116x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageEnumerateUserSubscribedFilesResult_t_116x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x *d = (w_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x *)dst;
    const u_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x *s = (const u_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgRTimeSubscribed = s->m_rgRTimeSubscribed;
}
#ifdef __i386__
u32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x::operator w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x() const
{
    w32_RemoteStorageEnumerateUserSubscribedFilesResult_t_116x ret;
    RemoteStorageEnumerateUserSubscribedFilesResult_t_116x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125) >= 624 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_rgScore) == 416 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_rgScore) >= 200 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nAppId) == 616 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nAppId) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_unStartIndex) == 620 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_unStartIndex) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125) >= 620 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_rgScore) == 412 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_rgScore) >= 200 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nAppId) == 612 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nAppId) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_unStartIndex) == 616 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_unStartIndex) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125) >= 624 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_rgScore) == 416 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_rgScore) >= 200 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nAppId) == 616 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nAppId) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_unStartIndex) == 620 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_unStartIndex) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125) >= 620 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_rgScore) == 412 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_rgScore) >= 200 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_nAppId) == 612 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_nAppId) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125, m_unStartIndex) == 616 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_125().m_unStartIndex) >= 4 );

C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123) >= 616 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_rgScore) == 416 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_rgScore) >= 200 );

C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123) >= 612 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_rgScore) == 412 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_rgScore) >= 200 );

C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123) >= 616 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_rgScore) == 416 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_rgScore) >= 200 );

C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123) >= 612 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123, m_rgScore) == 412 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_123().m_rgScore) >= 200 );

C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119) >= 616 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_rgScore) == 416 );
C_ASSERT( sizeof(w64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_rgScore) >= 200 );

C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119) >= 616 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_rgScore) == 416 );
C_ASSERT( sizeof(u64_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_rgScore) >= 200 );

C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119) >= 616 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_rgPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_rgScore) == 416 );
C_ASSERT( sizeof(w32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_rgScore) >= 200 );

C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119) >= 612 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_nResultsReturned) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_nResultsReturned) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_nTotalResultCount) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_nTotalResultCount) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_rgPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_rgPublishedFileId) >= 400 );
C_ASSERT( offsetof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119, m_rgScore) == 412 );
C_ASSERT( sizeof(u32_RemoteStorageEnumerateWorkshopFilesResult_t_119().m_rgScore) >= 200 );

static void RemoteStorageEnumerateWorkshopFilesResult_t_125_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageEnumerateWorkshopFilesResult_t_125 *d = (u_RemoteStorageEnumerateWorkshopFilesResult_t_125 *)dst;
    const w_RemoteStorageEnumerateWorkshopFilesResult_t_125 *s = (const w_RemoteStorageEnumerateWorkshopFilesResult_t_125 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgScore = s->m_rgScore;
    d->m_nAppId = s->m_nAppId;
    d->m_unStartIndex = s->m_unStartIndex;
}
#ifdef __x86_64__
w64_RemoteStorageEnumerateWorkshopFilesResult_t_125::operator u64_RemoteStorageEnumerateWorkshopFilesResult_t_125() const
{
    u64_RemoteStorageEnumerateWorkshopFilesResult_t_125 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_125_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageEnumerateWorkshopFilesResult_t_125_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageEnumerateWorkshopFilesResult_t_125 *d = (w_RemoteStorageEnumerateWorkshopFilesResult_t_125 *)dst;
    const u_RemoteStorageEnumerateWorkshopFilesResult_t_125 *s = (const u_RemoteStorageEnumerateWorkshopFilesResult_t_125 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgScore = s->m_rgScore;
    d->m_nAppId = s->m_nAppId;
    d->m_unStartIndex = s->m_unStartIndex;
}
#ifdef __x86_64__
u64_RemoteStorageEnumerateWorkshopFilesResult_t_125::operator w64_RemoteStorageEnumerateWorkshopFilesResult_t_125() const
{
    w64_RemoteStorageEnumerateWorkshopFilesResult_t_125 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_125_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageEnumerateWorkshopFilesResult_t_125::operator u32_RemoteStorageEnumerateWorkshopFilesResult_t_125() const
{
    u32_RemoteStorageEnumerateWorkshopFilesResult_t_125 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_125_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageEnumerateWorkshopFilesResult_t_125::operator w32_RemoteStorageEnumerateWorkshopFilesResult_t_125() const
{
    w32_RemoteStorageEnumerateWorkshopFilesResult_t_125 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_125_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageEnumerateWorkshopFilesResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageEnumerateWorkshopFilesResult_t_123 *d = (u_RemoteStorageEnumerateWorkshopFilesResult_t_123 *)dst;
    const w_RemoteStorageEnumerateWorkshopFilesResult_t_123 *s = (const w_RemoteStorageEnumerateWorkshopFilesResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgScore = s->m_rgScore;
}
#ifdef __x86_64__
w64_RemoteStorageEnumerateWorkshopFilesResult_t_123::operator u64_RemoteStorageEnumerateWorkshopFilesResult_t_123() const
{
    u64_RemoteStorageEnumerateWorkshopFilesResult_t_123 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageEnumerateWorkshopFilesResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageEnumerateWorkshopFilesResult_t_123 *d = (w_RemoteStorageEnumerateWorkshopFilesResult_t_123 *)dst;
    const u_RemoteStorageEnumerateWorkshopFilesResult_t_123 *s = (const u_RemoteStorageEnumerateWorkshopFilesResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgScore = s->m_rgScore;
}
#ifdef __x86_64__
u64_RemoteStorageEnumerateWorkshopFilesResult_t_123::operator w64_RemoteStorageEnumerateWorkshopFilesResult_t_123() const
{
    w64_RemoteStorageEnumerateWorkshopFilesResult_t_123 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageEnumerateWorkshopFilesResult_t_123::operator u32_RemoteStorageEnumerateWorkshopFilesResult_t_123() const
{
    u32_RemoteStorageEnumerateWorkshopFilesResult_t_123 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageEnumerateWorkshopFilesResult_t_123::operator w32_RemoteStorageEnumerateWorkshopFilesResult_t_123() const
{
    w32_RemoteStorageEnumerateWorkshopFilesResult_t_123 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageEnumerateWorkshopFilesResult_t_119_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageEnumerateWorkshopFilesResult_t_119 *d = (u_RemoteStorageEnumerateWorkshopFilesResult_t_119 *)dst;
    const w_RemoteStorageEnumerateWorkshopFilesResult_t_119 *s = (const w_RemoteStorageEnumerateWorkshopFilesResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgScore = s->m_rgScore;
}
#ifdef __i386__
w32_RemoteStorageEnumerateWorkshopFilesResult_t_119::operator u32_RemoteStorageEnumerateWorkshopFilesResult_t_119() const
{
    u32_RemoteStorageEnumerateWorkshopFilesResult_t_119 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_119_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageEnumerateWorkshopFilesResult_t_119_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageEnumerateWorkshopFilesResult_t_119 *d = (w_RemoteStorageEnumerateWorkshopFilesResult_t_119 *)dst;
    const u_RemoteStorageEnumerateWorkshopFilesResult_t_119 *s = (const u_RemoteStorageEnumerateWorkshopFilesResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nResultsReturned = s->m_nResultsReturned;
    d->m_nTotalResultCount = s->m_nTotalResultCount;
    d->m_rgPublishedFileId = s->m_rgPublishedFileId;
    d->m_rgScore = s->m_rgScore;
}
#ifdef __i386__
u32_RemoteStorageEnumerateWorkshopFilesResult_t_119::operator w32_RemoteStorageEnumerateWorkshopFilesResult_t_119() const
{
    w32_RemoteStorageEnumerateWorkshopFilesResult_t_119 ret;
    RemoteStorageEnumerateWorkshopFilesResult_t_119_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_128x) >= 280 );
C_ASSERT( offsetof(w64_RemoteStorageFileShareResult_t_128x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_128x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageFileShareResult_t_128x, m_hFile) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_128x().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageFileShareResult_t_128x, m_rgchFilename) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_128x().m_rgchFilename) >= 260 );

C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_128x) >= 272 );
C_ASSERT( offsetof(u64_RemoteStorageFileShareResult_t_128x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_128x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageFileShareResult_t_128x, m_hFile) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_128x().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageFileShareResult_t_128x, m_rgchFilename) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_128x().m_rgchFilename) >= 260 );

C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_128x) >= 280 );
C_ASSERT( offsetof(w32_RemoteStorageFileShareResult_t_128x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_128x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageFileShareResult_t_128x, m_hFile) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_128x().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageFileShareResult_t_128x, m_rgchFilename) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_128x().m_rgchFilename) >= 260 );

C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_128x) >= 272 );
C_ASSERT( offsetof(u32_RemoteStorageFileShareResult_t_128x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_128x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageFileShareResult_t_128x, m_hFile) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_128x().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageFileShareResult_t_128x, m_rgchFilename) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_128x().m_rgchFilename) >= 260 );

C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_123) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageFileShareResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageFileShareResult_t_123, m_hFile) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_123().m_hFile) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_123) >= 12 );
C_ASSERT( offsetof(u64_RemoteStorageFileShareResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageFileShareResult_t_123, m_hFile) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_123().m_hFile) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_123) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageFileShareResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageFileShareResult_t_123, m_hFile) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_123().m_hFile) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_123) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageFileShareResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageFileShareResult_t_123, m_hFile) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_123().m_hFile) >= 8 );

C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_111x) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageFileShareResult_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageFileShareResult_t_111x, m_hFile) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageFileShareResult_t_111x().m_hFile) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_111x) >= 16 );
C_ASSERT( offsetof(u64_RemoteStorageFileShareResult_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageFileShareResult_t_111x, m_hFile) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageFileShareResult_t_111x().m_hFile) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_111x) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageFileShareResult_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageFileShareResult_t_111x, m_hFile) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageFileShareResult_t_111x().m_hFile) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_111x) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageFileShareResult_t_111x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_111x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageFileShareResult_t_111x, m_hFile) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageFileShareResult_t_111x().m_hFile) >= 8 );

static void RemoteStorageFileShareResult_t_128x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageFileShareResult_t_128x *d = (u_RemoteStorageFileShareResult_t_128x *)dst;
    const w_RemoteStorageFileShareResult_t_128x *s = (const w_RemoteStorageFileShareResult_t_128x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
    d->m_rgchFilename = s->m_rgchFilename;
}
#ifdef __x86_64__
w64_RemoteStorageFileShareResult_t_128x::operator u64_RemoteStorageFileShareResult_t_128x() const
{
    u64_RemoteStorageFileShareResult_t_128x ret;
    RemoteStorageFileShareResult_t_128x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageFileShareResult_t_128x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageFileShareResult_t_128x *d = (w_RemoteStorageFileShareResult_t_128x *)dst;
    const u_RemoteStorageFileShareResult_t_128x *s = (const u_RemoteStorageFileShareResult_t_128x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
    d->m_rgchFilename = s->m_rgchFilename;
}
#ifdef __x86_64__
u64_RemoteStorageFileShareResult_t_128x::operator w64_RemoteStorageFileShareResult_t_128x() const
{
    w64_RemoteStorageFileShareResult_t_128x ret;
    RemoteStorageFileShareResult_t_128x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageFileShareResult_t_128x::operator u32_RemoteStorageFileShareResult_t_128x() const
{
    u32_RemoteStorageFileShareResult_t_128x ret;
    RemoteStorageFileShareResult_t_128x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageFileShareResult_t_128x::operator w32_RemoteStorageFileShareResult_t_128x() const
{
    w32_RemoteStorageFileShareResult_t_128x ret;
    RemoteStorageFileShareResult_t_128x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageFileShareResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageFileShareResult_t_123 *d = (u_RemoteStorageFileShareResult_t_123 *)dst;
    const w_RemoteStorageFileShareResult_t_123 *s = (const w_RemoteStorageFileShareResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
}
#ifdef __x86_64__
w64_RemoteStorageFileShareResult_t_123::operator u64_RemoteStorageFileShareResult_t_123() const
{
    u64_RemoteStorageFileShareResult_t_123 ret;
    RemoteStorageFileShareResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageFileShareResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageFileShareResult_t_123 *d = (w_RemoteStorageFileShareResult_t_123 *)dst;
    const u_RemoteStorageFileShareResult_t_123 *s = (const u_RemoteStorageFileShareResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
}
#ifdef __x86_64__
u64_RemoteStorageFileShareResult_t_123::operator w64_RemoteStorageFileShareResult_t_123() const
{
    w64_RemoteStorageFileShareResult_t_123 ret;
    RemoteStorageFileShareResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageFileShareResult_t_123::operator u32_RemoteStorageFileShareResult_t_123() const
{
    u32_RemoteStorageFileShareResult_t_123 ret;
    RemoteStorageFileShareResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageFileShareResult_t_123::operator w32_RemoteStorageFileShareResult_t_123() const
{
    w32_RemoteStorageFileShareResult_t_123 ret;
    RemoteStorageFileShareResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageFileShareResult_t_111x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageFileShareResult_t_111x *d = (u_RemoteStorageFileShareResult_t_111x *)dst;
    const w_RemoteStorageFileShareResult_t_111x *s = (const w_RemoteStorageFileShareResult_t_111x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
}
#ifdef __i386__
w32_RemoteStorageFileShareResult_t_111x::operator u32_RemoteStorageFileShareResult_t_111x() const
{
    u32_RemoteStorageFileShareResult_t_111x ret;
    RemoteStorageFileShareResult_t_111x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageFileShareResult_t_111x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageFileShareResult_t_111x *d = (w_RemoteStorageFileShareResult_t_111x *)dst;
    const u_RemoteStorageFileShareResult_t_111x *s = (const u_RemoteStorageFileShareResult_t_111x *)src;

    d->m_eResult = s->m_eResult;
    d->m_hFile = s->m_hFile;
}
#ifdef __i386__
u32_RemoteStorageFileShareResult_t_111x::operator w32_RemoteStorageFileShareResult_t_111x() const
{
    w32_RemoteStorageFileShareResult_t_111x ret;
    RemoteStorageFileShareResult_t_111x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126) >= 9760 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_hFile) == 8160 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bBanned) == 8196 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchURL) == 9492 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eFileType) == 9748 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eFileType) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bAcceptedForUse) == 9752 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bAcceptedForUse) >= 1 );

C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126) >= 9748 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nCreatorAppID) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nConsumerAppID) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchTitle) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchDescription) == 149 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_hFile) == 8152 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_hPreviewFile) == 8160 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_ulSteamIDOwner) == 8168 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rtimeCreated) == 8176 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rtimeUpdated) == 8180 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eVisibility) == 8184 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bBanned) == 8188 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchTags) == 8189 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bTagsTruncated) == 9214 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_pchFileName) == 9215 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nFileSize) == 9476 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nPreviewFileSize) == 9480 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchURL) == 9484 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eFileType) == 9740 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eFileType) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bAcceptedForUse) == 9744 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bAcceptedForUse) >= 1 );

C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126) >= 9760 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_hFile) == 8160 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bBanned) == 8196 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchURL) == 9492 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eFileType) == 9748 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eFileType) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bAcceptedForUse) == 9752 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bAcceptedForUse) >= 1 );

C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126) >= 9748 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nCreatorAppID) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nConsumerAppID) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchTitle) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchDescription) == 149 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_hFile) == 8152 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_hPreviewFile) == 8160 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_ulSteamIDOwner) == 8168 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rtimeCreated) == 8176 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rtimeUpdated) == 8180 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eVisibility) == 8184 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bBanned) == 8188 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchTags) == 8189 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bTagsTruncated) == 9214 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_pchFileName) == 9215 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nFileSize) == 9476 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_nPreviewFileSize) == 9480 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_rgchURL) == 9484 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_eFileType) == 9740 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_eFileType) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126, m_bAcceptedForUse) == 9744 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_126().m_bAcceptedForUse) >= 1 );

C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123) >= 9752 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_hFile) == 8160 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_bBanned) == 8196 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchURL) == 9492 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eFileType) == 9748 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eFileType) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123) >= 9744 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nCreatorAppID) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nConsumerAppID) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchTitle) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchDescription) == 149 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_hFile) == 8152 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_hPreviewFile) == 8160 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_ulSteamIDOwner) == 8168 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rtimeCreated) == 8176 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rtimeUpdated) == 8180 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eVisibility) == 8184 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_bBanned) == 8188 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchTags) == 8189 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_bTagsTruncated) == 9214 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_pchFileName) == 9215 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nFileSize) == 9476 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nPreviewFileSize) == 9480 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchURL) == 9484 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eFileType) == 9740 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eFileType) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123) >= 9752 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_hFile) == 8160 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_bBanned) == 8196 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchURL) == 9492 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eFileType) == 9748 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eFileType) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123) >= 9744 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nCreatorAppID) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nConsumerAppID) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchTitle) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchDescription) == 149 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_hFile) == 8152 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_hPreviewFile) == 8160 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_ulSteamIDOwner) == 8168 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rtimeCreated) == 8176 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rtimeUpdated) == 8180 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eVisibility) == 8184 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_bBanned) == 8188 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchTags) == 8189 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_bTagsTruncated) == 9214 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_pchFileName) == 9215 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nFileSize) == 9476 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_nPreviewFileSize) == 9480 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_rgchURL) == 9484 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123, m_eFileType) == 9740 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_123().m_eFileType) >= 4 );

C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x) >= 9752 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_hFile) == 8160 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_bBanned) == 8196 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchURL) == 9492 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eFileType) == 9748 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eFileType) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x) >= 9752 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_hFile) == 8160 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eVisibility) == 8192 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_bBanned) == 8196 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchTags) == 8197 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_pchFileName) == 9223 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nFileSize) == 9484 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchURL) == 9492 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eFileType) == 9748 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eFileType) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x) >= 9752 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_hFile) == 8160 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_bBanned) == 8196 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchURL) == 9492 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchURL) >= 256 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eFileType) == 9748 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eFileType) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x) >= 9744 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nCreatorAppID) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nConsumerAppID) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchTitle) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchDescription) == 149 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_hFile) == 8152 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_hPreviewFile) == 8160 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_ulSteamIDOwner) == 8168 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rtimeCreated) == 8176 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rtimeUpdated) == 8180 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eVisibility) == 8184 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_bBanned) == 8188 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchTags) == 8189 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_bTagsTruncated) == 9214 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_pchFileName) == 9215 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nFileSize) == 9476 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_nPreviewFileSize) == 9480 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_rgchURL) == 9484 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_rgchURL) >= 256 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x, m_eFileType) == 9740 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119x().m_eFileType) >= 4 );

C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119) >= 9752 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_hFile) == 8160 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_bBanned) == 8196 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchURL) == 9492 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchURL) >= 256 );

C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119) >= 9752 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_hFile) == 8160 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_eVisibility) == 8192 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_bBanned) == 8196 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchTags) == 8197 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_pchFileName) == 9223 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nFileSize) == 9484 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchURL) == 9492 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchURL) >= 256 );

C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119) >= 9752 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_hFile) == 8160 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_bBanned) == 8196 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchURL) == 9492 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchURL) >= 256 );

C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119) >= 9740 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nCreatorAppID) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nConsumerAppID) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchTitle) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchDescription) == 149 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_hFile) == 8152 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_hPreviewFile) == 8160 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_ulSteamIDOwner) == 8168 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rtimeCreated) == 8176 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rtimeUpdated) == 8180 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_eVisibility) == 8184 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_bBanned) == 8188 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchTags) == 8189 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_bTagsTruncated) == 9214 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_pchFileName) == 9215 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nFileSize) == 9476 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_nPreviewFileSize) == 9480 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_nPreviewFileSize) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119, m_rgchURL) == 9484 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_119().m_rgchURL) >= 256 );

C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118) >= 9496 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_hFile) == 8160 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_bBanned) == 8196 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nPreviewFileSize) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118) >= 9496 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_hFile) == 8160 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_eVisibility) == 8192 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_bBanned) == 8196 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchTags) == 8197 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_pchFileName) == 9223 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nFileSize) == 9484 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nPreviewFileSize) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118) >= 9496 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_hFile) == 8160 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_hPreviewFile) == 8168 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_ulSteamIDOwner) == 8176 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rtimeCreated) == 8184 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rtimeUpdated) == 8188 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_eVisibility) == 8192 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_bBanned) == 8196 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchTags) == 8197 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_bTagsTruncated) == 9222 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_pchFileName) == 9223 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_pchFileName) >= 260 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nFileSize) == 9484 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nFileSize) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nPreviewFileSize) == 9488 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nPreviewFileSize) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118) >= 9484 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nCreatorAppID) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nConsumerAppID) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchTitle) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchDescription) == 149 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchDescription) >= 8000 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_hFile) == 8152 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_hPreviewFile) == 8160 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_ulSteamIDOwner) == 8168 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rtimeCreated) == 8176 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rtimeUpdated) == 8180 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_eVisibility) == 8184 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_bBanned) == 8188 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_rgchTags) == 8189 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_bTagsTruncated) == 9214 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_pchFileName) == 9215 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_pchFileName) >= 260 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nFileSize) == 9476 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nFileSize) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118, m_nPreviewFileSize) == 9480 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_118().m_nPreviewFileSize) >= 4 );

C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x) >= 1744 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchDescription) >= 257 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_hFile) == 416 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_hFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_hPreviewFile) == 424 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_ulSteamIDOwner) == 432 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rtimeCreated) == 440 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rtimeUpdated) == 444 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_eVisibility) == 448 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_bBanned) == 452 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_bBanned) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchTags) == 453 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_bTagsTruncated) == 1478 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_pchFileName) == 1479 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_pchFileName) >= 260 );

C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x) >= 1744 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchDescription) >= 257 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_hFile) == 416 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_hFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_hPreviewFile) == 424 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_ulSteamIDOwner) == 432 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rtimeCreated) == 440 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rtimeUpdated) == 444 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_eVisibility) == 448 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_bBanned) == 452 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_bBanned) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchTags) == 453 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_bTagsTruncated) == 1478 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_pchFileName) == 1479 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_pchFileName) >= 260 );

C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x) >= 1744 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nCreatorAppID) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nConsumerAppID) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchTitle) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchDescription) == 153 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchDescription) >= 257 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_hFile) == 416 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_hFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_hPreviewFile) == 424 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_ulSteamIDOwner) == 432 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rtimeCreated) == 440 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rtimeUpdated) == 444 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_eVisibility) == 448 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_bBanned) == 452 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_bBanned) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchTags) == 453 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_bTagsTruncated) == 1478 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_pchFileName) == 1479 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_pchFileName) >= 260 );

C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x) >= 1732 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nCreatorAppID) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nCreatorAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_nConsumerAppID) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_nConsumerAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchTitle) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchTitle) >= 129 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchDescription) == 149 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchDescription) >= 257 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_hFile) == 408 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_hFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_hPreviewFile) == 416 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_hPreviewFile) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_ulSteamIDOwner) == 424 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_ulSteamIDOwner) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rtimeCreated) == 432 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rtimeCreated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rtimeUpdated) == 436 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rtimeUpdated) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_eVisibility) == 440 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_bBanned) == 444 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_bBanned) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_rgchTags) == 445 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_rgchTags) >= 1025 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_bTagsTruncated) == 1470 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_bTagsTruncated) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x, m_pchFileName) == 1471 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedFileDetailsResult_t_116x().m_pchFileName) >= 260 );

static void RemoteStorageGetPublishedFileDetailsResult_t_126_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageGetPublishedFileDetailsResult_t_126 *d = (u_RemoteStorageGetPublishedFileDetailsResult_t_126 *)dst;
    const w_RemoteStorageGetPublishedFileDetailsResult_t_126 *s = (const w_RemoteStorageGetPublishedFileDetailsResult_t_126 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_eFileType = s->m_eFileType;
    d->m_bAcceptedForUse = s->m_bAcceptedForUse;
}
#ifdef __x86_64__
w64_RemoteStorageGetPublishedFileDetailsResult_t_126::operator u64_RemoteStorageGetPublishedFileDetailsResult_t_126() const
{
    u64_RemoteStorageGetPublishedFileDetailsResult_t_126 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_126_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageGetPublishedFileDetailsResult_t_126_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageGetPublishedFileDetailsResult_t_126 *d = (w_RemoteStorageGetPublishedFileDetailsResult_t_126 *)dst;
    const u_RemoteStorageGetPublishedFileDetailsResult_t_126 *s = (const u_RemoteStorageGetPublishedFileDetailsResult_t_126 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_eFileType = s->m_eFileType;
    d->m_bAcceptedForUse = s->m_bAcceptedForUse;
}
#ifdef __x86_64__
u64_RemoteStorageGetPublishedFileDetailsResult_t_126::operator w64_RemoteStorageGetPublishedFileDetailsResult_t_126() const
{
    w64_RemoteStorageGetPublishedFileDetailsResult_t_126 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_126_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageGetPublishedFileDetailsResult_t_126::operator u32_RemoteStorageGetPublishedFileDetailsResult_t_126() const
{
    u32_RemoteStorageGetPublishedFileDetailsResult_t_126 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_126_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageGetPublishedFileDetailsResult_t_126::operator w32_RemoteStorageGetPublishedFileDetailsResult_t_126() const
{
    w32_RemoteStorageGetPublishedFileDetailsResult_t_126 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_126_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageGetPublishedFileDetailsResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageGetPublishedFileDetailsResult_t_123 *d = (u_RemoteStorageGetPublishedFileDetailsResult_t_123 *)dst;
    const w_RemoteStorageGetPublishedFileDetailsResult_t_123 *s = (const w_RemoteStorageGetPublishedFileDetailsResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_eFileType = s->m_eFileType;
}
#ifdef __x86_64__
w64_RemoteStorageGetPublishedFileDetailsResult_t_123::operator u64_RemoteStorageGetPublishedFileDetailsResult_t_123() const
{
    u64_RemoteStorageGetPublishedFileDetailsResult_t_123 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageGetPublishedFileDetailsResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageGetPublishedFileDetailsResult_t_123 *d = (w_RemoteStorageGetPublishedFileDetailsResult_t_123 *)dst;
    const u_RemoteStorageGetPublishedFileDetailsResult_t_123 *s = (const u_RemoteStorageGetPublishedFileDetailsResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_eFileType = s->m_eFileType;
}
#ifdef __x86_64__
u64_RemoteStorageGetPublishedFileDetailsResult_t_123::operator w64_RemoteStorageGetPublishedFileDetailsResult_t_123() const
{
    w64_RemoteStorageGetPublishedFileDetailsResult_t_123 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageGetPublishedFileDetailsResult_t_123::operator u32_RemoteStorageGetPublishedFileDetailsResult_t_123() const
{
    u32_RemoteStorageGetPublishedFileDetailsResult_t_123 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageGetPublishedFileDetailsResult_t_123::operator w32_RemoteStorageGetPublishedFileDetailsResult_t_123() const
{
    w32_RemoteStorageGetPublishedFileDetailsResult_t_123 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageGetPublishedFileDetailsResult_t_119x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageGetPublishedFileDetailsResult_t_119x *d = (u_RemoteStorageGetPublishedFileDetailsResult_t_119x *)dst;
    const w_RemoteStorageGetPublishedFileDetailsResult_t_119x *s = (const w_RemoteStorageGetPublishedFileDetailsResult_t_119x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_eFileType = s->m_eFileType;
}
#ifdef __i386__
w32_RemoteStorageGetPublishedFileDetailsResult_t_119x::operator u32_RemoteStorageGetPublishedFileDetailsResult_t_119x() const
{
    u32_RemoteStorageGetPublishedFileDetailsResult_t_119x ret;
    RemoteStorageGetPublishedFileDetailsResult_t_119x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageGetPublishedFileDetailsResult_t_119x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageGetPublishedFileDetailsResult_t_119x *d = (w_RemoteStorageGetPublishedFileDetailsResult_t_119x *)dst;
    const u_RemoteStorageGetPublishedFileDetailsResult_t_119x *s = (const u_RemoteStorageGetPublishedFileDetailsResult_t_119x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
    d->m_eFileType = s->m_eFileType;
}
#ifdef __i386__
u32_RemoteStorageGetPublishedFileDetailsResult_t_119x::operator w32_RemoteStorageGetPublishedFileDetailsResult_t_119x() const
{
    w32_RemoteStorageGetPublishedFileDetailsResult_t_119x ret;
    RemoteStorageGetPublishedFileDetailsResult_t_119x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageGetPublishedFileDetailsResult_t_119_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageGetPublishedFileDetailsResult_t_119 *d = (u_RemoteStorageGetPublishedFileDetailsResult_t_119 *)dst;
    const w_RemoteStorageGetPublishedFileDetailsResult_t_119 *s = (const w_RemoteStorageGetPublishedFileDetailsResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
}
#ifdef __i386__
w32_RemoteStorageGetPublishedFileDetailsResult_t_119::operator u32_RemoteStorageGetPublishedFileDetailsResult_t_119() const
{
    u32_RemoteStorageGetPublishedFileDetailsResult_t_119 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_119_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageGetPublishedFileDetailsResult_t_119_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageGetPublishedFileDetailsResult_t_119 *d = (w_RemoteStorageGetPublishedFileDetailsResult_t_119 *)dst;
    const u_RemoteStorageGetPublishedFileDetailsResult_t_119 *s = (const u_RemoteStorageGetPublishedFileDetailsResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
    d->m_rgchURL = s->m_rgchURL;
}
#ifdef __i386__
u32_RemoteStorageGetPublishedFileDetailsResult_t_119::operator w32_RemoteStorageGetPublishedFileDetailsResult_t_119() const
{
    w32_RemoteStorageGetPublishedFileDetailsResult_t_119 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_119_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageGetPublishedFileDetailsResult_t_118_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageGetPublishedFileDetailsResult_t_118 *d = (u_RemoteStorageGetPublishedFileDetailsResult_t_118 *)dst;
    const w_RemoteStorageGetPublishedFileDetailsResult_t_118 *s = (const w_RemoteStorageGetPublishedFileDetailsResult_t_118 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
}
#ifdef __i386__
w32_RemoteStorageGetPublishedFileDetailsResult_t_118::operator u32_RemoteStorageGetPublishedFileDetailsResult_t_118() const
{
    u32_RemoteStorageGetPublishedFileDetailsResult_t_118 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_118_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageGetPublishedFileDetailsResult_t_118_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageGetPublishedFileDetailsResult_t_118 *d = (w_RemoteStorageGetPublishedFileDetailsResult_t_118 *)dst;
    const u_RemoteStorageGetPublishedFileDetailsResult_t_118 *s = (const u_RemoteStorageGetPublishedFileDetailsResult_t_118 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
    d->m_nFileSize = s->m_nFileSize;
    d->m_nPreviewFileSize = s->m_nPreviewFileSize;
}
#ifdef __i386__
u32_RemoteStorageGetPublishedFileDetailsResult_t_118::operator w32_RemoteStorageGetPublishedFileDetailsResult_t_118() const
{
    w32_RemoteStorageGetPublishedFileDetailsResult_t_118 ret;
    RemoteStorageGetPublishedFileDetailsResult_t_118_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageGetPublishedFileDetailsResult_t_116x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageGetPublishedFileDetailsResult_t_116x *d = (u_RemoteStorageGetPublishedFileDetailsResult_t_116x *)dst;
    const w_RemoteStorageGetPublishedFileDetailsResult_t_116x *s = (const w_RemoteStorageGetPublishedFileDetailsResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
}
#ifdef __i386__
w32_RemoteStorageGetPublishedFileDetailsResult_t_116x::operator u32_RemoteStorageGetPublishedFileDetailsResult_t_116x() const
{
    u32_RemoteStorageGetPublishedFileDetailsResult_t_116x ret;
    RemoteStorageGetPublishedFileDetailsResult_t_116x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageGetPublishedFileDetailsResult_t_116x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageGetPublishedFileDetailsResult_t_116x *d = (w_RemoteStorageGetPublishedFileDetailsResult_t_116x *)dst;
    const u_RemoteStorageGetPublishedFileDetailsResult_t_116x *s = (const u_RemoteStorageGetPublishedFileDetailsResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nCreatorAppID = s->m_nCreatorAppID;
    d->m_nConsumerAppID = s->m_nConsumerAppID;
    d->m_rgchTitle = s->m_rgchTitle;
    d->m_rgchDescription = s->m_rgchDescription;
    d->m_hFile = s->m_hFile;
    d->m_hPreviewFile = s->m_hPreviewFile;
    d->m_ulSteamIDOwner = s->m_ulSteamIDOwner;
    d->m_rtimeCreated = s->m_rtimeCreated;
    d->m_rtimeUpdated = s->m_rtimeUpdated;
    d->m_eVisibility = s->m_eVisibility;
    d->m_bBanned = s->m_bBanned;
    d->m_rgchTags = s->m_rgchTags;
    d->m_bTagsTruncated = s->m_bTagsTruncated;
    d->m_pchFileName = s->m_pchFileName;
}
#ifdef __i386__
u32_RemoteStorageGetPublishedFileDetailsResult_t_116x::operator w32_RemoteStorageGetPublishedFileDetailsResult_t_116x() const
{
    w32_RemoteStorageGetPublishedFileDetailsResult_t_116x ret;
    RemoteStorageGetPublishedFileDetailsResult_t_116x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123) >= 32 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_unPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nVotesFor) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nVotesFor) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nVotesAgainst) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nVotesAgainst) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nReports) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nReports) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_fScore) == 28 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_fScore) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123) >= 28 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_unPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nVotesFor) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nVotesFor) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nVotesAgainst) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nVotesAgainst) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nReports) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nReports) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_fScore) == 24 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_fScore) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123) >= 32 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_unPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nVotesFor) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nVotesFor) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nVotesAgainst) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nVotesAgainst) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nReports) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nReports) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_fScore) == 28 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_fScore) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123) >= 28 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_unPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nVotesFor) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nVotesFor) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nVotesAgainst) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nVotesAgainst) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_nReports) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_nReports) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123, m_fScore) == 24 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123().m_fScore) >= 4 );

C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119) >= 32 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_unPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nVotesFor) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nVotesFor) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nVotesAgainst) == 20 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nVotesAgainst) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nReports) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nReports) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_fScore) == 28 );
C_ASSERT( sizeof(w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_fScore) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119) >= 32 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_unPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nVotesFor) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nVotesFor) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nVotesAgainst) == 20 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nVotesAgainst) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nReports) == 24 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nReports) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_fScore) == 28 );
C_ASSERT( sizeof(u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_fScore) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119) >= 32 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_unPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nVotesFor) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nVotesFor) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nVotesAgainst) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nVotesAgainst) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nReports) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nReports) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_fScore) == 28 );
C_ASSERT( sizeof(w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_fScore) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119) >= 28 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_unPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nVotesFor) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nVotesFor) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nVotesAgainst) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nVotesAgainst) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_nReports) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_nReports) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119, m_fScore) == 24 );
C_ASSERT( sizeof(u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119().m_fScore) >= 4 );

static void RemoteStorageGetPublishedItemVoteDetailsResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 *d = (u_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 *)dst;
    const w_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 *s = (const w_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_unPublishedFileId = s->m_unPublishedFileId;
    d->m_nVotesFor = s->m_nVotesFor;
    d->m_nVotesAgainst = s->m_nVotesAgainst;
    d->m_nReports = s->m_nReports;
    d->m_fScore = s->m_fScore;
}
#ifdef __x86_64__
w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123::operator u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123() const
{
    u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 ret;
    RemoteStorageGetPublishedItemVoteDetailsResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageGetPublishedItemVoteDetailsResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 *d = (w_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 *)dst;
    const u_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 *s = (const u_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_unPublishedFileId = s->m_unPublishedFileId;
    d->m_nVotesFor = s->m_nVotesFor;
    d->m_nVotesAgainst = s->m_nVotesAgainst;
    d->m_nReports = s->m_nReports;
    d->m_fScore = s->m_fScore;
}
#ifdef __x86_64__
u64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123::operator w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123() const
{
    w64_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 ret;
    RemoteStorageGetPublishedItemVoteDetailsResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123::operator u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123() const
{
    u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 ret;
    RemoteStorageGetPublishedItemVoteDetailsResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123::operator w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123() const
{
    w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_123 ret;
    RemoteStorageGetPublishedItemVoteDetailsResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageGetPublishedItemVoteDetailsResult_t_119_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 *d = (u_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 *)dst;
    const w_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 *s = (const w_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_unPublishedFileId = s->m_unPublishedFileId;
    d->m_nVotesFor = s->m_nVotesFor;
    d->m_nVotesAgainst = s->m_nVotesAgainst;
    d->m_nReports = s->m_nReports;
    d->m_fScore = s->m_fScore;
}
#ifdef __i386__
w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119::operator u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119() const
{
    u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 ret;
    RemoteStorageGetPublishedItemVoteDetailsResult_t_119_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageGetPublishedItemVoteDetailsResult_t_119_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 *d = (w_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 *)dst;
    const u_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 *s = (const u_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_unPublishedFileId = s->m_unPublishedFileId;
    d->m_nVotesFor = s->m_nVotesFor;
    d->m_nVotesAgainst = s->m_nVotesAgainst;
    d->m_nReports = s->m_nReports;
    d->m_fScore = s->m_fScore;
}
#ifdef __i386__
u32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119::operator w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119() const
{
    w32_RemoteStorageGetPublishedItemVoteDetailsResult_t_119 ret;
    RemoteStorageGetPublishedItemVoteDetailsResult_t_119_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_125) >= 24 );
C_ASSERT( offsetof(w64_RemoteStoragePublishFileResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStoragePublishFileResult_t_125, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_125().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStoragePublishFileResult_t_125, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 16 );
C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_125().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_125) >= 16 );
C_ASSERT( offsetof(u64_RemoteStoragePublishFileResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStoragePublishFileResult_t_125, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_125().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStoragePublishFileResult_t_125, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 12 );
C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_125().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_125) >= 24 );
C_ASSERT( offsetof(w32_RemoteStoragePublishFileResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStoragePublishFileResult_t_125, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_125().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStoragePublishFileResult_t_125, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 16 );
C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_125().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_125) >= 16 );
C_ASSERT( offsetof(u32_RemoteStoragePublishFileResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStoragePublishFileResult_t_125, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_125().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStoragePublishFileResult_t_125, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 12 );
C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_125().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w64_RemoteStoragePublishFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStoragePublishFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u64_RemoteStoragePublishFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStoragePublishFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w32_RemoteStoragePublishFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStoragePublishFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u32_RemoteStoragePublishFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStoragePublishFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_116x) >= 16 );
C_ASSERT( offsetof(w64_RemoteStoragePublishFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStoragePublishFileResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStoragePublishFileResult_t_116x().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_116x) >= 16 );
C_ASSERT( offsetof(u64_RemoteStoragePublishFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStoragePublishFileResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStoragePublishFileResult_t_116x().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_116x) >= 16 );
C_ASSERT( offsetof(w32_RemoteStoragePublishFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStoragePublishFileResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStoragePublishFileResult_t_116x().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_116x) >= 12 );
C_ASSERT( offsetof(u32_RemoteStoragePublishFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStoragePublishFileResult_t_116x, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStoragePublishFileResult_t_116x().m_nPublishedFileId) >= 8 );

static void RemoteStoragePublishFileResult_t_125_u_from_w(void *dst, const void *src)
{
    u_RemoteStoragePublishFileResult_t_125 *d = (u_RemoteStoragePublishFileResult_t_125 *)dst;
    const w_RemoteStoragePublishFileResult_t_125 *s = (const w_RemoteStoragePublishFileResult_t_125 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_bUserNeedsToAcceptWorkshopLegalAgreement = s->m_bUserNeedsToAcceptWorkshopLegalAgreement;
}
#ifdef __x86_64__
w64_RemoteStoragePublishFileResult_t_125::operator u64_RemoteStoragePublishFileResult_t_125() const
{
    u64_RemoteStoragePublishFileResult_t_125 ret;
    RemoteStoragePublishFileResult_t_125_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStoragePublishFileResult_t_125_w_from_u(void *dst, const void *src)
{
    w_RemoteStoragePublishFileResult_t_125 *d = (w_RemoteStoragePublishFileResult_t_125 *)dst;
    const u_RemoteStoragePublishFileResult_t_125 *s = (const u_RemoteStoragePublishFileResult_t_125 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_bUserNeedsToAcceptWorkshopLegalAgreement = s->m_bUserNeedsToAcceptWorkshopLegalAgreement;
}
#ifdef __x86_64__
u64_RemoteStoragePublishFileResult_t_125::operator w64_RemoteStoragePublishFileResult_t_125() const
{
    w64_RemoteStoragePublishFileResult_t_125 ret;
    RemoteStoragePublishFileResult_t_125_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStoragePublishFileResult_t_125::operator u32_RemoteStoragePublishFileResult_t_125() const
{
    u32_RemoteStoragePublishFileResult_t_125 ret;
    RemoteStoragePublishFileResult_t_125_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStoragePublishFileResult_t_125::operator w32_RemoteStoragePublishFileResult_t_125() const
{
    w32_RemoteStoragePublishFileResult_t_125 ret;
    RemoteStoragePublishFileResult_t_125_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStoragePublishFileResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStoragePublishFileResult_t_123 *d = (u_RemoteStoragePublishFileResult_t_123 *)dst;
    const w_RemoteStoragePublishFileResult_t_123 *s = (const w_RemoteStoragePublishFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
w64_RemoteStoragePublishFileResult_t_123::operator u64_RemoteStoragePublishFileResult_t_123() const
{
    u64_RemoteStoragePublishFileResult_t_123 ret;
    RemoteStoragePublishFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStoragePublishFileResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStoragePublishFileResult_t_123 *d = (w_RemoteStoragePublishFileResult_t_123 *)dst;
    const u_RemoteStoragePublishFileResult_t_123 *s = (const u_RemoteStoragePublishFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
u64_RemoteStoragePublishFileResult_t_123::operator w64_RemoteStoragePublishFileResult_t_123() const
{
    w64_RemoteStoragePublishFileResult_t_123 ret;
    RemoteStoragePublishFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStoragePublishFileResult_t_123::operator u32_RemoteStoragePublishFileResult_t_123() const
{
    u32_RemoteStoragePublishFileResult_t_123 ret;
    RemoteStoragePublishFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStoragePublishFileResult_t_123::operator w32_RemoteStoragePublishFileResult_t_123() const
{
    w32_RemoteStoragePublishFileResult_t_123 ret;
    RemoteStoragePublishFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStoragePublishFileResult_t_116x_u_from_w(void *dst, const void *src)
{
    u_RemoteStoragePublishFileResult_t_116x *d = (u_RemoteStoragePublishFileResult_t_116x *)dst;
    const w_RemoteStoragePublishFileResult_t_116x *s = (const w_RemoteStoragePublishFileResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __i386__
w32_RemoteStoragePublishFileResult_t_116x::operator u32_RemoteStoragePublishFileResult_t_116x() const
{
    u32_RemoteStoragePublishFileResult_t_116x ret;
    RemoteStoragePublishFileResult_t_116x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStoragePublishFileResult_t_116x_w_from_u(void *dst, const void *src)
{
    w_RemoteStoragePublishFileResult_t_116x *d = (w_RemoteStoragePublishFileResult_t_116x *)dst;
    const u_RemoteStoragePublishFileResult_t_116x *s = (const u_RemoteStoragePublishFileResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __i386__
u32_RemoteStoragePublishFileResult_t_116x::operator w32_RemoteStoragePublishFileResult_t_116x() const
{
    w32_RemoteStoragePublishFileResult_t_116x ret;
    RemoteStoragePublishFileResult_t_116x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStoragePublishedFileUpdated_t) >= 24 );
C_ASSERT( offsetof(w64_RemoteStoragePublishedFileUpdated_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(w64_RemoteStoragePublishedFileUpdated_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStoragePublishedFileUpdated_t, m_nAppID) == 8 );
C_ASSERT( sizeof(w64_RemoteStoragePublishedFileUpdated_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(w64_RemoteStoragePublishedFileUpdated_t, m_ulUnused) == 16 );
C_ASSERT( sizeof(w64_RemoteStoragePublishedFileUpdated_t().m_ulUnused) >= 8 );

C_ASSERT( sizeof(u64_RemoteStoragePublishedFileUpdated_t) >= 20 );
C_ASSERT( offsetof(u64_RemoteStoragePublishedFileUpdated_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(u64_RemoteStoragePublishedFileUpdated_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStoragePublishedFileUpdated_t, m_nAppID) == 8 );
C_ASSERT( sizeof(u64_RemoteStoragePublishedFileUpdated_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(u64_RemoteStoragePublishedFileUpdated_t, m_ulUnused) == 12 );
C_ASSERT( sizeof(u64_RemoteStoragePublishedFileUpdated_t().m_ulUnused) >= 8 );

C_ASSERT( sizeof(w32_RemoteStoragePublishedFileUpdated_t) >= 24 );
C_ASSERT( offsetof(w32_RemoteStoragePublishedFileUpdated_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(w32_RemoteStoragePublishedFileUpdated_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStoragePublishedFileUpdated_t, m_nAppID) == 8 );
C_ASSERT( sizeof(w32_RemoteStoragePublishedFileUpdated_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(w32_RemoteStoragePublishedFileUpdated_t, m_ulUnused) == 16 );
C_ASSERT( sizeof(w32_RemoteStoragePublishedFileUpdated_t().m_ulUnused) >= 8 );

C_ASSERT( sizeof(u32_RemoteStoragePublishedFileUpdated_t) >= 20 );
C_ASSERT( offsetof(u32_RemoteStoragePublishedFileUpdated_t, m_nPublishedFileId) == 0 );
C_ASSERT( sizeof(u32_RemoteStoragePublishedFileUpdated_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStoragePublishedFileUpdated_t, m_nAppID) == 8 );
C_ASSERT( sizeof(u32_RemoteStoragePublishedFileUpdated_t().m_nAppID) >= 4 );
C_ASSERT( offsetof(u32_RemoteStoragePublishedFileUpdated_t, m_ulUnused) == 12 );
C_ASSERT( sizeof(u32_RemoteStoragePublishedFileUpdated_t().m_ulUnused) >= 8 );

static void RemoteStoragePublishedFileUpdated_t_u_from_w(void *dst, const void *src)
{
    u_RemoteStoragePublishedFileUpdated_t *d = (u_RemoteStoragePublishedFileUpdated_t *)dst;
    const w_RemoteStoragePublishedFileUpdated_t *s = (const w_RemoteStoragePublishedFileUpdated_t *)src;

    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nAppID = s->m_nAppID;
    d->m_ulUnused = s->m_ulUnused;
}
#ifdef __x86_64__
w64_RemoteStoragePublishedFileUpdated_t::operator u64_RemoteStoragePublishedFileUpdated_t() const
{
    u64_RemoteStoragePublishedFileUpdated_t ret;
    RemoteStoragePublishedFileUpdated_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStoragePublishedFileUpdated_t_w_from_u(void *dst, const void *src)
{
    w_RemoteStoragePublishedFileUpdated_t *d = (w_RemoteStoragePublishedFileUpdated_t *)dst;
    const u_RemoteStoragePublishedFileUpdated_t *s = (const u_RemoteStoragePublishedFileUpdated_t *)src;

    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nAppID = s->m_nAppID;
    d->m_ulUnused = s->m_ulUnused;
}
#ifdef __x86_64__
u64_RemoteStoragePublishedFileUpdated_t::operator w64_RemoteStoragePublishedFileUpdated_t() const
{
    w64_RemoteStoragePublishedFileUpdated_t ret;
    RemoteStoragePublishedFileUpdated_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStoragePublishedFileUpdated_t::operator u32_RemoteStoragePublishedFileUpdated_t() const
{
    u32_RemoteStoragePublishedFileUpdated_t ret;
    RemoteStoragePublishedFileUpdated_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStoragePublishedFileUpdated_t::operator w32_RemoteStoragePublishedFileUpdated_t() const
{
    w32_RemoteStoragePublishedFileUpdated_t ret;
    RemoteStoragePublishedFileUpdated_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageSetUserPublishedFileActionResult_t_123) >= 24 );
C_ASSERT( offsetof(w64_RemoteStorageSetUserPublishedFileActionResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageSetUserPublishedFileActionResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageSetUserPublishedFileActionResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageSetUserPublishedFileActionResult_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageSetUserPublishedFileActionResult_t_123, m_eAction) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageSetUserPublishedFileActionResult_t_123().m_eAction) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageSetUserPublishedFileActionResult_t_123) >= 16 );
C_ASSERT( offsetof(u64_RemoteStorageSetUserPublishedFileActionResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageSetUserPublishedFileActionResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageSetUserPublishedFileActionResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageSetUserPublishedFileActionResult_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageSetUserPublishedFileActionResult_t_123, m_eAction) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageSetUserPublishedFileActionResult_t_123().m_eAction) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageSetUserPublishedFileActionResult_t_123) >= 24 );
C_ASSERT( offsetof(w32_RemoteStorageSetUserPublishedFileActionResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageSetUserPublishedFileActionResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageSetUserPublishedFileActionResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageSetUserPublishedFileActionResult_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageSetUserPublishedFileActionResult_t_123, m_eAction) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageSetUserPublishedFileActionResult_t_123().m_eAction) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageSetUserPublishedFileActionResult_t_123) >= 16 );
C_ASSERT( offsetof(u32_RemoteStorageSetUserPublishedFileActionResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageSetUserPublishedFileActionResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageSetUserPublishedFileActionResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageSetUserPublishedFileActionResult_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageSetUserPublishedFileActionResult_t_123, m_eAction) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageSetUserPublishedFileActionResult_t_123().m_eAction) >= 4 );

C_ASSERT( sizeof(w64_RemoteStorageSetUserPublishedFileActionResult_t_119) >= 24 );
C_ASSERT( offsetof(w64_RemoteStorageSetUserPublishedFileActionResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageSetUserPublishedFileActionResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageSetUserPublishedFileActionResult_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageSetUserPublishedFileActionResult_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageSetUserPublishedFileActionResult_t_119, m_eAction) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageSetUserPublishedFileActionResult_t_119().m_eAction) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageSetUserPublishedFileActionResult_t_119) >= 24 );
C_ASSERT( offsetof(u64_RemoteStorageSetUserPublishedFileActionResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageSetUserPublishedFileActionResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageSetUserPublishedFileActionResult_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageSetUserPublishedFileActionResult_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageSetUserPublishedFileActionResult_t_119, m_eAction) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageSetUserPublishedFileActionResult_t_119().m_eAction) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageSetUserPublishedFileActionResult_t_119) >= 24 );
C_ASSERT( offsetof(w32_RemoteStorageSetUserPublishedFileActionResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageSetUserPublishedFileActionResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageSetUserPublishedFileActionResult_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageSetUserPublishedFileActionResult_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageSetUserPublishedFileActionResult_t_119, m_eAction) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageSetUserPublishedFileActionResult_t_119().m_eAction) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageSetUserPublishedFileActionResult_t_119) >= 16 );
C_ASSERT( offsetof(u32_RemoteStorageSetUserPublishedFileActionResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageSetUserPublishedFileActionResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageSetUserPublishedFileActionResult_t_119, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageSetUserPublishedFileActionResult_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageSetUserPublishedFileActionResult_t_119, m_eAction) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageSetUserPublishedFileActionResult_t_119().m_eAction) >= 4 );

static void RemoteStorageSetUserPublishedFileActionResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageSetUserPublishedFileActionResult_t_123 *d = (u_RemoteStorageSetUserPublishedFileActionResult_t_123 *)dst;
    const w_RemoteStorageSetUserPublishedFileActionResult_t_123 *s = (const w_RemoteStorageSetUserPublishedFileActionResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eAction = s->m_eAction;
}
#ifdef __x86_64__
w64_RemoteStorageSetUserPublishedFileActionResult_t_123::operator u64_RemoteStorageSetUserPublishedFileActionResult_t_123() const
{
    u64_RemoteStorageSetUserPublishedFileActionResult_t_123 ret;
    RemoteStorageSetUserPublishedFileActionResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageSetUserPublishedFileActionResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageSetUserPublishedFileActionResult_t_123 *d = (w_RemoteStorageSetUserPublishedFileActionResult_t_123 *)dst;
    const u_RemoteStorageSetUserPublishedFileActionResult_t_123 *s = (const u_RemoteStorageSetUserPublishedFileActionResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eAction = s->m_eAction;
}
#ifdef __x86_64__
u64_RemoteStorageSetUserPublishedFileActionResult_t_123::operator w64_RemoteStorageSetUserPublishedFileActionResult_t_123() const
{
    w64_RemoteStorageSetUserPublishedFileActionResult_t_123 ret;
    RemoteStorageSetUserPublishedFileActionResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageSetUserPublishedFileActionResult_t_123::operator u32_RemoteStorageSetUserPublishedFileActionResult_t_123() const
{
    u32_RemoteStorageSetUserPublishedFileActionResult_t_123 ret;
    RemoteStorageSetUserPublishedFileActionResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageSetUserPublishedFileActionResult_t_123::operator w32_RemoteStorageSetUserPublishedFileActionResult_t_123() const
{
    w32_RemoteStorageSetUserPublishedFileActionResult_t_123 ret;
    RemoteStorageSetUserPublishedFileActionResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageSetUserPublishedFileActionResult_t_119_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageSetUserPublishedFileActionResult_t_119 *d = (u_RemoteStorageSetUserPublishedFileActionResult_t_119 *)dst;
    const w_RemoteStorageSetUserPublishedFileActionResult_t_119 *s = (const w_RemoteStorageSetUserPublishedFileActionResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eAction = s->m_eAction;
}
#ifdef __i386__
w32_RemoteStorageSetUserPublishedFileActionResult_t_119::operator u32_RemoteStorageSetUserPublishedFileActionResult_t_119() const
{
    u32_RemoteStorageSetUserPublishedFileActionResult_t_119 ret;
    RemoteStorageSetUserPublishedFileActionResult_t_119_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageSetUserPublishedFileActionResult_t_119_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageSetUserPublishedFileActionResult_t_119 *d = (w_RemoteStorageSetUserPublishedFileActionResult_t_119 *)dst;
    const u_RemoteStorageSetUserPublishedFileActionResult_t_119 *s = (const u_RemoteStorageSetUserPublishedFileActionResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eAction = s->m_eAction;
}
#ifdef __i386__
u32_RemoteStorageSetUserPublishedFileActionResult_t_119::operator w32_RemoteStorageSetUserPublishedFileActionResult_t_119() const
{
    w32_RemoteStorageSetUserPublishedFileActionResult_t_119 ret;
    RemoteStorageSetUserPublishedFileActionResult_t_119_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageSubscribePublishedFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageSubscribePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageSubscribePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageSubscribePublishedFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageSubscribePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageSubscribePublishedFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u64_RemoteStorageSubscribePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageSubscribePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageSubscribePublishedFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageSubscribePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageSubscribePublishedFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageSubscribePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageSubscribePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageSubscribePublishedFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageSubscribePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageSubscribePublishedFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageSubscribePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageSubscribePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageSubscribePublishedFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageSubscribePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w64_RemoteStorageSubscribePublishedFileResult_t_116x) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageSubscribePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageSubscribePublishedFileResult_t_116x().m_eResult) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageSubscribePublishedFileResult_t_116x) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageSubscribePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageSubscribePublishedFileResult_t_116x().m_eResult) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageSubscribePublishedFileResult_t_116x) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageSubscribePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageSubscribePublishedFileResult_t_116x().m_eResult) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageSubscribePublishedFileResult_t_116x) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageSubscribePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageSubscribePublishedFileResult_t_116x().m_eResult) >= 4 );

static void RemoteStorageSubscribePublishedFileResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageSubscribePublishedFileResult_t_123 *d = (u_RemoteStorageSubscribePublishedFileResult_t_123 *)dst;
    const w_RemoteStorageSubscribePublishedFileResult_t_123 *s = (const w_RemoteStorageSubscribePublishedFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
w64_RemoteStorageSubscribePublishedFileResult_t_123::operator u64_RemoteStorageSubscribePublishedFileResult_t_123() const
{
    u64_RemoteStorageSubscribePublishedFileResult_t_123 ret;
    RemoteStorageSubscribePublishedFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageSubscribePublishedFileResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageSubscribePublishedFileResult_t_123 *d = (w_RemoteStorageSubscribePublishedFileResult_t_123 *)dst;
    const u_RemoteStorageSubscribePublishedFileResult_t_123 *s = (const u_RemoteStorageSubscribePublishedFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
u64_RemoteStorageSubscribePublishedFileResult_t_123::operator w64_RemoteStorageSubscribePublishedFileResult_t_123() const
{
    w64_RemoteStorageSubscribePublishedFileResult_t_123 ret;
    RemoteStorageSubscribePublishedFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageSubscribePublishedFileResult_t_123::operator u32_RemoteStorageSubscribePublishedFileResult_t_123() const
{
    u32_RemoteStorageSubscribePublishedFileResult_t_123 ret;
    RemoteStorageSubscribePublishedFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageSubscribePublishedFileResult_t_123::operator w32_RemoteStorageSubscribePublishedFileResult_t_123() const
{
    w32_RemoteStorageSubscribePublishedFileResult_t_123 ret;
    RemoteStorageSubscribePublishedFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageUnsubscribePublishedFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageUnsubscribePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUnsubscribePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUnsubscribePublishedFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageUnsubscribePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageUnsubscribePublishedFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u64_RemoteStorageUnsubscribePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUnsubscribePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUnsubscribePublishedFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageUnsubscribePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageUnsubscribePublishedFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageUnsubscribePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUnsubscribePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUnsubscribePublishedFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageUnsubscribePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageUnsubscribePublishedFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageUnsubscribePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUnsubscribePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUnsubscribePublishedFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageUnsubscribePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w64_RemoteStorageUnsubscribePublishedFileResult_t_116x) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUnsubscribePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUnsubscribePublishedFileResult_t_116x().m_eResult) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageUnsubscribePublishedFileResult_t_116x) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUnsubscribePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUnsubscribePublishedFileResult_t_116x().m_eResult) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageUnsubscribePublishedFileResult_t_116x) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUnsubscribePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUnsubscribePublishedFileResult_t_116x().m_eResult) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageUnsubscribePublishedFileResult_t_116x) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUnsubscribePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUnsubscribePublishedFileResult_t_116x().m_eResult) >= 4 );

static void RemoteStorageUnsubscribePublishedFileResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageUnsubscribePublishedFileResult_t_123 *d = (u_RemoteStorageUnsubscribePublishedFileResult_t_123 *)dst;
    const w_RemoteStorageUnsubscribePublishedFileResult_t_123 *s = (const w_RemoteStorageUnsubscribePublishedFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
w64_RemoteStorageUnsubscribePublishedFileResult_t_123::operator u64_RemoteStorageUnsubscribePublishedFileResult_t_123() const
{
    u64_RemoteStorageUnsubscribePublishedFileResult_t_123 ret;
    RemoteStorageUnsubscribePublishedFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageUnsubscribePublishedFileResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageUnsubscribePublishedFileResult_t_123 *d = (w_RemoteStorageUnsubscribePublishedFileResult_t_123 *)dst;
    const u_RemoteStorageUnsubscribePublishedFileResult_t_123 *s = (const u_RemoteStorageUnsubscribePublishedFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
u64_RemoteStorageUnsubscribePublishedFileResult_t_123::operator w64_RemoteStorageUnsubscribePublishedFileResult_t_123() const
{
    w64_RemoteStorageUnsubscribePublishedFileResult_t_123 ret;
    RemoteStorageUnsubscribePublishedFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageUnsubscribePublishedFileResult_t_123::operator u32_RemoteStorageUnsubscribePublishedFileResult_t_123() const
{
    u32_RemoteStorageUnsubscribePublishedFileResult_t_123 ret;
    RemoteStorageUnsubscribePublishedFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageUnsubscribePublishedFileResult_t_123::operator w32_RemoteStorageUnsubscribePublishedFileResult_t_123() const
{
    w32_RemoteStorageUnsubscribePublishedFileResult_t_123 ret;
    RemoteStorageUnsubscribePublishedFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t) >= 64 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_unPublishedFileId) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_pchFile) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_pchFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_pchPreviewFile) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_pchPreviewFile) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_pchTitle) == 24 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_pchTitle) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_pchDescription) == 32 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_pchDescription) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_eVisibility) == 40 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_pTags) == 48 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_pTags) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateFile) == 56 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateFile) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdatePreviewFile) == 57 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdatePreviewFile) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateTitle) == 58 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateTitle) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateDescription) == 59 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateDescription) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateVisibility) == 60 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateVisibility) >= 1 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateTags) == 61 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateTags) >= 1 );

C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t) >= 64 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_unPublishedFileId) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_pchFile) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_pchFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_pchPreviewFile) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_pchPreviewFile) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_pchTitle) == 24 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_pchTitle) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_pchDescription) == 32 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_pchDescription) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_eVisibility) == 40 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_pTags) == 48 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_pTags) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateFile) == 56 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateFile) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdatePreviewFile) == 57 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdatePreviewFile) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateTitle) == 58 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateTitle) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateDescription) == 59 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateDescription) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateVisibility) == 60 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateVisibility) >= 1 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateTags) == 61 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateTags) >= 1 );

C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t) >= 40 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_unPublishedFileId) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_pchFile) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_pchFile) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_pchPreviewFile) == 12 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_pchPreviewFile) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_pchTitle) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_pchTitle) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_pchDescription) == 20 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_pchDescription) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_eVisibility) == 24 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_eVisibility) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_pTags) == 28 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_pTags) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateFile) == 32 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateFile) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdatePreviewFile) == 33 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdatePreviewFile) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateTitle) == 34 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateTitle) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateDescription) == 35 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateDescription) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateVisibility) == 36 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateVisibility) >= 1 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateTags) == 37 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateTags) >= 1 );

C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t) >= 40 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_unPublishedFileId) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_unPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_pchFile) == 8 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_pchFile) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_pchPreviewFile) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_pchPreviewFile) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_pchTitle) == 16 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_pchTitle) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_pchDescription) == 20 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_pchDescription) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_eVisibility) == 24 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_eVisibility) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_pTags) == 28 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_pTags) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateFile) == 32 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateFile) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdatePreviewFile) == 33 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdatePreviewFile) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateTitle) == 34 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateTitle) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateDescription) == 35 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateDescription) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateVisibility) == 36 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateVisibility) >= 1 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileRequest_t, m_bUpdateTags) == 37 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileRequest_t().m_bUpdateTags) >= 1 );

C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_125) >= 24 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileResult_t_125, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_125().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileResult_t_125, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_125().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_125) >= 16 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileResult_t_125, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_125().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileResult_t_125, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_125().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_125) >= 24 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileResult_t_125, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_125().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileResult_t_125, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_125().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_125) >= 16 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileResult_t_125, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_125().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileResult_t_125, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_125().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileResult_t_125, m_bUserNeedsToAcceptWorkshopLegalAgreement) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_125().m_bUserNeedsToAcceptWorkshopLegalAgreement) >= 1 );

C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_123) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_123) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_116x) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUpdatePublishedFileResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageUpdatePublishedFileResult_t_116x().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_116x) >= 16 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUpdatePublishedFileResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageUpdatePublishedFileResult_t_116x().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_116x) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdatePublishedFileResult_t_116x, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageUpdatePublishedFileResult_t_116x().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_116x) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileResult_t_116x, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_116x().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdatePublishedFileResult_t_116x, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageUpdatePublishedFileResult_t_116x().m_nPublishedFileId) >= 8 );

static void RemoteStorageUpdatePublishedFileResult_t_125_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageUpdatePublishedFileResult_t_125 *d = (u_RemoteStorageUpdatePublishedFileResult_t_125 *)dst;
    const w_RemoteStorageUpdatePublishedFileResult_t_125 *s = (const w_RemoteStorageUpdatePublishedFileResult_t_125 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_bUserNeedsToAcceptWorkshopLegalAgreement = s->m_bUserNeedsToAcceptWorkshopLegalAgreement;
}
#ifdef __x86_64__
w64_RemoteStorageUpdatePublishedFileResult_t_125::operator u64_RemoteStorageUpdatePublishedFileResult_t_125() const
{
    u64_RemoteStorageUpdatePublishedFileResult_t_125 ret;
    RemoteStorageUpdatePublishedFileResult_t_125_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageUpdatePublishedFileResult_t_125_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageUpdatePublishedFileResult_t_125 *d = (w_RemoteStorageUpdatePublishedFileResult_t_125 *)dst;
    const u_RemoteStorageUpdatePublishedFileResult_t_125 *s = (const u_RemoteStorageUpdatePublishedFileResult_t_125 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_bUserNeedsToAcceptWorkshopLegalAgreement = s->m_bUserNeedsToAcceptWorkshopLegalAgreement;
}
#ifdef __x86_64__
u64_RemoteStorageUpdatePublishedFileResult_t_125::operator w64_RemoteStorageUpdatePublishedFileResult_t_125() const
{
    w64_RemoteStorageUpdatePublishedFileResult_t_125 ret;
    RemoteStorageUpdatePublishedFileResult_t_125_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageUpdatePublishedFileResult_t_125::operator u32_RemoteStorageUpdatePublishedFileResult_t_125() const
{
    u32_RemoteStorageUpdatePublishedFileResult_t_125 ret;
    RemoteStorageUpdatePublishedFileResult_t_125_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageUpdatePublishedFileResult_t_125::operator w32_RemoteStorageUpdatePublishedFileResult_t_125() const
{
    w32_RemoteStorageUpdatePublishedFileResult_t_125 ret;
    RemoteStorageUpdatePublishedFileResult_t_125_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageUpdatePublishedFileResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageUpdatePublishedFileResult_t_123 *d = (u_RemoteStorageUpdatePublishedFileResult_t_123 *)dst;
    const w_RemoteStorageUpdatePublishedFileResult_t_123 *s = (const w_RemoteStorageUpdatePublishedFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
w64_RemoteStorageUpdatePublishedFileResult_t_123::operator u64_RemoteStorageUpdatePublishedFileResult_t_123() const
{
    u64_RemoteStorageUpdatePublishedFileResult_t_123 ret;
    RemoteStorageUpdatePublishedFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageUpdatePublishedFileResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageUpdatePublishedFileResult_t_123 *d = (w_RemoteStorageUpdatePublishedFileResult_t_123 *)dst;
    const u_RemoteStorageUpdatePublishedFileResult_t_123 *s = (const u_RemoteStorageUpdatePublishedFileResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
u64_RemoteStorageUpdatePublishedFileResult_t_123::operator w64_RemoteStorageUpdatePublishedFileResult_t_123() const
{
    w64_RemoteStorageUpdatePublishedFileResult_t_123 ret;
    RemoteStorageUpdatePublishedFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageUpdatePublishedFileResult_t_123::operator u32_RemoteStorageUpdatePublishedFileResult_t_123() const
{
    u32_RemoteStorageUpdatePublishedFileResult_t_123 ret;
    RemoteStorageUpdatePublishedFileResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageUpdatePublishedFileResult_t_123::operator w32_RemoteStorageUpdatePublishedFileResult_t_123() const
{
    w32_RemoteStorageUpdatePublishedFileResult_t_123 ret;
    RemoteStorageUpdatePublishedFileResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageUpdatePublishedFileResult_t_116x_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageUpdatePublishedFileResult_t_116x *d = (u_RemoteStorageUpdatePublishedFileResult_t_116x *)dst;
    const w_RemoteStorageUpdatePublishedFileResult_t_116x *s = (const w_RemoteStorageUpdatePublishedFileResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __i386__
w32_RemoteStorageUpdatePublishedFileResult_t_116x::operator u32_RemoteStorageUpdatePublishedFileResult_t_116x() const
{
    u32_RemoteStorageUpdatePublishedFileResult_t_116x ret;
    RemoteStorageUpdatePublishedFileResult_t_116x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageUpdatePublishedFileResult_t_116x_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageUpdatePublishedFileResult_t_116x *d = (w_RemoteStorageUpdatePublishedFileResult_t_116x *)dst;
    const u_RemoteStorageUpdatePublishedFileResult_t_116x *s = (const u_RemoteStorageUpdatePublishedFileResult_t_116x *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __i386__
u32_RemoteStorageUpdatePublishedFileResult_t_116x::operator w32_RemoteStorageUpdatePublishedFileResult_t_116x() const
{
    w32_RemoteStorageUpdatePublishedFileResult_t_116x ret;
    RemoteStorageUpdatePublishedFileResult_t_116x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123) >= 12 );
C_ASSERT( offsetof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119) >= 16 );
C_ASSERT( offsetof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119) >= 16 );
C_ASSERT( offsetof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_119().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119) >= 16 );
C_ASSERT( offsetof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119().m_nPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119) >= 12 );
C_ASSERT( offsetof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119().m_nPublishedFileId) >= 8 );

static void RemoteStorageUpdateUserPublishedItemVoteResult_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 *d = (u_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 *)dst;
    const w_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 *s = (const w_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123::operator u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123() const
{
    u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 ret;
    RemoteStorageUpdateUserPublishedItemVoteResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageUpdateUserPublishedItemVoteResult_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 *d = (w_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 *)dst;
    const u_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 *s = (const u_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __x86_64__
u64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123::operator w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123() const
{
    w64_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 ret;
    RemoteStorageUpdateUserPublishedItemVoteResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123::operator u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123() const
{
    u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 ret;
    RemoteStorageUpdateUserPublishedItemVoteResult_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123::operator w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123() const
{
    w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_123 ret;
    RemoteStorageUpdateUserPublishedItemVoteResult_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageUpdateUserPublishedItemVoteResult_t_119_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 *d = (u_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 *)dst;
    const w_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 *s = (const w_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __i386__
w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119::operator u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119() const
{
    u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 ret;
    RemoteStorageUpdateUserPublishedItemVoteResult_t_119_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageUpdateUserPublishedItemVoteResult_t_119_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 *d = (w_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 *)dst;
    const u_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 *s = (const u_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
}
#ifdef __i386__
u32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119::operator w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119() const
{
    w32_RemoteStorageUpdateUserPublishedItemVoteResult_t_119 ret;
    RemoteStorageUpdateUserPublishedItemVoteResult_t_119_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoteStorageUserVoteDetails_t_123) >= 24 );
C_ASSERT( offsetof(w64_RemoteStorageUserVoteDetails_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUserVoteDetails_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUserVoteDetails_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageUserVoteDetails_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageUserVoteDetails_t_123, m_eVote) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageUserVoteDetails_t_123().m_eVote) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageUserVoteDetails_t_123) >= 16 );
C_ASSERT( offsetof(u64_RemoteStorageUserVoteDetails_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUserVoteDetails_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUserVoteDetails_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoteStorageUserVoteDetails_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageUserVoteDetails_t_123, m_eVote) == 12 );
C_ASSERT( sizeof(u64_RemoteStorageUserVoteDetails_t_123().m_eVote) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageUserVoteDetails_t_123) >= 24 );
C_ASSERT( offsetof(w32_RemoteStorageUserVoteDetails_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUserVoteDetails_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUserVoteDetails_t_123, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageUserVoteDetails_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageUserVoteDetails_t_123, m_eVote) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageUserVoteDetails_t_123().m_eVote) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageUserVoteDetails_t_123) >= 16 );
C_ASSERT( offsetof(u32_RemoteStorageUserVoteDetails_t_123, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUserVoteDetails_t_123().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUserVoteDetails_t_123, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageUserVoteDetails_t_123().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageUserVoteDetails_t_123, m_eVote) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageUserVoteDetails_t_123().m_eVote) >= 4 );

C_ASSERT( sizeof(w64_RemoteStorageUserVoteDetails_t_119) >= 24 );
C_ASSERT( offsetof(w64_RemoteStorageUserVoteDetails_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoteStorageUserVoteDetails_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoteStorageUserVoteDetails_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoteStorageUserVoteDetails_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoteStorageUserVoteDetails_t_119, m_eVote) == 16 );
C_ASSERT( sizeof(w64_RemoteStorageUserVoteDetails_t_119().m_eVote) >= 4 );

C_ASSERT( sizeof(u64_RemoteStorageUserVoteDetails_t_119) >= 24 );
C_ASSERT( offsetof(u64_RemoteStorageUserVoteDetails_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoteStorageUserVoteDetails_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoteStorageUserVoteDetails_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(u64_RemoteStorageUserVoteDetails_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoteStorageUserVoteDetails_t_119, m_eVote) == 16 );
C_ASSERT( sizeof(u64_RemoteStorageUserVoteDetails_t_119().m_eVote) >= 4 );

C_ASSERT( sizeof(w32_RemoteStorageUserVoteDetails_t_119) >= 24 );
C_ASSERT( offsetof(w32_RemoteStorageUserVoteDetails_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoteStorageUserVoteDetails_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoteStorageUserVoteDetails_t_119, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoteStorageUserVoteDetails_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoteStorageUserVoteDetails_t_119, m_eVote) == 16 );
C_ASSERT( sizeof(w32_RemoteStorageUserVoteDetails_t_119().m_eVote) >= 4 );

C_ASSERT( sizeof(u32_RemoteStorageUserVoteDetails_t_119) >= 16 );
C_ASSERT( offsetof(u32_RemoteStorageUserVoteDetails_t_119, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoteStorageUserVoteDetails_t_119().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoteStorageUserVoteDetails_t_119, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoteStorageUserVoteDetails_t_119().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoteStorageUserVoteDetails_t_119, m_eVote) == 12 );
C_ASSERT( sizeof(u32_RemoteStorageUserVoteDetails_t_119().m_eVote) >= 4 );

static void RemoteStorageUserVoteDetails_t_123_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageUserVoteDetails_t_123 *d = (u_RemoteStorageUserVoteDetails_t_123 *)dst;
    const w_RemoteStorageUserVoteDetails_t_123 *s = (const w_RemoteStorageUserVoteDetails_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eVote = s->m_eVote;
}
#ifdef __x86_64__
w64_RemoteStorageUserVoteDetails_t_123::operator u64_RemoteStorageUserVoteDetails_t_123() const
{
    u64_RemoteStorageUserVoteDetails_t_123 ret;
    RemoteStorageUserVoteDetails_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageUserVoteDetails_t_123_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageUserVoteDetails_t_123 *d = (w_RemoteStorageUserVoteDetails_t_123 *)dst;
    const u_RemoteStorageUserVoteDetails_t_123 *s = (const u_RemoteStorageUserVoteDetails_t_123 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eVote = s->m_eVote;
}
#ifdef __x86_64__
u64_RemoteStorageUserVoteDetails_t_123::operator w64_RemoteStorageUserVoteDetails_t_123() const
{
    w64_RemoteStorageUserVoteDetails_t_123 ret;
    RemoteStorageUserVoteDetails_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoteStorageUserVoteDetails_t_123::operator u32_RemoteStorageUserVoteDetails_t_123() const
{
    u32_RemoteStorageUserVoteDetails_t_123 ret;
    RemoteStorageUserVoteDetails_t_123_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoteStorageUserVoteDetails_t_123::operator w32_RemoteStorageUserVoteDetails_t_123() const
{
    w32_RemoteStorageUserVoteDetails_t_123 ret;
    RemoteStorageUserVoteDetails_t_123_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void RemoteStorageUserVoteDetails_t_119_u_from_w(void *dst, const void *src)
{
    u_RemoteStorageUserVoteDetails_t_119 *d = (u_RemoteStorageUserVoteDetails_t_119 *)dst;
    const w_RemoteStorageUserVoteDetails_t_119 *s = (const w_RemoteStorageUserVoteDetails_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eVote = s->m_eVote;
}
#ifdef __i386__
w32_RemoteStorageUserVoteDetails_t_119::operator u32_RemoteStorageUserVoteDetails_t_119() const
{
    u32_RemoteStorageUserVoteDetails_t_119 ret;
    RemoteStorageUserVoteDetails_t_119_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoteStorageUserVoteDetails_t_119_w_from_u(void *dst, const void *src)
{
    w_RemoteStorageUserVoteDetails_t_119 *d = (w_RemoteStorageUserVoteDetails_t_119 *)dst;
    const u_RemoteStorageUserVoteDetails_t_119 *s = (const u_RemoteStorageUserVoteDetails_t_119 *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_eVote = s->m_eVote;
}
#ifdef __i386__
u32_RemoteStorageUserVoteDetails_t_119::operator w32_RemoteStorageUserVoteDetails_t_119() const
{
    w32_RemoteStorageUserVoteDetails_t_119 ret;
    RemoteStorageUserVoteDetails_t_119_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoveAppDependencyResult_t) >= 24 );
C_ASSERT( offsetof(w64_RemoveAppDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoveAppDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoveAppDependencyResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoveAppDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoveAppDependencyResult_t, m_nAppID) == 16 );
C_ASSERT( sizeof(w64_RemoveAppDependencyResult_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(u64_RemoveAppDependencyResult_t) >= 16 );
C_ASSERT( offsetof(u64_RemoveAppDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoveAppDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoveAppDependencyResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoveAppDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoveAppDependencyResult_t, m_nAppID) == 12 );
C_ASSERT( sizeof(u64_RemoveAppDependencyResult_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(w32_RemoveAppDependencyResult_t) >= 24 );
C_ASSERT( offsetof(w32_RemoveAppDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoveAppDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoveAppDependencyResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoveAppDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoveAppDependencyResult_t, m_nAppID) == 16 );
C_ASSERT( sizeof(w32_RemoveAppDependencyResult_t().m_nAppID) >= 4 );

C_ASSERT( sizeof(u32_RemoveAppDependencyResult_t) >= 16 );
C_ASSERT( offsetof(u32_RemoveAppDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoveAppDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoveAppDependencyResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoveAppDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoveAppDependencyResult_t, m_nAppID) == 12 );
C_ASSERT( sizeof(u32_RemoveAppDependencyResult_t().m_nAppID) >= 4 );

static void RemoveAppDependencyResult_t_u_from_w(void *dst, const void *src)
{
    u_RemoveAppDependencyResult_t *d = (u_RemoveAppDependencyResult_t *)dst;
    const w_RemoveAppDependencyResult_t *s = (const w_RemoveAppDependencyResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nAppID = s->m_nAppID;
}
#ifdef __x86_64__
w64_RemoveAppDependencyResult_t::operator u64_RemoveAppDependencyResult_t() const
{
    u64_RemoveAppDependencyResult_t ret;
    RemoveAppDependencyResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoveAppDependencyResult_t_w_from_u(void *dst, const void *src)
{
    w_RemoveAppDependencyResult_t *d = (w_RemoveAppDependencyResult_t *)dst;
    const u_RemoveAppDependencyResult_t *s = (const u_RemoveAppDependencyResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nAppID = s->m_nAppID;
}
#ifdef __x86_64__
u64_RemoveAppDependencyResult_t::operator w64_RemoveAppDependencyResult_t() const
{
    w64_RemoveAppDependencyResult_t ret;
    RemoveAppDependencyResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoveAppDependencyResult_t::operator u32_RemoveAppDependencyResult_t() const
{
    u32_RemoveAppDependencyResult_t ret;
    RemoveAppDependencyResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoveAppDependencyResult_t::operator w32_RemoveAppDependencyResult_t() const
{
    w32_RemoveAppDependencyResult_t ret;
    RemoveAppDependencyResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RemoveUGCDependencyResult_t) >= 24 );
C_ASSERT( offsetof(w64_RemoveUGCDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RemoveUGCDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RemoveUGCDependencyResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w64_RemoveUGCDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w64_RemoveUGCDependencyResult_t, m_nChildPublishedFileId) == 16 );
C_ASSERT( sizeof(w64_RemoveUGCDependencyResult_t().m_nChildPublishedFileId) >= 8 );

C_ASSERT( sizeof(u64_RemoveUGCDependencyResult_t) >= 20 );
C_ASSERT( offsetof(u64_RemoveUGCDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RemoveUGCDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RemoveUGCDependencyResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u64_RemoveUGCDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u64_RemoveUGCDependencyResult_t, m_nChildPublishedFileId) == 12 );
C_ASSERT( sizeof(u64_RemoveUGCDependencyResult_t().m_nChildPublishedFileId) >= 8 );

C_ASSERT( sizeof(w32_RemoveUGCDependencyResult_t) >= 24 );
C_ASSERT( offsetof(w32_RemoveUGCDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RemoveUGCDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RemoveUGCDependencyResult_t, m_nPublishedFileId) == 8 );
C_ASSERT( sizeof(w32_RemoveUGCDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(w32_RemoveUGCDependencyResult_t, m_nChildPublishedFileId) == 16 );
C_ASSERT( sizeof(w32_RemoveUGCDependencyResult_t().m_nChildPublishedFileId) >= 8 );

C_ASSERT( sizeof(u32_RemoveUGCDependencyResult_t) >= 20 );
C_ASSERT( offsetof(u32_RemoveUGCDependencyResult_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RemoveUGCDependencyResult_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RemoveUGCDependencyResult_t, m_nPublishedFileId) == 4 );
C_ASSERT( sizeof(u32_RemoveUGCDependencyResult_t().m_nPublishedFileId) >= 8 );
C_ASSERT( offsetof(u32_RemoveUGCDependencyResult_t, m_nChildPublishedFileId) == 12 );
C_ASSERT( sizeof(u32_RemoveUGCDependencyResult_t().m_nChildPublishedFileId) >= 8 );

static void RemoveUGCDependencyResult_t_u_from_w(void *dst, const void *src)
{
    u_RemoveUGCDependencyResult_t *d = (u_RemoveUGCDependencyResult_t *)dst;
    const w_RemoveUGCDependencyResult_t *s = (const w_RemoveUGCDependencyResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nChildPublishedFileId = s->m_nChildPublishedFileId;
}
#ifdef __x86_64__
w64_RemoveUGCDependencyResult_t::operator u64_RemoveUGCDependencyResult_t() const
{
    u64_RemoveUGCDependencyResult_t ret;
    RemoveUGCDependencyResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RemoveUGCDependencyResult_t_w_from_u(void *dst, const void *src)
{
    w_RemoveUGCDependencyResult_t *d = (w_RemoveUGCDependencyResult_t *)dst;
    const u_RemoveUGCDependencyResult_t *s = (const u_RemoveUGCDependencyResult_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_nPublishedFileId = s->m_nPublishedFileId;
    d->m_nChildPublishedFileId = s->m_nChildPublishedFileId;
}
#ifdef __x86_64__
u64_RemoveUGCDependencyResult_t::operator w64_RemoveUGCDependencyResult_t() const
{
    w64_RemoveUGCDependencyResult_t ret;
    RemoveUGCDependencyResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RemoveUGCDependencyResult_t::operator u32_RemoveUGCDependencyResult_t() const
{
    u32_RemoveUGCDependencyResult_t ret;
    RemoveUGCDependencyResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RemoveUGCDependencyResult_t::operator w32_RemoveUGCDependencyResult_t() const
{
    w32_RemoveUGCDependencyResult_t ret;
    RemoveUGCDependencyResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RequestPlayersForGameFinalResultCallback_t) >= 24 );
C_ASSERT( offsetof(w64_RequestPlayersForGameFinalResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RequestPlayersForGameFinalResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RequestPlayersForGameFinalResultCallback_t, m_ullSearchID) == 8 );
C_ASSERT( sizeof(w64_RequestPlayersForGameFinalResultCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(w64_RequestPlayersForGameFinalResultCallback_t, m_ullUniqueGameID) == 16 );
C_ASSERT( sizeof(w64_RequestPlayersForGameFinalResultCallback_t().m_ullUniqueGameID) >= 8 );

C_ASSERT( sizeof(u64_RequestPlayersForGameFinalResultCallback_t) >= 20 );
C_ASSERT( offsetof(u64_RequestPlayersForGameFinalResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RequestPlayersForGameFinalResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RequestPlayersForGameFinalResultCallback_t, m_ullSearchID) == 4 );
C_ASSERT( sizeof(u64_RequestPlayersForGameFinalResultCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(u64_RequestPlayersForGameFinalResultCallback_t, m_ullUniqueGameID) == 12 );
C_ASSERT( sizeof(u64_RequestPlayersForGameFinalResultCallback_t().m_ullUniqueGameID) >= 8 );

C_ASSERT( sizeof(w32_RequestPlayersForGameFinalResultCallback_t) >= 24 );
C_ASSERT( offsetof(w32_RequestPlayersForGameFinalResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RequestPlayersForGameFinalResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RequestPlayersForGameFinalResultCallback_t, m_ullSearchID) == 8 );
C_ASSERT( sizeof(w32_RequestPlayersForGameFinalResultCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(w32_RequestPlayersForGameFinalResultCallback_t, m_ullUniqueGameID) == 16 );
C_ASSERT( sizeof(w32_RequestPlayersForGameFinalResultCallback_t().m_ullUniqueGameID) >= 8 );

C_ASSERT( sizeof(u32_RequestPlayersForGameFinalResultCallback_t) >= 20 );
C_ASSERT( offsetof(u32_RequestPlayersForGameFinalResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RequestPlayersForGameFinalResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RequestPlayersForGameFinalResultCallback_t, m_ullSearchID) == 4 );
C_ASSERT( sizeof(u32_RequestPlayersForGameFinalResultCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(u32_RequestPlayersForGameFinalResultCallback_t, m_ullUniqueGameID) == 12 );
C_ASSERT( sizeof(u32_RequestPlayersForGameFinalResultCallback_t().m_ullUniqueGameID) >= 8 );

static void RequestPlayersForGameFinalResultCallback_t_u_from_w(void *dst, const void *src)
{
    u_RequestPlayersForGameFinalResultCallback_t *d = (u_RequestPlayersForGameFinalResultCallback_t *)dst;
    const w_RequestPlayersForGameFinalResultCallback_t *s = (const w_RequestPlayersForGameFinalResultCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ullSearchID = s->m_ullSearchID;
    d->m_ullUniqueGameID = s->m_ullUniqueGameID;
}
#ifdef __x86_64__
w64_RequestPlayersForGameFinalResultCallback_t::operator u64_RequestPlayersForGameFinalResultCallback_t() const
{
    u64_RequestPlayersForGameFinalResultCallback_t ret;
    RequestPlayersForGameFinalResultCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RequestPlayersForGameFinalResultCallback_t_w_from_u(void *dst, const void *src)
{
    w_RequestPlayersForGameFinalResultCallback_t *d = (w_RequestPlayersForGameFinalResultCallback_t *)dst;
    const u_RequestPlayersForGameFinalResultCallback_t *s = (const u_RequestPlayersForGameFinalResultCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ullSearchID = s->m_ullSearchID;
    d->m_ullUniqueGameID = s->m_ullUniqueGameID;
}
#ifdef __x86_64__
u64_RequestPlayersForGameFinalResultCallback_t::operator w64_RequestPlayersForGameFinalResultCallback_t() const
{
    w64_RequestPlayersForGameFinalResultCallback_t ret;
    RequestPlayersForGameFinalResultCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RequestPlayersForGameFinalResultCallback_t::operator u32_RequestPlayersForGameFinalResultCallback_t() const
{
    u32_RequestPlayersForGameFinalResultCallback_t ret;
    RequestPlayersForGameFinalResultCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RequestPlayersForGameFinalResultCallback_t::operator w32_RequestPlayersForGameFinalResultCallback_t() const
{
    w32_RequestPlayersForGameFinalResultCallback_t ret;
    RequestPlayersForGameFinalResultCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RequestPlayersForGameProgressCallback_t) >= 16 );
C_ASSERT( offsetof(w64_RequestPlayersForGameProgressCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RequestPlayersForGameProgressCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RequestPlayersForGameProgressCallback_t, m_ullSearchID) == 8 );
C_ASSERT( sizeof(w64_RequestPlayersForGameProgressCallback_t().m_ullSearchID) >= 8 );

C_ASSERT( sizeof(u64_RequestPlayersForGameProgressCallback_t) >= 12 );
C_ASSERT( offsetof(u64_RequestPlayersForGameProgressCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RequestPlayersForGameProgressCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RequestPlayersForGameProgressCallback_t, m_ullSearchID) == 4 );
C_ASSERT( sizeof(u64_RequestPlayersForGameProgressCallback_t().m_ullSearchID) >= 8 );

C_ASSERT( sizeof(w32_RequestPlayersForGameProgressCallback_t) >= 16 );
C_ASSERT( offsetof(w32_RequestPlayersForGameProgressCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RequestPlayersForGameProgressCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RequestPlayersForGameProgressCallback_t, m_ullSearchID) == 8 );
C_ASSERT( sizeof(w32_RequestPlayersForGameProgressCallback_t().m_ullSearchID) >= 8 );

C_ASSERT( sizeof(u32_RequestPlayersForGameProgressCallback_t) >= 12 );
C_ASSERT( offsetof(u32_RequestPlayersForGameProgressCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RequestPlayersForGameProgressCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RequestPlayersForGameProgressCallback_t, m_ullSearchID) == 4 );
C_ASSERT( sizeof(u32_RequestPlayersForGameProgressCallback_t().m_ullSearchID) >= 8 );

static void RequestPlayersForGameProgressCallback_t_u_from_w(void *dst, const void *src)
{
    u_RequestPlayersForGameProgressCallback_t *d = (u_RequestPlayersForGameProgressCallback_t *)dst;
    const w_RequestPlayersForGameProgressCallback_t *s = (const w_RequestPlayersForGameProgressCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ullSearchID = s->m_ullSearchID;
}
#ifdef __x86_64__
w64_RequestPlayersForGameProgressCallback_t::operator u64_RequestPlayersForGameProgressCallback_t() const
{
    u64_RequestPlayersForGameProgressCallback_t ret;
    RequestPlayersForGameProgressCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RequestPlayersForGameProgressCallback_t_w_from_u(void *dst, const void *src)
{
    w_RequestPlayersForGameProgressCallback_t *d = (w_RequestPlayersForGameProgressCallback_t *)dst;
    const u_RequestPlayersForGameProgressCallback_t *s = (const u_RequestPlayersForGameProgressCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ullSearchID = s->m_ullSearchID;
}
#ifdef __x86_64__
u64_RequestPlayersForGameProgressCallback_t::operator w64_RequestPlayersForGameProgressCallback_t() const
{
    w64_RequestPlayersForGameProgressCallback_t ret;
    RequestPlayersForGameProgressCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RequestPlayersForGameProgressCallback_t::operator u32_RequestPlayersForGameProgressCallback_t() const
{
    u32_RequestPlayersForGameProgressCallback_t ret;
    RequestPlayersForGameProgressCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RequestPlayersForGameProgressCallback_t::operator w32_RequestPlayersForGameProgressCallback_t() const
{
    w32_RequestPlayersForGameProgressCallback_t ret;
    RequestPlayersForGameProgressCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t) >= 64 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_ullSearchID) == 8 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_SteamIDPlayerFound) == 16 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_SteamIDPlayerFound) >= 8 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_SteamIDLobby) == 24 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_SteamIDLobby) >= 8 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_ePlayerAcceptState) == 32 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_ePlayerAcceptState) >= 4 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_nPlayerIndex) == 36 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_nPlayerIndex) >= 4 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_nTotalPlayersFound) == 40 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_nTotalPlayersFound) >= 4 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_nTotalPlayersAcceptedGame) == 44 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_nTotalPlayersAcceptedGame) >= 4 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_nSuggestedTeamIndex) == 48 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_nSuggestedTeamIndex) >= 4 );
C_ASSERT( offsetof(w64_RequestPlayersForGameResultCallback_t, m_ullUniqueGameID) == 56 );
C_ASSERT( sizeof(w64_RequestPlayersForGameResultCallback_t().m_ullUniqueGameID) >= 8 );

C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t) >= 56 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_ullSearchID) == 4 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_SteamIDPlayerFound) == 12 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_SteamIDPlayerFound) >= 8 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_SteamIDLobby) == 20 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_SteamIDLobby) >= 8 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_ePlayerAcceptState) == 28 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_ePlayerAcceptState) >= 4 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_nPlayerIndex) == 32 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_nPlayerIndex) >= 4 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_nTotalPlayersFound) == 36 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_nTotalPlayersFound) >= 4 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_nTotalPlayersAcceptedGame) == 40 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_nTotalPlayersAcceptedGame) >= 4 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_nSuggestedTeamIndex) == 44 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_nSuggestedTeamIndex) >= 4 );
C_ASSERT( offsetof(u64_RequestPlayersForGameResultCallback_t, m_ullUniqueGameID) == 48 );
C_ASSERT( sizeof(u64_RequestPlayersForGameResultCallback_t().m_ullUniqueGameID) >= 8 );

C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t) >= 64 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_ullSearchID) == 8 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_SteamIDPlayerFound) == 16 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_SteamIDPlayerFound) >= 8 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_SteamIDLobby) == 24 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_SteamIDLobby) >= 8 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_ePlayerAcceptState) == 32 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_ePlayerAcceptState) >= 4 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_nPlayerIndex) == 36 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_nPlayerIndex) >= 4 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_nTotalPlayersFound) == 40 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_nTotalPlayersFound) >= 4 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_nTotalPlayersAcceptedGame) == 44 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_nTotalPlayersAcceptedGame) >= 4 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_nSuggestedTeamIndex) == 48 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_nSuggestedTeamIndex) >= 4 );
C_ASSERT( offsetof(w32_RequestPlayersForGameResultCallback_t, m_ullUniqueGameID) == 56 );
C_ASSERT( sizeof(w32_RequestPlayersForGameResultCallback_t().m_ullUniqueGameID) >= 8 );

C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t) >= 56 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_ullSearchID) == 4 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_ullSearchID) >= 8 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_SteamIDPlayerFound) == 12 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_SteamIDPlayerFound) >= 8 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_SteamIDLobby) == 20 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_SteamIDLobby) >= 8 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_ePlayerAcceptState) == 28 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_ePlayerAcceptState) >= 4 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_nPlayerIndex) == 32 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_nPlayerIndex) >= 4 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_nTotalPlayersFound) == 36 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_nTotalPlayersFound) >= 4 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_nTotalPlayersAcceptedGame) == 40 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_nTotalPlayersAcceptedGame) >= 4 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_nSuggestedTeamIndex) == 44 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_nSuggestedTeamIndex) >= 4 );
C_ASSERT( offsetof(u32_RequestPlayersForGameResultCallback_t, m_ullUniqueGameID) == 48 );
C_ASSERT( sizeof(u32_RequestPlayersForGameResultCallback_t().m_ullUniqueGameID) >= 8 );

static void RequestPlayersForGameResultCallback_t_u_from_w(void *dst, const void *src)
{
    u_RequestPlayersForGameResultCallback_t *d = (u_RequestPlayersForGameResultCallback_t *)dst;
    const w_RequestPlayersForGameResultCallback_t *s = (const w_RequestPlayersForGameResultCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ullSearchID = s->m_ullSearchID;
    d->m_SteamIDPlayerFound = s->m_SteamIDPlayerFound;
    d->m_SteamIDLobby = s->m_SteamIDLobby;
    d->m_ePlayerAcceptState = s->m_ePlayerAcceptState;
    d->m_nPlayerIndex = s->m_nPlayerIndex;
    d->m_nTotalPlayersFound = s->m_nTotalPlayersFound;
    d->m_nTotalPlayersAcceptedGame = s->m_nTotalPlayersAcceptedGame;
    d->m_nSuggestedTeamIndex = s->m_nSuggestedTeamIndex;
    d->m_ullUniqueGameID = s->m_ullUniqueGameID;
}
#ifdef __x86_64__
w64_RequestPlayersForGameResultCallback_t::operator u64_RequestPlayersForGameResultCallback_t() const
{
    u64_RequestPlayersForGameResultCallback_t ret;
    RequestPlayersForGameResultCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void RequestPlayersForGameResultCallback_t_w_from_u(void *dst, const void *src)
{
    w_RequestPlayersForGameResultCallback_t *d = (w_RequestPlayersForGameResultCallback_t *)dst;
    const u_RequestPlayersForGameResultCallback_t *s = (const u_RequestPlayersForGameResultCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->m_ullSearchID = s->m_ullSearchID;
    d->m_SteamIDPlayerFound = s->m_SteamIDPlayerFound;
    d->m_SteamIDLobby = s->m_SteamIDLobby;
    d->m_ePlayerAcceptState = s->m_ePlayerAcceptState;
    d->m_nPlayerIndex = s->m_nPlayerIndex;
    d->m_nTotalPlayersFound = s->m_nTotalPlayersFound;
    d->m_nTotalPlayersAcceptedGame = s->m_nTotalPlayersAcceptedGame;
    d->m_nSuggestedTeamIndex = s->m_nSuggestedTeamIndex;
    d->m_ullUniqueGameID = s->m_ullUniqueGameID;
}
#ifdef __x86_64__
u64_RequestPlayersForGameResultCallback_t::operator w64_RequestPlayersForGameResultCallback_t() const
{
    w64_RequestPlayersForGameResultCallback_t ret;
    RequestPlayersForGameResultCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_RequestPlayersForGameResultCallback_t::operator u32_RequestPlayersForGameResultCallback_t() const
{
    u32_RequestPlayersForGameResultCallback_t ret;
    RequestPlayersForGameResultCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_RequestPlayersForGameResultCallback_t::operator w32_RequestPlayersForGameResultCallback_t() const
{
    w32_RequestPlayersForGameResultCallback_t ret;
    RequestPlayersForGameResultCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_SteamInputConfigurationLoaded_t) >= 40 );
C_ASSERT( offsetof(w64_SteamInputConfigurationLoaded_t, m_unAppID) == 0 );
C_ASSERT( sizeof(w64_SteamInputConfigurationLoaded_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(w64_SteamInputConfigurationLoaded_t, m_ulDeviceHandle) == 8 );
C_ASSERT( sizeof(w64_SteamInputConfigurationLoaded_t().m_ulDeviceHandle) >= 8 );
C_ASSERT( offsetof(w64_SteamInputConfigurationLoaded_t, m_ulMappingCreator) == 16 );
C_ASSERT( sizeof(w64_SteamInputConfigurationLoaded_t().m_ulMappingCreator) >= 8 );
C_ASSERT( offsetof(w64_SteamInputConfigurationLoaded_t, m_unMajorRevision) == 24 );
C_ASSERT( sizeof(w64_SteamInputConfigurationLoaded_t().m_unMajorRevision) >= 4 );
C_ASSERT( offsetof(w64_SteamInputConfigurationLoaded_t, m_unMinorRevision) == 28 );
C_ASSERT( sizeof(w64_SteamInputConfigurationLoaded_t().m_unMinorRevision) >= 4 );
C_ASSERT( offsetof(w64_SteamInputConfigurationLoaded_t, m_bUsesSteamInputAPI) == 32 );
C_ASSERT( sizeof(w64_SteamInputConfigurationLoaded_t().m_bUsesSteamInputAPI) >= 1 );
C_ASSERT( offsetof(w64_SteamInputConfigurationLoaded_t, m_bUsesGamepadAPI) == 33 );
C_ASSERT( sizeof(w64_SteamInputConfigurationLoaded_t().m_bUsesGamepadAPI) >= 1 );

C_ASSERT( sizeof(u64_SteamInputConfigurationLoaded_t) >= 32 );
C_ASSERT( offsetof(u64_SteamInputConfigurationLoaded_t, m_unAppID) == 0 );
C_ASSERT( sizeof(u64_SteamInputConfigurationLoaded_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(u64_SteamInputConfigurationLoaded_t, m_ulDeviceHandle) == 4 );
C_ASSERT( sizeof(u64_SteamInputConfigurationLoaded_t().m_ulDeviceHandle) >= 8 );
C_ASSERT( offsetof(u64_SteamInputConfigurationLoaded_t, m_ulMappingCreator) == 12 );
C_ASSERT( sizeof(u64_SteamInputConfigurationLoaded_t().m_ulMappingCreator) >= 8 );
C_ASSERT( offsetof(u64_SteamInputConfigurationLoaded_t, m_unMajorRevision) == 20 );
C_ASSERT( sizeof(u64_SteamInputConfigurationLoaded_t().m_unMajorRevision) >= 4 );
C_ASSERT( offsetof(u64_SteamInputConfigurationLoaded_t, m_unMinorRevision) == 24 );
C_ASSERT( sizeof(u64_SteamInputConfigurationLoaded_t().m_unMinorRevision) >= 4 );
C_ASSERT( offsetof(u64_SteamInputConfigurationLoaded_t, m_bUsesSteamInputAPI) == 28 );
C_ASSERT( sizeof(u64_SteamInputConfigurationLoaded_t().m_bUsesSteamInputAPI) >= 1 );
C_ASSERT( offsetof(u64_SteamInputConfigurationLoaded_t, m_bUsesGamepadAPI) == 29 );
C_ASSERT( sizeof(u64_SteamInputConfigurationLoaded_t().m_bUsesGamepadAPI) >= 1 );

C_ASSERT( sizeof(w32_SteamInputConfigurationLoaded_t) >= 40 );
C_ASSERT( offsetof(w32_SteamInputConfigurationLoaded_t, m_unAppID) == 0 );
C_ASSERT( sizeof(w32_SteamInputConfigurationLoaded_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(w32_SteamInputConfigurationLoaded_t, m_ulDeviceHandle) == 8 );
C_ASSERT( sizeof(w32_SteamInputConfigurationLoaded_t().m_ulDeviceHandle) >= 8 );
C_ASSERT( offsetof(w32_SteamInputConfigurationLoaded_t, m_ulMappingCreator) == 16 );
C_ASSERT( sizeof(w32_SteamInputConfigurationLoaded_t().m_ulMappingCreator) >= 8 );
C_ASSERT( offsetof(w32_SteamInputConfigurationLoaded_t, m_unMajorRevision) == 24 );
C_ASSERT( sizeof(w32_SteamInputConfigurationLoaded_t().m_unMajorRevision) >= 4 );
C_ASSERT( offsetof(w32_SteamInputConfigurationLoaded_t, m_unMinorRevision) == 28 );
C_ASSERT( sizeof(w32_SteamInputConfigurationLoaded_t().m_unMinorRevision) >= 4 );
C_ASSERT( offsetof(w32_SteamInputConfigurationLoaded_t, m_bUsesSteamInputAPI) == 32 );
C_ASSERT( sizeof(w32_SteamInputConfigurationLoaded_t().m_bUsesSteamInputAPI) >= 1 );
C_ASSERT( offsetof(w32_SteamInputConfigurationLoaded_t, m_bUsesGamepadAPI) == 33 );
C_ASSERT( sizeof(w32_SteamInputConfigurationLoaded_t().m_bUsesGamepadAPI) >= 1 );

C_ASSERT( sizeof(u32_SteamInputConfigurationLoaded_t) >= 32 );
C_ASSERT( offsetof(u32_SteamInputConfigurationLoaded_t, m_unAppID) == 0 );
C_ASSERT( sizeof(u32_SteamInputConfigurationLoaded_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(u32_SteamInputConfigurationLoaded_t, m_ulDeviceHandle) == 4 );
C_ASSERT( sizeof(u32_SteamInputConfigurationLoaded_t().m_ulDeviceHandle) >= 8 );
C_ASSERT( offsetof(u32_SteamInputConfigurationLoaded_t, m_ulMappingCreator) == 12 );
C_ASSERT( sizeof(u32_SteamInputConfigurationLoaded_t().m_ulMappingCreator) >= 8 );
C_ASSERT( offsetof(u32_SteamInputConfigurationLoaded_t, m_unMajorRevision) == 20 );
C_ASSERT( sizeof(u32_SteamInputConfigurationLoaded_t().m_unMajorRevision) >= 4 );
C_ASSERT( offsetof(u32_SteamInputConfigurationLoaded_t, m_unMinorRevision) == 24 );
C_ASSERT( sizeof(u32_SteamInputConfigurationLoaded_t().m_unMinorRevision) >= 4 );
C_ASSERT( offsetof(u32_SteamInputConfigurationLoaded_t, m_bUsesSteamInputAPI) == 28 );
C_ASSERT( sizeof(u32_SteamInputConfigurationLoaded_t().m_bUsesSteamInputAPI) >= 1 );
C_ASSERT( offsetof(u32_SteamInputConfigurationLoaded_t, m_bUsesGamepadAPI) == 29 );
C_ASSERT( sizeof(u32_SteamInputConfigurationLoaded_t().m_bUsesGamepadAPI) >= 1 );

static void SteamInputConfigurationLoaded_t_u_from_w(void *dst, const void *src)
{
    u_SteamInputConfigurationLoaded_t *d = (u_SteamInputConfigurationLoaded_t *)dst;
    const w_SteamInputConfigurationLoaded_t *s = (const w_SteamInputConfigurationLoaded_t *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_ulDeviceHandle = s->m_ulDeviceHandle;
    d->m_ulMappingCreator = s->m_ulMappingCreator;
    d->m_unMajorRevision = s->m_unMajorRevision;
    d->m_unMinorRevision = s->m_unMinorRevision;
    d->m_bUsesSteamInputAPI = s->m_bUsesSteamInputAPI;
    d->m_bUsesGamepadAPI = s->m_bUsesGamepadAPI;
}
#ifdef __x86_64__
w64_SteamInputConfigurationLoaded_t::operator u64_SteamInputConfigurationLoaded_t() const
{
    u64_SteamInputConfigurationLoaded_t ret;
    SteamInputConfigurationLoaded_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamInputConfigurationLoaded_t_w_from_u(void *dst, const void *src)
{
    w_SteamInputConfigurationLoaded_t *d = (w_SteamInputConfigurationLoaded_t *)dst;
    const u_SteamInputConfigurationLoaded_t *s = (const u_SteamInputConfigurationLoaded_t *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_ulDeviceHandle = s->m_ulDeviceHandle;
    d->m_ulMappingCreator = s->m_ulMappingCreator;
    d->m_unMajorRevision = s->m_unMajorRevision;
    d->m_unMinorRevision = s->m_unMinorRevision;
    d->m_bUsesSteamInputAPI = s->m_bUsesSteamInputAPI;
    d->m_bUsesGamepadAPI = s->m_bUsesGamepadAPI;
}
#ifdef __x86_64__
u64_SteamInputConfigurationLoaded_t::operator w64_SteamInputConfigurationLoaded_t() const
{
    w64_SteamInputConfigurationLoaded_t ret;
    SteamInputConfigurationLoaded_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamInputConfigurationLoaded_t::operator u32_SteamInputConfigurationLoaded_t() const
{
    u32_SteamInputConfigurationLoaded_t ret;
    SteamInputConfigurationLoaded_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamInputConfigurationLoaded_t::operator w32_SteamInputConfigurationLoaded_t() const
{
    w32_SteamInputConfigurationLoaded_t ret;
    SteamInputConfigurationLoaded_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_SteamInputGamepadSlotChange_t) >= 32 );
C_ASSERT( offsetof(w64_SteamInputGamepadSlotChange_t, m_unAppID) == 0 );
C_ASSERT( sizeof(w64_SteamInputGamepadSlotChange_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(w64_SteamInputGamepadSlotChange_t, m_ulDeviceHandle) == 8 );
C_ASSERT( sizeof(w64_SteamInputGamepadSlotChange_t().m_ulDeviceHandle) >= 8 );
C_ASSERT( offsetof(w64_SteamInputGamepadSlotChange_t, m_eDeviceType) == 16 );
C_ASSERT( sizeof(w64_SteamInputGamepadSlotChange_t().m_eDeviceType) >= 4 );
C_ASSERT( offsetof(w64_SteamInputGamepadSlotChange_t, m_nOldGamepadSlot) == 20 );
C_ASSERT( sizeof(w64_SteamInputGamepadSlotChange_t().m_nOldGamepadSlot) >= 4 );
C_ASSERT( offsetof(w64_SteamInputGamepadSlotChange_t, m_nNewGamepadSlot) == 24 );
C_ASSERT( sizeof(w64_SteamInputGamepadSlotChange_t().m_nNewGamepadSlot) >= 4 );

C_ASSERT( sizeof(u64_SteamInputGamepadSlotChange_t) >= 24 );
C_ASSERT( offsetof(u64_SteamInputGamepadSlotChange_t, m_unAppID) == 0 );
C_ASSERT( sizeof(u64_SteamInputGamepadSlotChange_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(u64_SteamInputGamepadSlotChange_t, m_ulDeviceHandle) == 4 );
C_ASSERT( sizeof(u64_SteamInputGamepadSlotChange_t().m_ulDeviceHandle) >= 8 );
C_ASSERT( offsetof(u64_SteamInputGamepadSlotChange_t, m_eDeviceType) == 12 );
C_ASSERT( sizeof(u64_SteamInputGamepadSlotChange_t().m_eDeviceType) >= 4 );
C_ASSERT( offsetof(u64_SteamInputGamepadSlotChange_t, m_nOldGamepadSlot) == 16 );
C_ASSERT( sizeof(u64_SteamInputGamepadSlotChange_t().m_nOldGamepadSlot) >= 4 );
C_ASSERT( offsetof(u64_SteamInputGamepadSlotChange_t, m_nNewGamepadSlot) == 20 );
C_ASSERT( sizeof(u64_SteamInputGamepadSlotChange_t().m_nNewGamepadSlot) >= 4 );

C_ASSERT( sizeof(w32_SteamInputGamepadSlotChange_t) >= 32 );
C_ASSERT( offsetof(w32_SteamInputGamepadSlotChange_t, m_unAppID) == 0 );
C_ASSERT( sizeof(w32_SteamInputGamepadSlotChange_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(w32_SteamInputGamepadSlotChange_t, m_ulDeviceHandle) == 8 );
C_ASSERT( sizeof(w32_SteamInputGamepadSlotChange_t().m_ulDeviceHandle) >= 8 );
C_ASSERT( offsetof(w32_SteamInputGamepadSlotChange_t, m_eDeviceType) == 16 );
C_ASSERT( sizeof(w32_SteamInputGamepadSlotChange_t().m_eDeviceType) >= 4 );
C_ASSERT( offsetof(w32_SteamInputGamepadSlotChange_t, m_nOldGamepadSlot) == 20 );
C_ASSERT( sizeof(w32_SteamInputGamepadSlotChange_t().m_nOldGamepadSlot) >= 4 );
C_ASSERT( offsetof(w32_SteamInputGamepadSlotChange_t, m_nNewGamepadSlot) == 24 );
C_ASSERT( sizeof(w32_SteamInputGamepadSlotChange_t().m_nNewGamepadSlot) >= 4 );

C_ASSERT( sizeof(u32_SteamInputGamepadSlotChange_t) >= 24 );
C_ASSERT( offsetof(u32_SteamInputGamepadSlotChange_t, m_unAppID) == 0 );
C_ASSERT( sizeof(u32_SteamInputGamepadSlotChange_t().m_unAppID) >= 4 );
C_ASSERT( offsetof(u32_SteamInputGamepadSlotChange_t, m_ulDeviceHandle) == 4 );
C_ASSERT( sizeof(u32_SteamInputGamepadSlotChange_t().m_ulDeviceHandle) >= 8 );
C_ASSERT( offsetof(u32_SteamInputGamepadSlotChange_t, m_eDeviceType) == 12 );
C_ASSERT( sizeof(u32_SteamInputGamepadSlotChange_t().m_eDeviceType) >= 4 );
C_ASSERT( offsetof(u32_SteamInputGamepadSlotChange_t, m_nOldGamepadSlot) == 16 );
C_ASSERT( sizeof(u32_SteamInputGamepadSlotChange_t().m_nOldGamepadSlot) >= 4 );
C_ASSERT( offsetof(u32_SteamInputGamepadSlotChange_t, m_nNewGamepadSlot) == 20 );
C_ASSERT( sizeof(u32_SteamInputGamepadSlotChange_t().m_nNewGamepadSlot) >= 4 );

static void SteamInputGamepadSlotChange_t_u_from_w(void *dst, const void *src)
{
    u_SteamInputGamepadSlotChange_t *d = (u_SteamInputGamepadSlotChange_t *)dst;
    const w_SteamInputGamepadSlotChange_t *s = (const w_SteamInputGamepadSlotChange_t *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_ulDeviceHandle = s->m_ulDeviceHandle;
    d->m_eDeviceType = s->m_eDeviceType;
    d->m_nOldGamepadSlot = s->m_nOldGamepadSlot;
    d->m_nNewGamepadSlot = s->m_nNewGamepadSlot;
}
#ifdef __x86_64__
w64_SteamInputGamepadSlotChange_t::operator u64_SteamInputGamepadSlotChange_t() const
{
    u64_SteamInputGamepadSlotChange_t ret;
    SteamInputGamepadSlotChange_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamInputGamepadSlotChange_t_w_from_u(void *dst, const void *src)
{
    w_SteamInputGamepadSlotChange_t *d = (w_SteamInputGamepadSlotChange_t *)dst;
    const u_SteamInputGamepadSlotChange_t *s = (const u_SteamInputGamepadSlotChange_t *)src;

    d->m_unAppID = s->m_unAppID;
    d->m_ulDeviceHandle = s->m_ulDeviceHandle;
    d->m_eDeviceType = s->m_eDeviceType;
    d->m_nOldGamepadSlot = s->m_nOldGamepadSlot;
    d->m_nNewGamepadSlot = s->m_nNewGamepadSlot;
}
#ifdef __x86_64__
u64_SteamInputGamepadSlotChange_t::operator w64_SteamInputGamepadSlotChange_t() const
{
    w64_SteamInputGamepadSlotChange_t ret;
    SteamInputGamepadSlotChange_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamInputGamepadSlotChange_t::operator u32_SteamInputGamepadSlotChange_t() const
{
    u32_SteamInputGamepadSlotChange_t ret;
    SteamInputGamepadSlotChange_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamInputGamepadSlotChange_t::operator w32_SteamInputGamepadSlotChange_t() const
{
    w32_SteamInputGamepadSlotChange_t ret;
    SteamInputGamepadSlotChange_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_SteamInventoryStartPurchaseResult_t) >= 24 );
C_ASSERT( offsetof(w64_SteamInventoryStartPurchaseResult_t, m_result) == 0 );
C_ASSERT( sizeof(w64_SteamInventoryStartPurchaseResult_t().m_result) >= 4 );
C_ASSERT( offsetof(w64_SteamInventoryStartPurchaseResult_t, m_ulOrderID) == 8 );
C_ASSERT( sizeof(w64_SteamInventoryStartPurchaseResult_t().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(w64_SteamInventoryStartPurchaseResult_t, m_ulTransID) == 16 );
C_ASSERT( sizeof(w64_SteamInventoryStartPurchaseResult_t().m_ulTransID) >= 8 );

C_ASSERT( sizeof(u64_SteamInventoryStartPurchaseResult_t) >= 20 );
C_ASSERT( offsetof(u64_SteamInventoryStartPurchaseResult_t, m_result) == 0 );
C_ASSERT( sizeof(u64_SteamInventoryStartPurchaseResult_t().m_result) >= 4 );
C_ASSERT( offsetof(u64_SteamInventoryStartPurchaseResult_t, m_ulOrderID) == 4 );
C_ASSERT( sizeof(u64_SteamInventoryStartPurchaseResult_t().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(u64_SteamInventoryStartPurchaseResult_t, m_ulTransID) == 12 );
C_ASSERT( sizeof(u64_SteamInventoryStartPurchaseResult_t().m_ulTransID) >= 8 );

C_ASSERT( sizeof(w32_SteamInventoryStartPurchaseResult_t) >= 24 );
C_ASSERT( offsetof(w32_SteamInventoryStartPurchaseResult_t, m_result) == 0 );
C_ASSERT( sizeof(w32_SteamInventoryStartPurchaseResult_t().m_result) >= 4 );
C_ASSERT( offsetof(w32_SteamInventoryStartPurchaseResult_t, m_ulOrderID) == 8 );
C_ASSERT( sizeof(w32_SteamInventoryStartPurchaseResult_t().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(w32_SteamInventoryStartPurchaseResult_t, m_ulTransID) == 16 );
C_ASSERT( sizeof(w32_SteamInventoryStartPurchaseResult_t().m_ulTransID) >= 8 );

C_ASSERT( sizeof(u32_SteamInventoryStartPurchaseResult_t) >= 20 );
C_ASSERT( offsetof(u32_SteamInventoryStartPurchaseResult_t, m_result) == 0 );
C_ASSERT( sizeof(u32_SteamInventoryStartPurchaseResult_t().m_result) >= 4 );
C_ASSERT( offsetof(u32_SteamInventoryStartPurchaseResult_t, m_ulOrderID) == 4 );
C_ASSERT( sizeof(u32_SteamInventoryStartPurchaseResult_t().m_ulOrderID) >= 8 );
C_ASSERT( offsetof(u32_SteamInventoryStartPurchaseResult_t, m_ulTransID) == 12 );
C_ASSERT( sizeof(u32_SteamInventoryStartPurchaseResult_t().m_ulTransID) >= 8 );

static void SteamInventoryStartPurchaseResult_t_u_from_w(void *dst, const void *src)
{
    u_SteamInventoryStartPurchaseResult_t *d = (u_SteamInventoryStartPurchaseResult_t *)dst;
    const w_SteamInventoryStartPurchaseResult_t *s = (const w_SteamInventoryStartPurchaseResult_t *)src;

    d->m_result = s->m_result;
    d->m_ulOrderID = s->m_ulOrderID;
    d->m_ulTransID = s->m_ulTransID;
}
#ifdef __x86_64__
w64_SteamInventoryStartPurchaseResult_t::operator u64_SteamInventoryStartPurchaseResult_t() const
{
    u64_SteamInventoryStartPurchaseResult_t ret;
    SteamInventoryStartPurchaseResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamInventoryStartPurchaseResult_t_w_from_u(void *dst, const void *src)
{
    w_SteamInventoryStartPurchaseResult_t *d = (w_SteamInventoryStartPurchaseResult_t *)dst;
    const u_SteamInventoryStartPurchaseResult_t *s = (const u_SteamInventoryStartPurchaseResult_t *)src;

    d->m_result = s->m_result;
    d->m_ulOrderID = s->m_ulOrderID;
    d->m_ulTransID = s->m_ulTransID;
}
#ifdef __x86_64__
u64_SteamInventoryStartPurchaseResult_t::operator w64_SteamInventoryStartPurchaseResult_t() const
{
    w64_SteamInventoryStartPurchaseResult_t ret;
    SteamInventoryStartPurchaseResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamInventoryStartPurchaseResult_t::operator u32_SteamInventoryStartPurchaseResult_t() const
{
    u32_SteamInventoryStartPurchaseResult_t ret;
    SteamInventoryStartPurchaseResult_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamInventoryStartPurchaseResult_t::operator w32_SteamInventoryStartPurchaseResult_t() const
{
    w32_SteamInventoryStartPurchaseResult_t ret;
    SteamInventoryStartPurchaseResult_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_153a) >= 712 );
C_ASSERT( offsetof(w64_SteamNetConnectionStatusChangedCallback_t_153a, m_hConn) == 0 );
C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_153a().m_hConn) >= 4 );
C_ASSERT( offsetof(w64_SteamNetConnectionStatusChangedCallback_t_153a, m_info) == 8 );
C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_153a().m_info) >= 696 );
C_ASSERT( offsetof(w64_SteamNetConnectionStatusChangedCallback_t_153a, m_eOldState) == 704 );
C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_153a().m_eOldState) >= 4 );

C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_153a) >= 704 );
C_ASSERT( offsetof(u64_SteamNetConnectionStatusChangedCallback_t_153a, m_hConn) == 0 );
C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_153a().m_hConn) >= 4 );
C_ASSERT( offsetof(u64_SteamNetConnectionStatusChangedCallback_t_153a, m_info) == 4 );
C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_153a().m_info) >= 696 );
C_ASSERT( offsetof(u64_SteamNetConnectionStatusChangedCallback_t_153a, m_eOldState) == 700 );
C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_153a().m_eOldState) >= 4 );

C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_153a) >= 712 );
C_ASSERT( offsetof(w32_SteamNetConnectionStatusChangedCallback_t_153a, m_hConn) == 0 );
C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_153a().m_hConn) >= 4 );
C_ASSERT( offsetof(w32_SteamNetConnectionStatusChangedCallback_t_153a, m_info) == 8 );
C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_153a().m_info) >= 696 );
C_ASSERT( offsetof(w32_SteamNetConnectionStatusChangedCallback_t_153a, m_eOldState) == 704 );
C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_153a().m_eOldState) >= 4 );

C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_153a) >= 704 );
C_ASSERT( offsetof(u32_SteamNetConnectionStatusChangedCallback_t_153a, m_hConn) == 0 );
C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_153a().m_hConn) >= 4 );
C_ASSERT( offsetof(u32_SteamNetConnectionStatusChangedCallback_t_153a, m_info) == 4 );
C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_153a().m_info) >= 696 );
C_ASSERT( offsetof(u32_SteamNetConnectionStatusChangedCallback_t_153a, m_eOldState) == 700 );
C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_153a().m_eOldState) >= 4 );

C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_144) >= 712 );
C_ASSERT( offsetof(w64_SteamNetConnectionStatusChangedCallback_t_144, m_hConn) == 0 );
C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_144().m_hConn) >= 4 );
C_ASSERT( offsetof(w64_SteamNetConnectionStatusChangedCallback_t_144, m_info) == 8 );
C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_144().m_info) >= 696 );
C_ASSERT( offsetof(w64_SteamNetConnectionStatusChangedCallback_t_144, m_eOldState) == 704 );
C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_144().m_eOldState) >= 4 );

C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_144) >= 704 );
C_ASSERT( offsetof(u64_SteamNetConnectionStatusChangedCallback_t_144, m_hConn) == 0 );
C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_144().m_hConn) >= 4 );
C_ASSERT( offsetof(u64_SteamNetConnectionStatusChangedCallback_t_144, m_info) == 4 );
C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_144().m_info) >= 696 );
C_ASSERT( offsetof(u64_SteamNetConnectionStatusChangedCallback_t_144, m_eOldState) == 700 );
C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_144().m_eOldState) >= 4 );

C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_144) >= 712 );
C_ASSERT( offsetof(w32_SteamNetConnectionStatusChangedCallback_t_144, m_hConn) == 0 );
C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_144().m_hConn) >= 4 );
C_ASSERT( offsetof(w32_SteamNetConnectionStatusChangedCallback_t_144, m_info) == 8 );
C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_144().m_info) >= 696 );
C_ASSERT( offsetof(w32_SteamNetConnectionStatusChangedCallback_t_144, m_eOldState) == 704 );
C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_144().m_eOldState) >= 4 );

C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_144) >= 704 );
C_ASSERT( offsetof(u32_SteamNetConnectionStatusChangedCallback_t_144, m_hConn) == 0 );
C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_144().m_hConn) >= 4 );
C_ASSERT( offsetof(u32_SteamNetConnectionStatusChangedCallback_t_144, m_info) == 4 );
C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_144().m_info) >= 696 );
C_ASSERT( offsetof(u32_SteamNetConnectionStatusChangedCallback_t_144, m_eOldState) == 700 );
C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_144().m_eOldState) >= 4 );

C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_151) >= 584 );
C_ASSERT( offsetof(w64_SteamNetConnectionStatusChangedCallback_t_151, m_hConn) == 0 );
C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_151().m_hConn) >= 4 );
C_ASSERT( offsetof(w64_SteamNetConnectionStatusChangedCallback_t_151, m_info) == 8 );
C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_151().m_info) >= 568 );
C_ASSERT( offsetof(w64_SteamNetConnectionStatusChangedCallback_t_151, m_eOldState) == 576 );
C_ASSERT( sizeof(w64_SteamNetConnectionStatusChangedCallback_t_151().m_eOldState) >= 4 );

C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_151) >= 576 );
C_ASSERT( offsetof(u64_SteamNetConnectionStatusChangedCallback_t_151, m_hConn) == 0 );
C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_151().m_hConn) >= 4 );
C_ASSERT( offsetof(u64_SteamNetConnectionStatusChangedCallback_t_151, m_info) == 4 );
C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_151().m_info) >= 568 );
C_ASSERT( offsetof(u64_SteamNetConnectionStatusChangedCallback_t_151, m_eOldState) == 572 );
C_ASSERT( sizeof(u64_SteamNetConnectionStatusChangedCallback_t_151().m_eOldState) >= 4 );

C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_151) >= 584 );
C_ASSERT( offsetof(w32_SteamNetConnectionStatusChangedCallback_t_151, m_hConn) == 0 );
C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_151().m_hConn) >= 4 );
C_ASSERT( offsetof(w32_SteamNetConnectionStatusChangedCallback_t_151, m_info) == 8 );
C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_151().m_info) >= 568 );
C_ASSERT( offsetof(w32_SteamNetConnectionStatusChangedCallback_t_151, m_eOldState) == 576 );
C_ASSERT( sizeof(w32_SteamNetConnectionStatusChangedCallback_t_151().m_eOldState) >= 4 );

C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_151) >= 576 );
C_ASSERT( offsetof(u32_SteamNetConnectionStatusChangedCallback_t_151, m_hConn) == 0 );
C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_151().m_hConn) >= 4 );
C_ASSERT( offsetof(u32_SteamNetConnectionStatusChangedCallback_t_151, m_info) == 4 );
C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_151().m_info) >= 568 );
C_ASSERT( offsetof(u32_SteamNetConnectionStatusChangedCallback_t_151, m_eOldState) == 572 );
C_ASSERT( sizeof(u32_SteamNetConnectionStatusChangedCallback_t_151().m_eOldState) >= 4 );

static void SteamNetConnectionStatusChangedCallback_t_153a_u_from_w(void *dst, const void *src)
{
    u_SteamNetConnectionStatusChangedCallback_t_153a *d = (u_SteamNetConnectionStatusChangedCallback_t_153a *)dst;
    const w_SteamNetConnectionStatusChangedCallback_t_153a *s = (const w_SteamNetConnectionStatusChangedCallback_t_153a *)src;

    d->m_hConn = s->m_hConn;
    d->m_info = s->m_info;
    d->m_eOldState = s->m_eOldState;
}
#ifdef __x86_64__
w64_SteamNetConnectionStatusChangedCallback_t_153a::operator u64_SteamNetConnectionStatusChangedCallback_t_153a() const
{
    u64_SteamNetConnectionStatusChangedCallback_t_153a ret;
    SteamNetConnectionStatusChangedCallback_t_153a_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamNetConnectionStatusChangedCallback_t_153a_w_from_u(void *dst, const void *src)
{
    w_SteamNetConnectionStatusChangedCallback_t_153a *d = (w_SteamNetConnectionStatusChangedCallback_t_153a *)dst;
    const u_SteamNetConnectionStatusChangedCallback_t_153a *s = (const u_SteamNetConnectionStatusChangedCallback_t_153a *)src;

    d->m_hConn = s->m_hConn;
    d->m_info = s->m_info;
    d->m_eOldState = s->m_eOldState;
}
#ifdef __x86_64__
u64_SteamNetConnectionStatusChangedCallback_t_153a::operator w64_SteamNetConnectionStatusChangedCallback_t_153a() const
{
    w64_SteamNetConnectionStatusChangedCallback_t_153a ret;
    SteamNetConnectionStatusChangedCallback_t_153a_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamNetConnectionStatusChangedCallback_t_153a::operator u32_SteamNetConnectionStatusChangedCallback_t_153a() const
{
    u32_SteamNetConnectionStatusChangedCallback_t_153a ret;
    SteamNetConnectionStatusChangedCallback_t_153a_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamNetConnectionStatusChangedCallback_t_153a::operator w32_SteamNetConnectionStatusChangedCallback_t_153a() const
{
    w32_SteamNetConnectionStatusChangedCallback_t_153a ret;
    SteamNetConnectionStatusChangedCallback_t_153a_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void SteamNetConnectionStatusChangedCallback_t_144_u_from_w(void *dst, const void *src)
{
    u_SteamNetConnectionStatusChangedCallback_t_144 *d = (u_SteamNetConnectionStatusChangedCallback_t_144 *)dst;
    const w_SteamNetConnectionStatusChangedCallback_t_144 *s = (const w_SteamNetConnectionStatusChangedCallback_t_144 *)src;

    d->m_hConn = s->m_hConn;
    d->m_info = s->m_info;
    d->m_eOldState = s->m_eOldState;
}
#ifdef __x86_64__
w64_SteamNetConnectionStatusChangedCallback_t_144::operator u64_SteamNetConnectionStatusChangedCallback_t_144() const
{
    u64_SteamNetConnectionStatusChangedCallback_t_144 ret;
    SteamNetConnectionStatusChangedCallback_t_144_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamNetConnectionStatusChangedCallback_t_144_w_from_u(void *dst, const void *src)
{
    w_SteamNetConnectionStatusChangedCallback_t_144 *d = (w_SteamNetConnectionStatusChangedCallback_t_144 *)dst;
    const u_SteamNetConnectionStatusChangedCallback_t_144 *s = (const u_SteamNetConnectionStatusChangedCallback_t_144 *)src;

    d->m_hConn = s->m_hConn;
    d->m_info = s->m_info;
    d->m_eOldState = s->m_eOldState;
}
#ifdef __x86_64__
u64_SteamNetConnectionStatusChangedCallback_t_144::operator w64_SteamNetConnectionStatusChangedCallback_t_144() const
{
    w64_SteamNetConnectionStatusChangedCallback_t_144 ret;
    SteamNetConnectionStatusChangedCallback_t_144_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamNetConnectionStatusChangedCallback_t_144::operator u32_SteamNetConnectionStatusChangedCallback_t_144() const
{
    u32_SteamNetConnectionStatusChangedCallback_t_144 ret;
    SteamNetConnectionStatusChangedCallback_t_144_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamNetConnectionStatusChangedCallback_t_144::operator w32_SteamNetConnectionStatusChangedCallback_t_144() const
{
    w32_SteamNetConnectionStatusChangedCallback_t_144 ret;
    SteamNetConnectionStatusChangedCallback_t_144_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void SteamNetConnectionStatusChangedCallback_t_151_u_from_w(void *dst, const void *src)
{
    u_SteamNetConnectionStatusChangedCallback_t_151 *d = (u_SteamNetConnectionStatusChangedCallback_t_151 *)dst;
    const w_SteamNetConnectionStatusChangedCallback_t_151 *s = (const w_SteamNetConnectionStatusChangedCallback_t_151 *)src;

    d->m_hConn = s->m_hConn;
    d->m_info = s->m_info;
    d->m_eOldState = s->m_eOldState;
}
#ifdef __x86_64__
w64_SteamNetConnectionStatusChangedCallback_t_151::operator u64_SteamNetConnectionStatusChangedCallback_t_151() const
{
    u64_SteamNetConnectionStatusChangedCallback_t_151 ret;
    SteamNetConnectionStatusChangedCallback_t_151_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamNetConnectionStatusChangedCallback_t_151_w_from_u(void *dst, const void *src)
{
    w_SteamNetConnectionStatusChangedCallback_t_151 *d = (w_SteamNetConnectionStatusChangedCallback_t_151 *)dst;
    const u_SteamNetConnectionStatusChangedCallback_t_151 *s = (const u_SteamNetConnectionStatusChangedCallback_t_151 *)src;

    d->m_hConn = s->m_hConn;
    d->m_info = s->m_info;
    d->m_eOldState = s->m_eOldState;
}
#ifdef __x86_64__
u64_SteamNetConnectionStatusChangedCallback_t_151::operator w64_SteamNetConnectionStatusChangedCallback_t_151() const
{
    w64_SteamNetConnectionStatusChangedCallback_t_151 ret;
    SteamNetConnectionStatusChangedCallback_t_151_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamNetConnectionStatusChangedCallback_t_151::operator u32_SteamNetConnectionStatusChangedCallback_t_151() const
{
    u32_SteamNetConnectionStatusChangedCallback_t_151 ret;
    SteamNetConnectionStatusChangedCallback_t_151_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamNetConnectionStatusChangedCallback_t_151::operator w32_SteamNetConnectionStatusChangedCallback_t_151() const
{
    w32_SteamNetConnectionStatusChangedCallback_t_151 ret;
    SteamNetConnectionStatusChangedCallback_t_151_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a) >= 216 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_pData) == 0 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_pData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_cbSize) == 8 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_cbSize) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_conn) == 12 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_conn) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_identityPeer) == 16 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_identityPeer) >= 136 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_nConnUserData) == 152 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_usecTimeReceived) == 160 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_nMessageNumber) == 168 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_pfnFreeData) == 176 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_pfnFreeData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_pfnRelease) == 184 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_pfnRelease) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_nChannel) == 192 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_nChannel) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_nFlags) == 196 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_nFlags) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_nUserData) == 200 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_nUserData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, m_idxLane) == 208 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a().m_idxLane) >= 2 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_153a, _pad1__) == 210 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_153a()._pad1__) >= 2 );

C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a) >= 216 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_pData) == 0 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_pData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_cbSize) == 8 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_cbSize) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_conn) == 12 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_conn) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_identityPeer) == 16 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_identityPeer) >= 136 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_nConnUserData) == 152 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_usecTimeReceived) == 160 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_nMessageNumber) == 168 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_pfnFreeData) == 176 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_pfnFreeData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_pfnRelease) == 184 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_pfnRelease) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_nChannel) == 192 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_nChannel) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_nFlags) == 196 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_nFlags) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_nUserData) == 200 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_nUserData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, m_idxLane) == 208 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a().m_idxLane) >= 2 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_153a, _pad1__) == 210 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_153a()._pad1__) >= 2 );

C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a) >= 208 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_pData) == 0 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_pData) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_cbSize) == 4 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_cbSize) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_conn) == 8 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_conn) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_identityPeer) == 12 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_identityPeer) >= 136 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_nConnUserData) == 152 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_usecTimeReceived) == 160 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_nMessageNumber) == 168 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_pfnFreeData) == 176 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_pfnFreeData) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_pfnRelease) == 180 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_pfnRelease) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_nChannel) == 184 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_nChannel) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_nFlags) == 188 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_nFlags) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_nUserData) == 192 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_nUserData) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, m_idxLane) == 200 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a().m_idxLane) >= 2 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_153a, _pad1__) == 202 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_153a()._pad1__) >= 2 );

C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a) >= 200 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_pData) == 0 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_pData) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_cbSize) == 4 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_cbSize) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_conn) == 8 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_conn) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_identityPeer) == 12 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_identityPeer) >= 136 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_nConnUserData) == 148 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_usecTimeReceived) == 156 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_nMessageNumber) == 164 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_pfnFreeData) == 172 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_pfnFreeData) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_pfnRelease) == 176 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_pfnRelease) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_nChannel) == 180 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_nChannel) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_nFlags) == 184 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_nFlags) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_nUserData) == 188 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_nUserData) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, m_idxLane) == 196 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a().m_idxLane) >= 2 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_153a, _pad1__) == 198 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_153a()._pad1__) >= 2 );

C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147) >= 208 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_pData) == 0 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_pData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_cbSize) == 8 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_cbSize) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_conn) == 12 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_conn) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_identityPeer) == 16 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_identityPeer) >= 136 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_nConnUserData) == 152 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_usecTimeReceived) == 160 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_nMessageNumber) == 168 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_pfnFreeData) == 176 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_pfnFreeData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_pfnRelease) == 184 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_pfnRelease) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_nChannel) == 192 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_nChannel) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_nFlags) == 196 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_nFlags) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_147, m_nUserData) == 200 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_147().m_nUserData) >= 8 );

C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147) >= 208 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_pData) == 0 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_pData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_cbSize) == 8 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_cbSize) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_conn) == 12 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_conn) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_identityPeer) == 16 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_identityPeer) >= 136 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_nConnUserData) == 152 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_usecTimeReceived) == 160 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_nMessageNumber) == 168 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_pfnFreeData) == 176 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_pfnFreeData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_pfnRelease) == 184 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_pfnRelease) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_nChannel) == 192 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_nChannel) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_nFlags) == 196 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_nFlags) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_147, m_nUserData) == 200 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_147().m_nUserData) >= 8 );

C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147) >= 200 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_pData) == 0 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_pData) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_cbSize) == 4 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_cbSize) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_conn) == 8 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_conn) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_identityPeer) == 12 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_identityPeer) >= 136 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_nConnUserData) == 152 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_usecTimeReceived) == 160 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_nMessageNumber) == 168 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_pfnFreeData) == 176 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_pfnFreeData) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_pfnRelease) == 180 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_pfnRelease) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_nChannel) == 184 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_nChannel) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_nFlags) == 188 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_nFlags) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_147, m_nUserData) == 192 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_147().m_nUserData) >= 8 );

C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147) >= 196 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_pData) == 0 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_pData) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_cbSize) == 4 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_cbSize) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_conn) == 8 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_conn) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_identityPeer) == 12 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_identityPeer) >= 136 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_nConnUserData) == 148 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_usecTimeReceived) == 156 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_nMessageNumber) == 164 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_pfnFreeData) == 172 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_pfnFreeData) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_pfnRelease) == 176 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_pfnRelease) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_nChannel) == 180 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_nChannel) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_nFlags) == 184 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_nFlags) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_147, m_nUserData) == 188 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_147().m_nUserData) >= 8 );

C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151) >= 80 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_pData) == 0 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_pData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_cbSize) == 8 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_cbSize) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_conn) == 12 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_conn) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_identityPeer) == 16 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_identityPeer) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_nConnUserData) == 24 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_usecTimeReceived) == 32 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_nMessageNumber) == 40 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_pfnFreeData) == 48 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_pfnFreeData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_pfnRelease) == 56 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_pfnRelease) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_nChannel) == 64 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_nChannel) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_nFlags) == 68 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_nFlags) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_151, m_nUserData) == 72 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_151().m_nUserData) >= 8 );

C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151) >= 80 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_pData) == 0 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_pData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_cbSize) == 8 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_cbSize) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_conn) == 12 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_conn) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_identityPeer) == 16 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_identityPeer) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_nConnUserData) == 24 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_usecTimeReceived) == 32 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_nMessageNumber) == 40 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_pfnFreeData) == 48 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_pfnFreeData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_pfnRelease) == 56 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_pfnRelease) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_nChannel) == 64 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_nChannel) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_nFlags) == 68 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_nFlags) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_151, m_nUserData) == 72 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_151().m_nUserData) >= 8 );

C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151) >= 72 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_pData) == 0 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_pData) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_cbSize) == 4 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_cbSize) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_conn) == 8 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_conn) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_identityPeer) == 12 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_identityPeer) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_nConnUserData) == 24 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_usecTimeReceived) == 32 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_nMessageNumber) == 40 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_pfnFreeData) == 48 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_pfnFreeData) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_pfnRelease) == 52 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_pfnRelease) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_nChannel) == 56 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_nChannel) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_nFlags) == 60 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_nFlags) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_151, m_nUserData) == 64 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_151().m_nUserData) >= 8 );

C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151) >= 68 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_pData) == 0 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_pData) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_cbSize) == 4 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_cbSize) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_conn) == 8 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_conn) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_identityPeer) == 12 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_identityPeer) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_nConnUserData) == 20 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_usecTimeReceived) == 28 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_nMessageNumber) == 36 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_pfnFreeData) == 44 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_pfnFreeData) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_pfnRelease) == 48 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_pfnRelease) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_nChannel) == 52 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_nChannel) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_nFlags) == 56 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_nFlags) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_151, m_nUserData) == 60 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_151().m_nUserData) >= 8 );

C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144) >= 200 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_pData) == 0 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_pData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_cbSize) == 8 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_cbSize) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_conn) == 12 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_conn) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_sender) == 16 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_sender) >= 136 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_nConnUserData) == 152 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_usecTimeReceived) == 160 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_nMessageNumber) == 168 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_pfnFreeData) == 176 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_pfnFreeData) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_pfnRelease) == 184 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_pfnRelease) >= 8 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m_nChannel) == 192 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m_nChannel) >= 4 );
C_ASSERT( offsetof(w64_SteamNetworkingMessage_t_144, m___nPadDummy) == 196 );
C_ASSERT( sizeof(w64_SteamNetworkingMessage_t_144().m___nPadDummy) >= 4 );

C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144) >= 200 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_pData) == 0 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_pData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_cbSize) == 8 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_cbSize) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_conn) == 12 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_conn) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_sender) == 16 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_sender) >= 136 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_nConnUserData) == 152 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_usecTimeReceived) == 160 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_nMessageNumber) == 168 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_pfnFreeData) == 176 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_pfnFreeData) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_pfnRelease) == 184 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_pfnRelease) >= 8 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m_nChannel) == 192 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m_nChannel) >= 4 );
C_ASSERT( offsetof(u64_SteamNetworkingMessage_t_144, m___nPadDummy) == 196 );
C_ASSERT( sizeof(u64_SteamNetworkingMessage_t_144().m___nPadDummy) >= 4 );

C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144) >= 192 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_pData) == 0 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_pData) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_cbSize) == 4 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_cbSize) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_conn) == 8 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_conn) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_sender) == 12 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_sender) >= 136 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_nConnUserData) == 152 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_usecTimeReceived) == 160 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_nMessageNumber) == 168 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_pfnFreeData) == 176 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_pfnFreeData) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_pfnRelease) == 180 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_pfnRelease) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m_nChannel) == 184 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m_nChannel) >= 4 );
C_ASSERT( offsetof(w32_SteamNetworkingMessage_t_144, m___nPadDummy) == 188 );
C_ASSERT( sizeof(w32_SteamNetworkingMessage_t_144().m___nPadDummy) >= 4 );

C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144) >= 188 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_pData) == 0 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_pData) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_cbSize) == 4 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_cbSize) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_conn) == 8 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_conn) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_sender) == 12 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_sender) >= 136 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_nConnUserData) == 148 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_nConnUserData) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_usecTimeReceived) == 156 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_usecTimeReceived) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_nMessageNumber) == 164 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_nMessageNumber) >= 8 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_pfnFreeData) == 172 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_pfnFreeData) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_pfnRelease) == 176 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_pfnRelease) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m_nChannel) == 180 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m_nChannel) >= 4 );
C_ASSERT( offsetof(u32_SteamNetworkingMessage_t_144, m___nPadDummy) == 184 );
C_ASSERT( sizeof(u32_SteamNetworkingMessage_t_144().m___nPadDummy) >= 4 );

C_ASSERT( sizeof(w64_SteamParamStringArray_t) >= 16 );
C_ASSERT( offsetof(w64_SteamParamStringArray_t, m_ppStrings) == 0 );
C_ASSERT( sizeof(w64_SteamParamStringArray_t().m_ppStrings) >= 8 );
C_ASSERT( offsetof(w64_SteamParamStringArray_t, m_nNumStrings) == 8 );
C_ASSERT( sizeof(w64_SteamParamStringArray_t().m_nNumStrings) >= 4 );

C_ASSERT( sizeof(u64_SteamParamStringArray_t) >= 12 );
C_ASSERT( offsetof(u64_SteamParamStringArray_t, m_ppStrings) == 0 );
C_ASSERT( sizeof(u64_SteamParamStringArray_t().m_ppStrings) >= 8 );
C_ASSERT( offsetof(u64_SteamParamStringArray_t, m_nNumStrings) == 8 );
C_ASSERT( sizeof(u64_SteamParamStringArray_t().m_nNumStrings) >= 4 );

C_ASSERT( sizeof(w32_SteamParamStringArray_t) >= 8 );
C_ASSERT( offsetof(w32_SteamParamStringArray_t, m_ppStrings) == 0 );
C_ASSERT( sizeof(w32_SteamParamStringArray_t().m_ppStrings) >= 4 );
C_ASSERT( offsetof(w32_SteamParamStringArray_t, m_nNumStrings) == 4 );
C_ASSERT( sizeof(w32_SteamParamStringArray_t().m_nNumStrings) >= 4 );

C_ASSERT( sizeof(u32_SteamParamStringArray_t) >= 8 );
C_ASSERT( offsetof(u32_SteamParamStringArray_t, m_ppStrings) == 0 );
C_ASSERT( sizeof(u32_SteamParamStringArray_t().m_ppStrings) >= 4 );
C_ASSERT( offsetof(u32_SteamParamStringArray_t, m_nNumStrings) == 4 );
C_ASSERT( sizeof(u32_SteamParamStringArray_t().m_nNumStrings) >= 4 );

C_ASSERT( sizeof(w64_SteamPartyBeaconLocation_t) >= 16 );
C_ASSERT( offsetof(w64_SteamPartyBeaconLocation_t, m_eType) == 0 );
C_ASSERT( sizeof(w64_SteamPartyBeaconLocation_t().m_eType) >= 4 );
C_ASSERT( offsetof(w64_SteamPartyBeaconLocation_t, m_ulLocationID) == 8 );
C_ASSERT( sizeof(w64_SteamPartyBeaconLocation_t().m_ulLocationID) >= 8 );

C_ASSERT( sizeof(u64_SteamPartyBeaconLocation_t) >= 12 );
C_ASSERT( offsetof(u64_SteamPartyBeaconLocation_t, m_eType) == 0 );
C_ASSERT( sizeof(u64_SteamPartyBeaconLocation_t().m_eType) >= 4 );
C_ASSERT( offsetof(u64_SteamPartyBeaconLocation_t, m_ulLocationID) == 4 );
C_ASSERT( sizeof(u64_SteamPartyBeaconLocation_t().m_ulLocationID) >= 8 );

C_ASSERT( sizeof(w32_SteamPartyBeaconLocation_t) >= 16 );
C_ASSERT( offsetof(w32_SteamPartyBeaconLocation_t, m_eType) == 0 );
C_ASSERT( sizeof(w32_SteamPartyBeaconLocation_t().m_eType) >= 4 );
C_ASSERT( offsetof(w32_SteamPartyBeaconLocation_t, m_ulLocationID) == 8 );
C_ASSERT( sizeof(w32_SteamPartyBeaconLocation_t().m_ulLocationID) >= 8 );

C_ASSERT( sizeof(u32_SteamPartyBeaconLocation_t) >= 12 );
C_ASSERT( offsetof(u32_SteamPartyBeaconLocation_t, m_eType) == 0 );
C_ASSERT( sizeof(u32_SteamPartyBeaconLocation_t().m_eType) >= 4 );
C_ASSERT( offsetof(u32_SteamPartyBeaconLocation_t, m_ulLocationID) == 4 );
C_ASSERT( sizeof(u32_SteamPartyBeaconLocation_t().m_ulLocationID) >= 8 );

static void SteamPartyBeaconLocation_t_u_from_w(void *dst, const void *src)
{
    u_SteamPartyBeaconLocation_t *d = (u_SteamPartyBeaconLocation_t *)dst;
    const w_SteamPartyBeaconLocation_t *s = (const w_SteamPartyBeaconLocation_t *)src;

    d->m_eType = s->m_eType;
    d->m_ulLocationID = s->m_ulLocationID;
}
#ifdef __x86_64__
w64_SteamPartyBeaconLocation_t::operator u64_SteamPartyBeaconLocation_t() const
{
    u64_SteamPartyBeaconLocation_t ret;
    SteamPartyBeaconLocation_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamPartyBeaconLocation_t_w_from_u(void *dst, const void *src)
{
    w_SteamPartyBeaconLocation_t *d = (w_SteamPartyBeaconLocation_t *)dst;
    const u_SteamPartyBeaconLocation_t *s = (const u_SteamPartyBeaconLocation_t *)src;

    d->m_eType = s->m_eType;
    d->m_ulLocationID = s->m_ulLocationID;
}
#ifdef __x86_64__
u64_SteamPartyBeaconLocation_t::operator w64_SteamPartyBeaconLocation_t() const
{
    w64_SteamPartyBeaconLocation_t ret;
    SteamPartyBeaconLocation_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamPartyBeaconLocation_t::operator u32_SteamPartyBeaconLocation_t() const
{
    u32_SteamPartyBeaconLocation_t ret;
    SteamPartyBeaconLocation_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamPartyBeaconLocation_t::operator w32_SteamPartyBeaconLocation_t() const
{
    w32_SteamPartyBeaconLocation_t ret;
    SteamPartyBeaconLocation_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_160) >= 9792 );
C_ASSERT( offsetof(w64_SteamUGCRequestUGCDetailsResult_t_160, m_details) == 0 );
C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_160().m_details) >= 9784 );
C_ASSERT( offsetof(w64_SteamUGCRequestUGCDetailsResult_t_160, m_bCachedData) == 9784 );
C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_160().m_bCachedData) >= 1 );

C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_160) >= 9776 );
C_ASSERT( offsetof(u64_SteamUGCRequestUGCDetailsResult_t_160, m_details) == 0 );
C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_160().m_details) >= 9772 );
C_ASSERT( offsetof(u64_SteamUGCRequestUGCDetailsResult_t_160, m_bCachedData) == 9772 );
C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_160().m_bCachedData) >= 1 );

C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_160) >= 9792 );
C_ASSERT( offsetof(w32_SteamUGCRequestUGCDetailsResult_t_160, m_details) == 0 );
C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_160().m_details) >= 9784 );
C_ASSERT( offsetof(w32_SteamUGCRequestUGCDetailsResult_t_160, m_bCachedData) == 9784 );
C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_160().m_bCachedData) >= 1 );

C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_160) >= 9776 );
C_ASSERT( offsetof(u32_SteamUGCRequestUGCDetailsResult_t_160, m_details) == 0 );
C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_160().m_details) >= 9772 );
C_ASSERT( offsetof(u32_SteamUGCRequestUGCDetailsResult_t_160, m_bCachedData) == 9772 );
C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_160().m_bCachedData) >= 1 );

C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_128x) >= 9784 );
C_ASSERT( offsetof(w64_SteamUGCRequestUGCDetailsResult_t_128x, m_details) == 0 );
C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_128x().m_details) >= 9776 );
C_ASSERT( offsetof(w64_SteamUGCRequestUGCDetailsResult_t_128x, m_bCachedData) == 9776 );
C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_128x().m_bCachedData) >= 1 );

C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_128x) >= 9768 );
C_ASSERT( offsetof(u64_SteamUGCRequestUGCDetailsResult_t_128x, m_details) == 0 );
C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_128x().m_details) >= 9764 );
C_ASSERT( offsetof(u64_SteamUGCRequestUGCDetailsResult_t_128x, m_bCachedData) == 9764 );
C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_128x().m_bCachedData) >= 1 );

C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_128x) >= 9784 );
C_ASSERT( offsetof(w32_SteamUGCRequestUGCDetailsResult_t_128x, m_details) == 0 );
C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_128x().m_details) >= 9776 );
C_ASSERT( offsetof(w32_SteamUGCRequestUGCDetailsResult_t_128x, m_bCachedData) == 9776 );
C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_128x().m_bCachedData) >= 1 );

C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_128x) >= 9768 );
C_ASSERT( offsetof(u32_SteamUGCRequestUGCDetailsResult_t_128x, m_details) == 0 );
C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_128x().m_details) >= 9764 );
C_ASSERT( offsetof(u32_SteamUGCRequestUGCDetailsResult_t_128x, m_bCachedData) == 9764 );
C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_128x().m_bCachedData) >= 1 );

C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_129) >= 9776 );
C_ASSERT( offsetof(w64_SteamUGCRequestUGCDetailsResult_t_129, m_details) == 0 );
C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_129().m_details) >= 9768 );
C_ASSERT( offsetof(w64_SteamUGCRequestUGCDetailsResult_t_129, m_bCachedData) == 9768 );
C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_129().m_bCachedData) >= 1 );

C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_129) >= 9764 );
C_ASSERT( offsetof(u64_SteamUGCRequestUGCDetailsResult_t_129, m_details) == 0 );
C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_129().m_details) >= 9760 );
C_ASSERT( offsetof(u64_SteamUGCRequestUGCDetailsResult_t_129, m_bCachedData) == 9760 );
C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_129().m_bCachedData) >= 1 );

C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_129) >= 9776 );
C_ASSERT( offsetof(w32_SteamUGCRequestUGCDetailsResult_t_129, m_details) == 0 );
C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_129().m_details) >= 9768 );
C_ASSERT( offsetof(w32_SteamUGCRequestUGCDetailsResult_t_129, m_bCachedData) == 9768 );
C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_129().m_bCachedData) >= 1 );

C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_129) >= 9764 );
C_ASSERT( offsetof(u32_SteamUGCRequestUGCDetailsResult_t_129, m_details) == 0 );
C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_129().m_details) >= 9760 );
C_ASSERT( offsetof(u32_SteamUGCRequestUGCDetailsResult_t_129, m_bCachedData) == 9760 );
C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_129().m_bCachedData) >= 1 );

C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_126) >= 9768 );
C_ASSERT( offsetof(w64_SteamUGCRequestUGCDetailsResult_t_126, m_details) == 0 );
C_ASSERT( sizeof(w64_SteamUGCRequestUGCDetailsResult_t_126().m_details) >= 9768 );

C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_126) >= 9760 );
C_ASSERT( offsetof(u64_SteamUGCRequestUGCDetailsResult_t_126, m_details) == 0 );
C_ASSERT( sizeof(u64_SteamUGCRequestUGCDetailsResult_t_126().m_details) >= 9760 );

C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_126) >= 9768 );
C_ASSERT( offsetof(w32_SteamUGCRequestUGCDetailsResult_t_126, m_details) == 0 );
C_ASSERT( sizeof(w32_SteamUGCRequestUGCDetailsResult_t_126().m_details) >= 9768 );

C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_126) >= 9760 );
C_ASSERT( offsetof(u32_SteamUGCRequestUGCDetailsResult_t_126, m_details) == 0 );
C_ASSERT( sizeof(u32_SteamUGCRequestUGCDetailsResult_t_126().m_details) >= 9760 );

static void SteamUGCRequestUGCDetailsResult_t_160_u_from_w(void *dst, const void *src)
{
    u_SteamUGCRequestUGCDetailsResult_t_160 *d = (u_SteamUGCRequestUGCDetailsResult_t_160 *)dst;
    const w_SteamUGCRequestUGCDetailsResult_t_160 *s = (const w_SteamUGCRequestUGCDetailsResult_t_160 *)src;

    d->m_details = s->m_details;
    d->m_bCachedData = s->m_bCachedData;
}
#ifdef __x86_64__
w64_SteamUGCRequestUGCDetailsResult_t_160::operator u64_SteamUGCRequestUGCDetailsResult_t_160() const
{
    u64_SteamUGCRequestUGCDetailsResult_t_160 ret;
    SteamUGCRequestUGCDetailsResult_t_160_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamUGCRequestUGCDetailsResult_t_160_w_from_u(void *dst, const void *src)
{
    w_SteamUGCRequestUGCDetailsResult_t_160 *d = (w_SteamUGCRequestUGCDetailsResult_t_160 *)dst;
    const u_SteamUGCRequestUGCDetailsResult_t_160 *s = (const u_SteamUGCRequestUGCDetailsResult_t_160 *)src;

    d->m_details = s->m_details;
    d->m_bCachedData = s->m_bCachedData;
}
#ifdef __x86_64__
u64_SteamUGCRequestUGCDetailsResult_t_160::operator w64_SteamUGCRequestUGCDetailsResult_t_160() const
{
    w64_SteamUGCRequestUGCDetailsResult_t_160 ret;
    SteamUGCRequestUGCDetailsResult_t_160_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamUGCRequestUGCDetailsResult_t_160::operator u32_SteamUGCRequestUGCDetailsResult_t_160() const
{
    u32_SteamUGCRequestUGCDetailsResult_t_160 ret;
    SteamUGCRequestUGCDetailsResult_t_160_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamUGCRequestUGCDetailsResult_t_160::operator w32_SteamUGCRequestUGCDetailsResult_t_160() const
{
    w32_SteamUGCRequestUGCDetailsResult_t_160 ret;
    SteamUGCRequestUGCDetailsResult_t_160_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void SteamUGCRequestUGCDetailsResult_t_128x_u_from_w(void *dst, const void *src)
{
    u_SteamUGCRequestUGCDetailsResult_t_128x *d = (u_SteamUGCRequestUGCDetailsResult_t_128x *)dst;
    const w_SteamUGCRequestUGCDetailsResult_t_128x *s = (const w_SteamUGCRequestUGCDetailsResult_t_128x *)src;

    d->m_details = s->m_details;
    d->m_bCachedData = s->m_bCachedData;
}
#ifdef __x86_64__
w64_SteamUGCRequestUGCDetailsResult_t_128x::operator u64_SteamUGCRequestUGCDetailsResult_t_128x() const
{
    u64_SteamUGCRequestUGCDetailsResult_t_128x ret;
    SteamUGCRequestUGCDetailsResult_t_128x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamUGCRequestUGCDetailsResult_t_128x_w_from_u(void *dst, const void *src)
{
    w_SteamUGCRequestUGCDetailsResult_t_128x *d = (w_SteamUGCRequestUGCDetailsResult_t_128x *)dst;
    const u_SteamUGCRequestUGCDetailsResult_t_128x *s = (const u_SteamUGCRequestUGCDetailsResult_t_128x *)src;

    d->m_details = s->m_details;
    d->m_bCachedData = s->m_bCachedData;
}
#ifdef __x86_64__
u64_SteamUGCRequestUGCDetailsResult_t_128x::operator w64_SteamUGCRequestUGCDetailsResult_t_128x() const
{
    w64_SteamUGCRequestUGCDetailsResult_t_128x ret;
    SteamUGCRequestUGCDetailsResult_t_128x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamUGCRequestUGCDetailsResult_t_128x::operator u32_SteamUGCRequestUGCDetailsResult_t_128x() const
{
    u32_SteamUGCRequestUGCDetailsResult_t_128x ret;
    SteamUGCRequestUGCDetailsResult_t_128x_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamUGCRequestUGCDetailsResult_t_128x::operator w32_SteamUGCRequestUGCDetailsResult_t_128x() const
{
    w32_SteamUGCRequestUGCDetailsResult_t_128x ret;
    SteamUGCRequestUGCDetailsResult_t_128x_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void SteamUGCRequestUGCDetailsResult_t_129_u_from_w(void *dst, const void *src)
{
    u_SteamUGCRequestUGCDetailsResult_t_129 *d = (u_SteamUGCRequestUGCDetailsResult_t_129 *)dst;
    const w_SteamUGCRequestUGCDetailsResult_t_129 *s = (const w_SteamUGCRequestUGCDetailsResult_t_129 *)src;

    d->m_details = s->m_details;
    d->m_bCachedData = s->m_bCachedData;
}
#ifdef __x86_64__
w64_SteamUGCRequestUGCDetailsResult_t_129::operator u64_SteamUGCRequestUGCDetailsResult_t_129() const
{
    u64_SteamUGCRequestUGCDetailsResult_t_129 ret;
    SteamUGCRequestUGCDetailsResult_t_129_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamUGCRequestUGCDetailsResult_t_129_w_from_u(void *dst, const void *src)
{
    w_SteamUGCRequestUGCDetailsResult_t_129 *d = (w_SteamUGCRequestUGCDetailsResult_t_129 *)dst;
    const u_SteamUGCRequestUGCDetailsResult_t_129 *s = (const u_SteamUGCRequestUGCDetailsResult_t_129 *)src;

    d->m_details = s->m_details;
    d->m_bCachedData = s->m_bCachedData;
}
#ifdef __x86_64__
u64_SteamUGCRequestUGCDetailsResult_t_129::operator w64_SteamUGCRequestUGCDetailsResult_t_129() const
{
    w64_SteamUGCRequestUGCDetailsResult_t_129 ret;
    SteamUGCRequestUGCDetailsResult_t_129_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamUGCRequestUGCDetailsResult_t_129::operator u32_SteamUGCRequestUGCDetailsResult_t_129() const
{
    u32_SteamUGCRequestUGCDetailsResult_t_129 ret;
    SteamUGCRequestUGCDetailsResult_t_129_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamUGCRequestUGCDetailsResult_t_129::operator w32_SteamUGCRequestUGCDetailsResult_t_129() const
{
    w32_SteamUGCRequestUGCDetailsResult_t_129 ret;
    SteamUGCRequestUGCDetailsResult_t_129_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

static void SteamUGCRequestUGCDetailsResult_t_126_u_from_w(void *dst, const void *src)
{
    u_SteamUGCRequestUGCDetailsResult_t_126 *d = (u_SteamUGCRequestUGCDetailsResult_t_126 *)dst;
    const w_SteamUGCRequestUGCDetailsResult_t_126 *s = (const w_SteamUGCRequestUGCDetailsResult_t_126 *)src;

    d->m_details = s->m_details;
}
#ifdef __x86_64__
w64_SteamUGCRequestUGCDetailsResult_t_126::operator u64_SteamUGCRequestUGCDetailsResult_t_126() const
{
    u64_SteamUGCRequestUGCDetailsResult_t_126 ret;
    SteamUGCRequestUGCDetailsResult_t_126_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SteamUGCRequestUGCDetailsResult_t_126_w_from_u(void *dst, const void *src)
{
    w_SteamUGCRequestUGCDetailsResult_t_126 *d = (w_SteamUGCRequestUGCDetailsResult_t_126 *)dst;
    const u_SteamUGCRequestUGCDetailsResult_t_126 *s = (const u_SteamUGCRequestUGCDetailsResult_t_126 *)src;

    d->m_details = s->m_details;
}
#ifdef __x86_64__
u64_SteamUGCRequestUGCDetailsResult_t_126::operator w64_SteamUGCRequestUGCDetailsResult_t_126() const
{
    w64_SteamUGCRequestUGCDetailsResult_t_126 ret;
    SteamUGCRequestUGCDetailsResult_t_126_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SteamUGCRequestUGCDetailsResult_t_126::operator u32_SteamUGCRequestUGCDetailsResult_t_126() const
{
    u32_SteamUGCRequestUGCDetailsResult_t_126 ret;
    SteamUGCRequestUGCDetailsResult_t_126_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SteamUGCRequestUGCDetailsResult_t_126::operator w32_SteamUGCRequestUGCDetailsResult_t_126() const
{
    w32_SteamUGCRequestUGCDetailsResult_t_126 ret;
    SteamUGCRequestUGCDetailsResult_t_126_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

C_ASSERT( sizeof(w64_SubmitPlayerResultResultCallback_t) >= 24 );
C_ASSERT( offsetof(w64_SubmitPlayerResultResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w64_SubmitPlayerResultResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w64_SubmitPlayerResultResultCallback_t, ullUniqueGameID) == 8 );
C_ASSERT( sizeof(w64_SubmitPlayerResultResultCallback_t().ullUniqueGameID) >= 8 );
C_ASSERT( offsetof(w64_SubmitPlayerResultResultCallback_t, steamIDPlayer) == 16 );
C_ASSERT( sizeof(w64_SubmitPlayerResultResultCallback_t().steamIDPlayer) >= 8 );

C_ASSERT( sizeof(u64_SubmitPlayerResultResultCallback_t) >= 20 );
C_ASSERT( offsetof(u64_SubmitPlayerResultResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u64_SubmitPlayerResultResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u64_SubmitPlayerResultResultCallback_t, ullUniqueGameID) == 4 );
C_ASSERT( sizeof(u64_SubmitPlayerResultResultCallback_t().ullUniqueGameID) >= 8 );
C_ASSERT( offsetof(u64_SubmitPlayerResultResultCallback_t, steamIDPlayer) == 12 );
C_ASSERT( sizeof(u64_SubmitPlayerResultResultCallback_t().steamIDPlayer) >= 8 );

C_ASSERT( sizeof(w32_SubmitPlayerResultResultCallback_t) >= 24 );
C_ASSERT( offsetof(w32_SubmitPlayerResultResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(w32_SubmitPlayerResultResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(w32_SubmitPlayerResultResultCallback_t, ullUniqueGameID) == 8 );
C_ASSERT( sizeof(w32_SubmitPlayerResultResultCallback_t().ullUniqueGameID) >= 8 );
C_ASSERT( offsetof(w32_SubmitPlayerResultResultCallback_t, steamIDPlayer) == 16 );
C_ASSERT( sizeof(w32_SubmitPlayerResultResultCallback_t().steamIDPlayer) >= 8 );

C_ASSERT( sizeof(u32_SubmitPlayerResultResultCallback_t) >= 20 );
C_ASSERT( offsetof(u32_SubmitPlayerResultResultCallback_t, m_eResult) == 0 );
C_ASSERT( sizeof(u32_SubmitPlayerResultResultCallback_t().m_eResult) >= 4 );
C_ASSERT( offsetof(u32_SubmitPlayerResultResultCallback_t, ullUniqueGameID) == 4 );
C_ASSERT( sizeof(u32_SubmitPlayerResultResultCallback_t().ullUniqueGameID) >= 8 );
C_ASSERT( offsetof(u32_SubmitPlayerResultResultCallback_t, steamIDPlayer) == 12 );
C_ASSERT( sizeof(u32_SubmitPlayerResultResultCallback_t().steamIDPlayer) >= 8 );

static void SubmitPlayerResultResultCallback_t_u_from_w(void *dst, const void *src)
{
    u_SubmitPlayerResultResultCallback_t *d = (u_SubmitPlayerResultResultCallback_t *)dst;
    const w_SubmitPlayerResultResultCallback_t *s = (const w_SubmitPlayerResultResultCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->ullUniqueGameID = s->ullUniqueGameID;
    d->steamIDPlayer = s->steamIDPlayer;
}
#ifdef __x86_64__
w64_SubmitPlayerResultResultCallback_t::operator u64_SubmitPlayerResultResultCallback_t() const
{
    u64_SubmitPlayerResultResultCallback_t ret;
    SubmitPlayerResultResultCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


static void SubmitPlayerResultResultCallback_t_w_from_u(void *dst, const void *src)
{
    w_SubmitPlayerResultResultCallback_t *d = (w_SubmitPlayerResultResultCallback_t *)dst;
    const u_SubmitPlayerResultResultCallback_t *s = (const u_SubmitPlayerResultResultCallback_t *)src;

    d->m_eResult = s->m_eResult;
    d->ullUniqueGameID = s->ullUniqueGameID;
    d->steamIDPlayer = s->steamIDPlayer;
}
#ifdef __x86_64__
u64_SubmitPlayerResultResultCallback_t::operator w64_SubmitPlayerResultResultCallback_t() const
{
    w64_SubmitPlayerResultResultCallback_t ret;
    SubmitPlayerResultResultCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
w32_SubmitPlayerResultResultCallback_t::operator u32_SubmitPlayerResultResultCallback_t() const
{
    u32_SubmitPlayerResultResultCallback_t ret;
    SubmitPlayerResultResultCallback_t_u_from_w((void *)&ret, (const void *)this);
    return ret;
}
#endif


#ifdef __i386__
u32_SubmitPlayerResultResultCallback_t::operator w32_SubmitPlayerResultResultCallback_t() const
{
    w32_SubmitPlayerResultResultCallback_t ret;
    SubmitPlayerResultResultCallback_t_w_from_u((void *)&ret, (const void *)this);
    return ret;
}
#endif

#ifdef __i386__
const struct callback_def callback_data[] =
{
    { 152, 160, 24, 16, MicroTxnAuthorizationResponse_t_123_w_from_u },
    /*{ 152, 122, 24, 16, MicroTxnAuthorizationResponse_t_109_w_from_u },*/
    { 209, 160, 40, 32, GSReputation_t_123_w_from_u },
    /*{ 209, 122, 40, 32, GSReputation_t_108_w_from_u },*/
    { 513, 160, 16, 12, LobbyCreated_t_123_w_from_u },
    /*{ 513, 122, 16, 12, LobbyCreated_t_099u_w_from_u },*/
    { 1023, 160, 40, 36, FileDetailsResult_t_w_from_u },
    { 1106, 160, 32, 28, LeaderboardScoreUploaded_t_123_w_from_u },
    /*{ 1106, 122, 32, 28, LeaderboardScoreUploaded_t_104_w_from_u },*/
    { 1111, 160, 16, 12, LeaderboardUGCSet_t_123_w_from_u },
    /*{ 1111, 122, 16, 12, LeaderboardUGCSet_t_111x_w_from_u },*/
    { 1112, 160, 24, 20, PS3TrophiesInstalled_t_123_w_from_u },
    /*{ 1112, 122, 24, 20, PS3TrophiesInstalled_t_112x_w_from_u },*/
    { 1221, 160, 712, 704, SteamNetConnectionStatusChangedCallback_t_153a_w_from_u },
    /*{ 1221, 152, 712, 704, SteamNetConnectionStatusChangedCallback_t_144_w_from_u },*/
    { 1221, 151, 584, 576, SteamNetConnectionStatusChangedCallback_t_151_w_from_u },
    { 1303, 151, 288, 280, RemoteStorageAppSyncProgress_t_123_w_from_u },
    /*{ 1303, 122, 288, 280, RemoteStorageAppSyncProgress_t_111x_w_from_u },*/
    { 1307, 160, 280, 272, RemoteStorageFileShareResult_t_128x_w_from_u },
    { 1307, 128, 16, 12, RemoteStorageFileShareResult_t_123_w_from_u },
    /*{ 1307, 122, 16, 12, RemoteStorageFileShareResult_t_111x_w_from_u },*/
    { 1308, 116, 40, 32, RemoteStorageDownloadUGCResult_t_111x_w_from_u },
    { 1309, 160, 24, 16, RemoteStoragePublishFileResult_t_125_w_from_u },
    { 1309, 124, 16, 12, RemoteStoragePublishFileResult_t_123_w_from_u },
    /*{ 1309, 122, 16, 12, RemoteStoragePublishFileResult_t_116x_w_from_u },*/
    { 1310, 117, 1744, 1732, RemoteStorageGetPublishedFileDetailsResult_t_116x_w_from_u },
    { 1311, 160, 16, 12, RemoteStorageDeletePublishedFileResult_t_123_w_from_u },
    /*{ 1311, 122, 16, 12, RemoteStorageDeletePublishedFileResult_t_116x_w_from_u },*/
    { 1312, 160, 416, 412, RemoteStorageEnumerateUserPublishedFilesResult_t_123_w_from_u },
    /*{ 1312, 122, 416, 412, RemoteStorageEnumerateUserPublishedFilesResult_t_116x_w_from_u },*/
    { 1313, 160, 16, 12, RemoteStorageSubscribePublishedFileResult_t_123_w_from_u },
    { 1313, 122, 4, 4, nullptr },
    { 1314, 160, 616, 612, RemoteStorageEnumerateUserSubscribedFilesResult_t_123_w_from_u },
    /*{ 1314, 122, 616, 612, RemoteStorageEnumerateUserSubscribedFilesResult_t_116x_w_from_u },*/
    { 1315, 160, 16, 12, RemoteStorageUnsubscribePublishedFileResult_t_123_w_from_u },
    { 1315, 122, 4, 4, nullptr },
    { 1316, 160, 24, 16, RemoteStorageUpdatePublishedFileResult_t_125_w_from_u },
    { 1316, 124, 16, 12, RemoteStorageUpdatePublishedFileResult_t_123_w_from_u },
    /*{ 1316, 122, 16, 12, RemoteStorageUpdatePublishedFileResult_t_116x_w_from_u },*/
    { 1317, 160, 296, 288, RemoteStorageDownloadUGCResult_t_123_w_from_u },
    /*{ 1317, 122, 296, 288, RemoteStorageDownloadUGCResult_t_116x_w_from_u },*/
    { 1318, 160, 9760, 9748, RemoteStorageGetPublishedFileDetailsResult_t_126_w_from_u },
    { 1318, 125, 9752, 9744, RemoteStorageGetPublishedFileDetailsResult_t_123_w_from_u },
    /*{ 1318, 122, 9752, 9744, RemoteStorageGetPublishedFileDetailsResult_t_119x_w_from_u },*/
    { 1318, 119, 9752, 9740, RemoteStorageGetPublishedFileDetailsResult_t_119_w_from_u },
    { 1318, 118, 9496, 9484, RemoteStorageGetPublishedFileDetailsResult_t_118_w_from_u },
    { 1319, 160, 624, 620, RemoteStorageEnumerateWorkshopFilesResult_t_125_w_from_u },
    { 1319, 124, 616, 612, RemoteStorageEnumerateWorkshopFilesResult_t_123_w_from_u },
    /*{ 1319, 122, 616, 612, RemoteStorageEnumerateWorkshopFilesResult_t_119_w_from_u },*/
    { 1320, 160, 32, 28, RemoteStorageGetPublishedItemVoteDetailsResult_t_123_w_from_u },
    /*{ 1320, 122, 32, 28, RemoteStorageGetPublishedItemVoteDetailsResult_t_119_w_from_u },*/
    { 1324, 160, 16, 12, RemoteStorageUpdateUserPublishedItemVoteResult_t_123_w_from_u },
    /*{ 1324, 122, 16, 12, RemoteStorageUpdateUserPublishedItemVoteResult_t_119_w_from_u },*/
    { 1325, 160, 24, 16, RemoteStorageUserVoteDetails_t_123_w_from_u },
    /*{ 1325, 122, 24, 16, RemoteStorageUserVoteDetails_t_119_w_from_u },*/
    { 1326, 160, 416, 412, RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123_w_from_u },
    /*{ 1326, 122, 416, 412, RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119_w_from_u },*/
    { 1327, 160, 24, 16, RemoteStorageSetUserPublishedFileActionResult_t_123_w_from_u },
    /*{ 1327, 122, 24, 16, RemoteStorageSetUserPublishedFileActionResult_t_119_w_from_u },*/
    { 1330, 160, 24, 20, RemoteStoragePublishedFileUpdated_t_w_from_u },
    { 2101, 160, 32, 24, HTTPRequestCompleted_t_132x_w_from_u },
    { 2101, 132, 24, 20, HTTPRequestCompleted_t_123_w_from_u },
    /*{ 2101, 122, 24, 20, HTTPRequestCompleted_t_115_w_from_u },*/
    { 2102, 160, 16, 12, HTTPRequestHeadersReceived_t_123_w_from_u },
    /*{ 2102, 122, 16, 12, HTTPRequestHeadersReceived_t_121x_w_from_u },*/
    { 2103, 160, 24, 20, HTTPRequestDataReceived_t_123_w_from_u },
    /*{ 2103, 122, 24, 20, HTTPRequestDataReceived_t_121x_w_from_u },*/
    { 2803, 160, 40, 32, SteamInputConfigurationLoaded_t_w_from_u },
    { 2804, 160, 32, 24, SteamInputGamepadSlotChange_t_w_from_u },
    { 3402, 160, 9792, 9776, SteamUGCRequestUGCDetailsResult_t_160_w_from_u },
    { 3402, 159, 9784, 9768, SteamUGCRequestUGCDetailsResult_t_128x_w_from_u },
    { 3402, 129, 9776, 9764, SteamUGCRequestUGCDetailsResult_t_129_w_from_u },
    { 3402, 128, 9768, 9760, SteamUGCRequestUGCDetailsResult_t_126_w_from_u },
    { 3403, 160, 24, 16, CreateItemResult_t_w_from_u },
    { 3405, 160, 32, 28, ItemInstalled_t_160_w_from_u },
    { 3405, 159, 16, 12, ItemInstalled_t_130_w_from_u },
    { 3406, 160, 24, 16, DownloadItemResult_t_w_from_u },
    { 3412, 160, 24, 20, AddUGCDependencyResult_t_w_from_u },
    { 3413, 160, 24, 20, RemoveUGCDependencyResult_t_w_from_u },
    { 3414, 160, 24, 16, AddAppDependencyResult_t_w_from_u },
    { 3415, 160, 24, 16, RemoveAppDependencyResult_t_w_from_u },
    { 3416, 160, 152, 148, GetAppDependenciesResult_t_w_from_u },
    { 3417, 160, 16, 12, DeleteItemResult_t_w_from_u },
    { 4502, 160, 48, 48, HTML_NeedsPaint_t_w_from_u },
    { 4503, 160, 20, 20, HTML_StartRequest_t_w_from_u },
    { 4505, 160, 24, 24, HTML_URLChanged_t_w_from_u },
    { 4506, 160, 12, 12, HTML_FinishedRequest_t_w_from_u },
    { 4507, 160, 8, 8, HTML_OpenLinkInNewTab_t_w_from_u },
    { 4508, 160, 8, 8, HTML_ChangedTitle_t_w_from_u },
    { 4513, 160, 20, 20, HTML_LinkAtPosition_t_w_from_u },
    { 4514, 160, 8, 8, HTML_JSAlert_t_w_from_u },
    { 4515, 160, 8, 8, HTML_JSConfirm_t_w_from_u },
    { 4516, 160, 12, 12, HTML_FileOpenDialog_t_w_from_u },
    { 4517, 132, 16, 16, HTML_ComboNeedsPaint_t_w_from_u },
    { 4521, 160, 28, 28, HTML_NewWindow_t_132x_w_from_u },
    { 4521, 132, 24, 24, HTML_NewWindow_t_130x_w_from_u },
    { 4523, 160, 8, 8, HTML_StatusText_t_w_from_u },
    { 4524, 160, 8, 8, HTML_ShowToolTip_t_w_from_u },
    { 4525, 160, 8, 8, HTML_UpdateToolTip_t_w_from_u },
    { 4704, 160, 24, 20, SteamInventoryStartPurchaseResult_t_w_from_u },
    { 5211, 160, 16, 12, RequestPlayersForGameProgressCallback_t_w_from_u },
    { 5212, 160, 64, 56, RequestPlayersForGameResultCallback_t_w_from_u },
    { 5213, 160, 24, 20, RequestPlayersForGameFinalResultCallback_t_w_from_u },
    { 5214, 160, 24, 20, SubmitPlayerResultResultCallback_t_w_from_u },
    { 5215, 160, 16, 12, EndGameResultCallback_t_w_from_u },
    { 5301, 160, 280, 276, JoinPartyCallback_t_w_from_u },
    { 5302, 160, 16, 12, CreateBeaconCallback_t_w_from_u },
};
#endif
#ifdef __x86_64__
const struct callback_def callback_data[] =
{
    { 152, 160, 24, 16, MicroTxnAuthorizationResponse_t_123_w_from_u },
    { 152, 122, 24, 24, MicroTxnAuthorizationResponse_t_109_w_from_u },
    { 209, 160, 40, 32, GSReputation_t_123_w_from_u },
    { 209, 122, 40, 40, GSReputation_t_108_w_from_u },
    { 513, 160, 16, 12, LobbyCreated_t_123_w_from_u },
    { 513, 122, 16, 16, LobbyCreated_t_099u_w_from_u },
    { 1023, 160, 40, 36, FileDetailsResult_t_w_from_u },
    { 1106, 160, 32, 28, LeaderboardScoreUploaded_t_123_w_from_u },
    { 1106, 122, 32, 32, LeaderboardScoreUploaded_t_104_w_from_u },
    { 1111, 160, 16, 12, LeaderboardUGCSet_t_123_w_from_u },
    { 1111, 122, 16, 16, LeaderboardUGCSet_t_111x_w_from_u },
    { 1112, 160, 24, 20, PS3TrophiesInstalled_t_123_w_from_u },
    { 1112, 122, 24, 24, PS3TrophiesInstalled_t_112x_w_from_u },
    { 1221, 160, 712, 704, SteamNetConnectionStatusChangedCallback_t_153a_w_from_u },
    /*{ 1221, 152, 712, 704, SteamNetConnectionStatusChangedCallback_t_144_w_from_u },*/
    { 1221, 151, 584, 576, SteamNetConnectionStatusChangedCallback_t_151_w_from_u },
    { 1303, 151, 288, 280, RemoteStorageAppSyncProgress_t_123_w_from_u },
    { 1303, 122, 288, 288, RemoteStorageAppSyncProgress_t_111x_w_from_u },
    { 1307, 160, 280, 272, RemoteStorageFileShareResult_t_128x_w_from_u },
    { 1307, 128, 16, 12, RemoteStorageFileShareResult_t_123_w_from_u },
    { 1307, 122, 16, 16, RemoteStorageFileShareResult_t_111x_w_from_u },
    { 1308, 116, 40, 40, RemoteStorageDownloadUGCResult_t_111x_w_from_u },
    { 1309, 160, 24, 16, RemoteStoragePublishFileResult_t_125_w_from_u },
    { 1309, 124, 16, 12, RemoteStoragePublishFileResult_t_123_w_from_u },
    { 1309, 122, 16, 16, RemoteStoragePublishFileResult_t_116x_w_from_u },
    { 1310, 117, 1744, 1744, RemoteStorageGetPublishedFileDetailsResult_t_116x_w_from_u },
    { 1311, 160, 16, 12, RemoteStorageDeletePublishedFileResult_t_123_w_from_u },
    { 1311, 122, 16, 16, RemoteStorageDeletePublishedFileResult_t_116x_w_from_u },
    { 1312, 160, 416, 412, RemoteStorageEnumerateUserPublishedFilesResult_t_123_w_from_u },
    { 1312, 122, 416, 416, RemoteStorageEnumerateUserPublishedFilesResult_t_116x_w_from_u },
    { 1313, 160, 16, 12, RemoteStorageSubscribePublishedFileResult_t_123_w_from_u },
    { 1313, 122, 4, 4, nullptr },
    { 1314, 160, 616, 612, RemoteStorageEnumerateUserSubscribedFilesResult_t_123_w_from_u },
    { 1314, 122, 616, 616, RemoteStorageEnumerateUserSubscribedFilesResult_t_116x_w_from_u },
    { 1315, 160, 16, 12, RemoteStorageUnsubscribePublishedFileResult_t_123_w_from_u },
    { 1315, 122, 4, 4, nullptr },
    { 1316, 160, 24, 16, RemoteStorageUpdatePublishedFileResult_t_125_w_from_u },
    { 1316, 124, 16, 12, RemoteStorageUpdatePublishedFileResult_t_123_w_from_u },
    { 1316, 122, 16, 16, RemoteStorageUpdatePublishedFileResult_t_116x_w_from_u },
    { 1317, 160, 296, 288, RemoteStorageDownloadUGCResult_t_123_w_from_u },
    { 1317, 122, 296, 296, RemoteStorageDownloadUGCResult_t_116x_w_from_u },
    { 1318, 160, 9760, 9748, RemoteStorageGetPublishedFileDetailsResult_t_126_w_from_u },
    { 1318, 125, 9752, 9744, RemoteStorageGetPublishedFileDetailsResult_t_123_w_from_u },
    { 1318, 122, 9752, 9752, RemoteStorageGetPublishedFileDetailsResult_t_119x_w_from_u },
    /*{ 1318, 119, 9752, 9752, RemoteStorageGetPublishedFileDetailsResult_t_119_w_from_u },*/
    { 1318, 118, 9496, 9496, RemoteStorageGetPublishedFileDetailsResult_t_118_w_from_u },
    { 1319, 160, 624, 620, RemoteStorageEnumerateWorkshopFilesResult_t_125_w_from_u },
    { 1319, 124, 616, 612, RemoteStorageEnumerateWorkshopFilesResult_t_123_w_from_u },
    { 1319, 122, 616, 616, RemoteStorageEnumerateWorkshopFilesResult_t_119_w_from_u },
    { 1320, 160, 32, 28, RemoteStorageGetPublishedItemVoteDetailsResult_t_123_w_from_u },
    { 1320, 122, 32, 32, RemoteStorageGetPublishedItemVoteDetailsResult_t_119_w_from_u },
    { 1324, 160, 16, 12, RemoteStorageUpdateUserPublishedItemVoteResult_t_123_w_from_u },
    { 1324, 122, 16, 16, RemoteStorageUpdateUserPublishedItemVoteResult_t_119_w_from_u },
    { 1325, 160, 24, 16, RemoteStorageUserVoteDetails_t_123_w_from_u },
    { 1325, 122, 24, 24, RemoteStorageUserVoteDetails_t_119_w_from_u },
    { 1326, 160, 416, 412, RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_123_w_from_u },
    { 1326, 122, 416, 416, RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_119_w_from_u },
    { 1327, 160, 24, 16, RemoteStorageSetUserPublishedFileActionResult_t_123_w_from_u },
    { 1327, 122, 24, 24, RemoteStorageSetUserPublishedFileActionResult_t_119_w_from_u },
    { 1330, 160, 24, 20, RemoteStoragePublishedFileUpdated_t_w_from_u },
    { 2101, 160, 32, 24, HTTPRequestCompleted_t_132x_w_from_u },
    { 2101, 132, 24, 20, HTTPRequestCompleted_t_123_w_from_u },
    { 2101, 122, 24, 24, HTTPRequestCompleted_t_115_w_from_u },
    { 2102, 160, 16, 12, HTTPRequestHeadersReceived_t_123_w_from_u },
    { 2102, 122, 16, 16, HTTPRequestHeadersReceived_t_121x_w_from_u },
    { 2103, 160, 24, 20, HTTPRequestDataReceived_t_123_w_from_u },
    { 2103, 122, 24, 24, HTTPRequestDataReceived_t_121x_w_from_u },
    { 2803, 160, 40, 32, SteamInputConfigurationLoaded_t_w_from_u },
    { 2804, 160, 32, 24, SteamInputGamepadSlotChange_t_w_from_u },
    { 3402, 160, 9792, 9776, SteamUGCRequestUGCDetailsResult_t_160_w_from_u },
    { 3402, 159, 9784, 9768, SteamUGCRequestUGCDetailsResult_t_128x_w_from_u },
    { 3402, 129, 9776, 9764, SteamUGCRequestUGCDetailsResult_t_129_w_from_u },
    { 3402, 128, 9768, 9760, SteamUGCRequestUGCDetailsResult_t_126_w_from_u },
    { 3403, 160, 24, 16, CreateItemResult_t_w_from_u },
    { 3405, 160, 32, 28, ItemInstalled_t_160_w_from_u },
    { 3405, 159, 16, 12, ItemInstalled_t_130_w_from_u },
    { 3406, 160, 24, 16, DownloadItemResult_t_w_from_u },
    { 3412, 160, 24, 20, AddUGCDependencyResult_t_w_from_u },
    { 3413, 160, 24, 20, RemoveUGCDependencyResult_t_w_from_u },
    { 3414, 160, 24, 16, AddAppDependencyResult_t_w_from_u },
    { 3415, 160, 24, 16, RemoveAppDependencyResult_t_w_from_u },
    { 3416, 160, 152, 148, GetAppDependenciesResult_t_w_from_u },
    { 3417, 160, 16, 12, DeleteItemResult_t_w_from_u },
    { 4502, 160, 56, 52, HTML_NeedsPaint_t_w_from_u },
    { 4503, 160, 40, 32, HTML_StartRequest_t_w_from_u },
    { 4505, 160, 48, 36, HTML_URLChanged_t_w_from_u },
    { 4506, 160, 24, 20, HTML_FinishedRequest_t_w_from_u },
    { 4507, 160, 16, 12, HTML_OpenLinkInNewTab_t_w_from_u },
    { 4508, 160, 16, 12, HTML_ChangedTitle_t_w_from_u },
    { 4513, 160, 32, 24, HTML_LinkAtPosition_t_w_from_u },
    { 4514, 160, 16, 12, HTML_JSAlert_t_w_from_u },
    { 4515, 160, 16, 12, HTML_JSConfirm_t_w_from_u },
    { 4516, 160, 24, 20, HTML_FileOpenDialog_t_w_from_u },
    { 4517, 132, 24, 20, HTML_ComboNeedsPaint_t_w_from_u },
    { 4521, 160, 40, 32, HTML_NewWindow_t_132x_w_from_u },
    { 4521, 132, 32, 28, HTML_NewWindow_t_130x_w_from_u },
    { 4523, 160, 16, 12, HTML_StatusText_t_w_from_u },
    { 4524, 160, 16, 12, HTML_ShowToolTip_t_w_from_u },
    { 4525, 160, 16, 12, HTML_UpdateToolTip_t_w_from_u },
    { 4704, 160, 24, 20, SteamInventoryStartPurchaseResult_t_w_from_u },
    { 5211, 160, 16, 12, RequestPlayersForGameProgressCallback_t_w_from_u },
    { 5212, 160, 64, 56, RequestPlayersForGameResultCallback_t_w_from_u },
    { 5213, 160, 24, 20, RequestPlayersForGameFinalResultCallback_t_w_from_u },
    { 5214, 160, 24, 20, SubmitPlayerResultResultCallback_t_w_from_u },
    { 5215, 160, 16, 12, EndGameResultCallback_t_w_from_u },
    { 5301, 160, 280, 276, JoinPartyCallback_t_w_from_u },
    { 5302, 160, 16, 12, CreateBeaconCallback_t_w_from_u },
};
#endif
const unsigned int callback_data_size = ARRAY_SIZE(callback_data);
